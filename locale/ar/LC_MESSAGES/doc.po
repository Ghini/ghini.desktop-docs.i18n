# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2012, Brett Adams; 2012-2015, Mario Frasca
# This file is distributed under the same license as the Ghini package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2018-10-17 08:50-0500\n"
"PO-Revision-Date: 2017-07-02 20:20+0000\n"
"Last-Translator: Mario Frasca <mariotomo@gmail.com>\n"
"Language: ar\n"
"Language-Team: Arabic "
"<https://hosted.weblate.org/projects/ghini/documentation-10/ar/>\n"
"Plural-Forms: nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : "
"n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../administration.rst:2
msgid "Database Administration"
msgstr ""

#: ../../administration.rst:4
msgid ""
"If you are using a real DBMS to hold your botanic data, then you need do "
"something about database administration. While database administration is"
" far beyond the scope of this document, we make our users aware of it."
msgstr ""

#: ../../administration.rst:11
msgid ""
"SQLite is not what one would consider a real DBMS: each SQLite database "
"is just in one file. Make safety copies and you will be fine. If you "
"don't know where to look for your database files, consider that, per "
"default, bauble puts its data in the ``~/.bauble/`` directory."
msgstr ""

#: ../../administration.rst:16
msgid ""
"In Windows it is somewhere in your ``AppData`` directory, most likely in "
"``AppData\\Roaming\\Bauble``. Do keep in mind that Windows does its best "
"to hide the ``AppData`` directory structure to normal users."
msgstr ""

#: ../../administration.rst:20
msgid ""
"The fastest way to open it is with the file explorer: type ``%APPDATA%`` "
"and hit enter."
msgstr ""

#: ../../administration.rst:26
msgid ""
"Please refer to the `official documentation <https://mariadb.com/kb/en"
"/the-mariadb-library/documentation/>`_."
msgstr ""

#: ../../administration.rst:28
msgid ""
"Backing up and restoring databases is described in breadth and depth "
"starting at `this page <https://mariadb.com/kb/en/the-mariadb-library"
"/backing-up-and-restoring-databases/>`_."
msgstr ""

#: ../../administration.rst:35
msgid ""
"Please refer to the official documentation. A very thorough discussion of"
" your backup options starts at `chapter 24 "
"<http://www.postgresql.org/docs/9.1/static/backup.html>`_."
msgstr ""

#: ../../administration.rst:39
msgid "Ghini Configuration"
msgstr ""

#: ../../administration.rst:41
msgid ""
"Ghini uses a configuration file to store values across invocations. This "
"file is associated to a user account and every user will have their own "
"configuration file."
msgstr ""

#: ../../administration.rst:45
msgid ""
"To review the content of the Ghini configuration file, type ``:prefs`` in"
" the text entry area where you normally type your searches, then hit "
"enter."
msgstr ""

#: ../../administration.rst:48
msgid ""
"You normally do not need tweaking the configuration file, but you can do "
"so with a normal text editor program. Ghini configuration file is at the "
"default location for SQLite databases."
msgstr ""

#: ../../administration.rst:53
msgid "Reporting Errors"
msgstr ""

#: ../../administration.rst:55
msgid ""
"Should you notice anything unexpected in Ghini's behaviour, please "
"consider filing an issue on the Ghini development site."
msgstr ""

#: ../../administration.rst:58
msgid "Ghini development site can be accessed via the Help menu."
msgstr ""

#: ../../building.rst:2
msgid "Developer's Manual"
msgstr ""

#: ../../building.rst:5
msgid "Helping Ghini development"
msgstr ""

#: ../../building.rst:7
msgid ""
"Installing Ghini always includes downloading the sources, connected to "
"the github repository. This is so because in our eyes, every user is "
"always potentially also a developer."
msgstr ""

#: ../../building.rst:11
msgid ""
"If you want to contribute to Ghini, you can do so in quite a few "
"different ways:"
msgstr ""

#: ../../building.rst:13
msgid ""
"Use the software, note the things you don't like, `open an issue "
"<http://github.com/Ghini/ghini.desktop/issues/new>`_ for each of them. A "
"developer will react sooner than you can imagine."
msgstr ""

#: ../../building.rst:16
msgid ""
"If you have an idea of what you miss in the software but can't quite "
"formalize it into separate issues, you could consider hiring a "
"professional. This is the best way to make sure that something happens "
"quickly on Ghini. Do make sure the developer opens issues and publishes "
"their contribution on github."
msgstr ""

#: ../../building.rst:21
msgid ""
"Translate! Any help with translations will be welcome, so please do! you "
"can do this without installing anything on your computer, just using the "
"on-line translation service offered by http://hosted.weblate.org/"
msgstr ""

#: ../../building.rst:24
msgid ""
"fork the respository, choose an issue, solve it, open a pull request. See"
" the `bug solving workflow`_ below."
msgstr ""

#: ../../building.rst:27
msgid ""
"If you haven't yet installed Ghini, and want to have a look at its code "
"history, you can open our `github project page "
"<http://github.com/Ghini/ghini.desktop>`_ and see all that has been going"
" on around Ghini since its inception as Bauble, back in the year 2004."
msgstr ""

#: ../../building.rst:33
msgid "Software source, versions, branches"
msgstr ""

#: ../../building.rst:35
msgid ""
"If you want a particular version of Ghini, we release and maintain "
"versions as branches. You should ``git checkout`` the branch "
"corresponding to the version of your choice."
msgstr ""

#: ../../building.rst:40
msgid "production line"
msgstr ""

#: ../../building.rst:42
msgid ""
"Branch names for Ghini stable (production) versions are of the form "
"``ghini-x.y`` (eg: ghini-3.1); branch names where Ghini testing versions "
"are published are of the form ``ghini-x.y-dev`` (eg: ghini-3.1-dev)."
msgstr ""

#: ../../building.rst:47
msgid "Development Workflow"
msgstr ""

#: ../../building.rst:49
msgid ""
"Our workflow is to continuously commit to the testing branch, to often "
"push them to github, to let travis-ci and coveralls.io check the quality "
"of the pushed testing branches, finally, from time to time, to merge the "
"testing branch into the corresponding release."
msgstr ""

#: ../../building.rst:54
msgid ""
"When working at larger issues, which seem to take longer than a couple of"
" days, I might open a branch associated to the issue. I don't do this "
"very often."
msgstr ""

#: ../../building.rst:59
msgid "larger issues"
msgstr ""

#: ../../building.rst:61
msgid ""
"When facing a single larger issue, create a branch tag at the tip of a "
"main development line (e.g.: ``ghini-3.1-dev``), and follow the workflow "
"described at"
msgstr ""

#: ../../building.rst:67
msgid "in short::"
msgstr ""

#: ../../building.rst:73
msgid ""
"Work on the new temporary branch. When ready, go to github, merge the "
"branch with the main development line from which you branched, solve "
"conflicts where necessary, delete the temporary branch."
msgstr ""

#: ../../building.rst:77
msgid ""
"When ready for publication, merge the development line into the "
"corresponding production line."
msgstr ""

#: ../../building.rst:81
msgid "Updating the set of translatable strings"
msgstr ""

#: ../../building.rst:83
msgid ""
"From time to time, during the process of updating the software, you will "
"be adding or modifying strings in the python sources, in the "
"documentation, in the glade sources. Most of our strings are "
"translatable, and are offered to weblate for people to contribute, in the"
" form of several ``.po`` files."
msgstr ""

#: ../../building.rst:88
msgid ""
"A ``po`` is mostly composed of pairs of text portions, original and "
"translation, and is specific to a target language. When a translator adds"
" a translation on weblate, this reaches our repository on github. When a "
"programmer adds a string to the software, this reaches weblate as \"to be"
" translated\"."
msgstr ""

#: ../../building.rst:94
msgid ""
"Weblate hosts the `Ghini <https://hosted.weblate.org/projects/ghini/>`_ "
"project. Within this project we have components, each of which "
"corresponds to a branch of a repository on github. Each component accepts"
" translations in several languages."
msgstr ""

#: ../../building.rst:100
msgid "component"
msgstr ""

#: ../../building.rst:100
msgid "repository"
msgstr ""

#: ../../building.rst:100
msgid "branch"
msgstr ""

#: ../../building.rst:103
msgid "Desktop 3.1"
msgstr ""

#: ../../building.rst:103 ../../building.rst:105
msgid "ghini-3.1-dev"
msgstr ""

#: ../../building.rst:105
msgid "Documentation 3.1"
msgstr ""

#: ../../building.rst:107
msgid "Pocket"
msgstr ""

#: ../../building.rst:107 ../../ghini-family.rst:24
msgid "ghini.pocket"
msgstr ""

#: ../../building.rst:110
msgid ""
"To update the ``po`` files relative to the *software*, you set the "
"working directory to the root of your checkout of *ghini.desktop*, and "
"you run the script::"
msgstr ""

#: ../../building.rst:116
msgid ""
"To update the ``po`` files relative to the *documentation*, you set the "
"working directory to the root of your checkout of *ghini.desktop-"
"docs.i18n*, and you run the script::"
msgstr ""

#: ../../building.rst:122
msgid ""
"When you run either of the above mentioned scripts, chances are you need "
"to commit *all* ``po`` files in the project. You may want to review the "
"changes before committing them to the respository. This is most important"
" when you perform a marginal correction to a string, like removing a "
"typo."
msgstr ""

#: ../../building.rst:127
msgid ""
"Something that happens: running into a conflict. Solving conflicts is not"
" difficult once you know how to do that. First of all, add weblate as "
"remote::"
msgstr ""

#: ../../building.rst:132
msgid ""
"Then make sure we are in the correct repository, on the correct branch, "
"update the remote, merge with it::"
msgstr ""

#: ../../building.rst:139
msgid ""
"`Our documentation <https://readthedocs.org/projects/ghini/>`_ on "
"readthedocs has an original English version, and several translations. We"
" just follow the `description of localisation "
"<http://docs.readthedocs.io/en/latest/localization.html>`_, there's "
"nothing that we invented ourselves here."
msgstr ""

#: ../../building.rst:145
msgid ""
"Readthedocs checks the project's *Language* setting, and invokes "
"``sphinx-intl`` to produce the formatted documentation in the target "
"language. With the default configuration —which we did not alter— "
"``sphinx-intl`` expects one ``po`` file per source document, named as the"
" source document, and that they all reside in the directory "
"``local/$(LANG)/LC_MESSAGES/``."
msgstr ""

#: ../../building.rst:152
msgid ""
"On the other hand, Weblate (and ourselves) prefers a single ``po`` file "
"per language, and keeps them all in the same ``/po`` directory, just as "
"we do for the software project: ``/po/$(LANG).po``."
msgstr ""

#: ../../building.rst:156
msgid ""
"In order not to repeat information, and to let both systems work their "
"natural way, we have two sets of symbolic links (git honors them)."
msgstr ""

#: ../../building.rst:159
msgid ""
"To summarise: when a file in the documentation is updated, the "
"``runme.sh`` script will:"
msgstr ""

#: ../../building.rst:162
msgid "copy the ``rst`` files from the software to the documentation;"
msgstr ""

#: ../../building.rst:163
msgid "create a new ``pot`` file for each of the documentation files;"
msgstr ""

#: ../../building.rst:164
msgid "merge all ``pot`` files into one ``doc.pot``;"
msgstr ""

#: ../../building.rst:165
msgid ""
"use the updated ``doc.pot`` to update all ``doc.po`` files (one per "
"language);"
msgstr ""

#: ../../building.rst:166
msgid "create all symbolic links:"
msgstr ""

#: ../../building.rst:168
msgid "those expected by ``sphinx-intl`` in ``/local/$(LANG)/LC_MESSAGES/``"
msgstr ""

#: ../../building.rst:169
msgid "those used by weblate in ``/po/$(LANG).po``"
msgstr ""

#: ../../building.rst:171
msgid ""
"We could definitely write the above in a Makefile, or even better include"
" it in ``/doc/Makefile``. Who knows, maybe we will do that."
msgstr ""

#: ../../building.rst:175
msgid "Producing the docs locally"
msgstr ""

#: ../../building.rst:177
msgid ""
"The above description is about how we help external sites produce our "
"documentation so that it is online for all to see.  But what if you want "
"to have the documentation locally, for example if you want to edit and "
"review before pushing your commits to the cloud?"
msgstr ""

#: ../../building.rst:182
msgid ""
"In order to run sphinx locally, you need to install it **within** the "
"same virtual environment as ghini, and to install it there, you need to "
"have a sphinx version whose dependencies don not conflict with "
"ghini.desktop's dependecies."
msgstr ""

#: ../../building.rst:187
msgid "What we do to keep this in order?"
msgstr ""

#: ../../building.rst:189
msgid ""
"We state this extra dependency in the ``setup.py`` file, as an "
"``extras_require`` entry.  Create and activate the virtual environment, "
"then run ``easy_install ghini.desktop[docs]``.  This gets you the sphinx "
"version as declared in the ``setup.py`` file."
msgstr ""

#: ../../building.rst:194
msgid ""
"If all you want is the html documentation built locally, run ``./setup.py"
" install docs``.  For more options, enter the ``doc`` directory and run "
"``make``."
msgstr ""

#: ../../building.rst:199
msgid "Which way do the translated strings reach our users?"
msgstr ""

#: ../../building.rst:201
msgid ""
"A new translator asked the question, adding: »Is this an automated "
"process from Weblate --> GIT --> Ghini Desktop installed on users "
"computers, or does this require manual steps?"
msgstr ""

#: ../../building.rst:205
msgid ""
"The aswer is that the whole interaction is quite complex, and it depends "
"on the component."
msgstr ""

#: ../../building.rst:208
msgid ""
"When it comes to ``ghini.desktop``, when you do a global installation, "
"you don't know which language your users will set up their environment, "
"and a user can change the language configuration any time.  So what we do"
" is to install the software in English together with a translation table "
"from English to whatever else, in particular Italian or Hungarian. Then "
"the GUI libraries (Android or GTK) know where to look for the translation"
" strings. These translation tables are generated during the installation "
"or upgrade process, based on the strings you see on Weblate."
msgstr ""

#: ../../building.rst:217
msgid ""
"Before any of the above gets activated, the path followed by your "
"translations is as you describe: Weblate pushes the strings to github, "
"directly into the development line `ghini-3.1-dev`; I see them, if I "
"understand at least the structure of that language I review them, maybe I"
" look them up in wikipedia or get them translated back to Italian, "
"Spanish or English by some automatic translation service; sometimes I "
"need to solve conflicts arising because of changed context, not too often"
" fortunately; from time to time I publish the development line "
"`ghini-3.1-dev` to the production line `ghini-3.1`, and this is the "
"moment when the new translations finally make it to the distributed "
"software."
msgstr ""

#: ../../building.rst:228
msgid ""
"users will notice a `new version available` warning and can decide to "
"ignore it, or to update."
msgstr ""

#: ../../building.rst:231
msgid ""
"For ``ghini.pocket``, there is no notification to end users, since we're "
"not yet using the google app store."
msgstr ""

#: ../../building.rst:234
msgid "For ``ghini.web``, we haven't yet defined how to distribute it."
msgstr ""

#: ../../building.rst:236
msgid ""
"For ghini's documentation, it's completely automatic, and all is handled "
"by readthedocs.org."
msgstr ""

#: ../../building.rst:241
msgid "Adding missing unit tests"
msgstr ""

#: ../../building.rst:243
msgid ""
"If you are interested contributing to development of Ghini, a good way to"
" do so would be by helping us finding and writing the missing unit tests."
msgstr ""

#: ../../building.rst:246
msgid ""
"A well tested function is one whose behaviour you cannot change without "
"breaking at least one unit test."
msgstr ""

#: ../../building.rst:249
msgid ""
"We all agree that in theory theory and practice match perfectly and that "
"one first writes the tests, then implements the function. In practice, "
"however, practice does not match theory and we have been writing tests "
"after writing and even publishing the functions."
msgstr ""

#: ../../building.rst:254
msgid ""
"This section describes the process of adding unit tests for "
"``bauble.plugins.plants.family.remove_callback``."
msgstr ""

#: ../../building.rst:258
msgid "What to test"
msgstr ""

#: ../../building.rst:260
msgid ""
"First of all, open the coverage report index, and choose a file with low "
"coverage."
msgstr ""

#: ../../building.rst:263
msgid ""
"For this example, run in October 2015, we landed on "
"``bauble.plugins.plants.family``, at 33%."
msgstr ""

#: ../../building.rst:268
msgid ""
"The first two functions which need tests, ``edit_callback`` and "
"``add_genera_callback``, include creation and activation of an object "
"relying on a custom dialog box. We should really first write unit tests "
"for that class, then come back here."
msgstr ""

#: ../../building.rst:273
msgid ""
"The next function, ``remove_callback``, also activates a couple of dialog"
" and message boxes, but in the form of invoking a function requesting "
"user input via yes-no-ok boxes. These functions we can easily replace "
"with a function mocking the behaviour."
msgstr ""

#: ../../building.rst:279
msgid "how to test"
msgstr ""

#: ../../building.rst:281
msgid ""
"So, having decided what to describe in unit test, we look at the code and"
" we see it needs discriminate a couple of cases:"
msgstr ""

#: ../../building.rst:287
msgid "**parameter correctness**"
msgstr ""

#: ../../building.rst:285
msgid "the list of families has no elements."
msgstr ""

#: ../../building.rst:286
msgid "the list of families has more than one element."
msgstr ""

#: ../../building.rst:287
msgid "the list of families has exactly one element."
msgstr ""

#: ../../building.rst:291
msgid "**cascade**"
msgstr ""

#: ../../building.rst:290
msgid "the family has no genera"
msgstr ""

#: ../../building.rst:291
msgid "the family has one or more genera"
msgstr ""

#: ../../building.rst:295
msgid "**confirm**"
msgstr ""

#: ../../building.rst:294
msgid "the user confirms deletion"
msgstr ""

#: ../../building.rst:295
msgid "the user does not confirm deletion"
msgstr ""

#: ../../building.rst:299
msgid "**deleting**"
msgstr ""

#: ../../building.rst:298
msgid "all goes well when deleting the family"
msgstr ""

#: ../../building.rst:299
msgid "there is some error while deleting the family"
msgstr ""

#: ../../building.rst:301
msgid ""
"I decide I will only focus on the **cascade** and the **confirm** "
"aspects. Two binary questions: 4 cases."
msgstr ""

#: ../../building.rst:305
msgid "where to put the tests"
msgstr ""

#: ../../building.rst:307
msgid ""
"Locate the test script and choose the class where to put the extra unit "
"tests."
msgstr ""

#: ../../building.rst:311
msgid "what about skipped tests"
msgstr ""

#: ../../building.rst:314
msgid ""
"The ``FamilyTests`` class contains a skipped test, implementing it will "
"be quite a bit of work because we need rewrite the FamilyEditorPresenter,"
" separate it from the FamilyEditorView and reconsider what to do with the"
" FamilyEditor class, which I think should be removed and replaced with a "
"single function."
msgstr ""

#: ../../building.rst:321
msgid "writing the tests"
msgstr ""

#: ../../building.rst:323
msgid ""
"After the last test in the FamilyTests class, I add the four cases I want"
" to describe, and I make sure they fail, and since I'm lazy, I write the "
"most compact code I know for generating an error::"
msgstr ""

#: ../../building.rst:340
msgid "One test, step by step"
msgstr ""

#: ../../building.rst:342
msgid "Let's start with the first test case."
msgstr ""

#: ../../building.rst:344
msgid "When writing tests, I generally follow the pattern:"
msgstr ""

#: ../../building.rst:346
msgid "T₀ (initial condition),"
msgstr ""

#: ../../building.rst:347
msgid "action,"
msgstr ""

#: ../../building.rst:348
msgid "T₁ (testing the result of the action given the initial conditions)"
msgstr ""

#: ../../building.rst:350
msgid "what's in a name — unit tests"
msgstr ""

#: ../../building.rst:353
msgid ""
"There's a reason why unit tests are called unit tests. Please never test "
"two actions in one test."
msgstr ""

#: ../../building.rst:356
msgid ""
"So let's describe T₀ for the first test, a database holding a family "
"without genera::"
msgstr ""

#: ../../building.rst:364
msgid ""
"We do not want the function being tested to invoke the interactive "
"``utils.yes_no_dialog`` function, we want ``remove_callback`` to invoke a"
" non-interactive replacement function. We achieve this simply by making "
"``utils.yes_no_dialog`` point to a ``lambda`` expression which, like the "
"original interactive function, accepts one parameter and returns a "
"boolean. In this case: ``False``::"
msgstr ""

#: ../../building.rst:382
msgid "Next we test the result."
msgstr ""

#: ../../building.rst:384
msgid ""
"Well, we don't just want to test whether or not the object Arecaceae was "
"deleted, we also should test the value returned by ``remove_callback``, "
"and whether ``yes_no_dialog`` and ``message_details_dialog`` were invoked"
" or not."
msgstr ""

#: ../../building.rst:389
msgid ""
"A ``lambda`` expression is not enough for this. We do something "
"apparently more complex, which will make life a lot easier."
msgstr ""

#: ../../building.rst:392
msgid "Let's first define a rather generic function::"
msgstr ""

#: ../../building.rst:398
msgid ""
"and we grab ``partial`` from the ``functools`` standard module, to "
"partially apply the above ``mockfunc``, leaving only ``msg`` unspecified,"
" and use this partial application, which is a function accepting one "
"parameter and returning a value, to replace the two functions in "
"``utils``. The test function now looks like this::"
msgstr ""

#: ../../building.rst:420
msgid ""
"The test section checks that ``message_details_dialog`` was not invoked, "
"that ``yes_no_dialog`` was invoked, with the correct message parameter, "
"that Arecaceae is still there::"
msgstr ""

#: ../../building.rst:436
msgid "And so on"
msgstr ""

#: ../../building.rst:438
msgid ""
"`there are two kinds of people, those who complete what they start, and "
"so on`"
msgstr ""

#: ../../building.rst:441
msgid ""
"Next test is almost the same, with the difference that the "
"``utils.yes_no_dialog`` should return ``True`` (this we achieve by "
"specifying ``result=True`` in the partial application of the generic "
"``mockfunc``)."
msgstr ""

#: ../../building.rst:446
msgid ""
"With this action, the value returned by ``remove_callback`` should be "
"``True``, and there should be no Arecaceae Family in the database any "
"more::"
msgstr ""

#: ../../building.rst:476
msgid ""
"have a look at commit 734f5bb9feffc2f4bd22578fcee1802c8682ca83 for the "
"other two test functions."
msgstr ""

#: ../../building.rst:480
msgid "Testing logging"
msgstr ""

#: ../../building.rst:482
msgid ""
"Our ``bauble.test.BaubleTestCase`` objects use handlers of the class "
"``bauble.test.MockLoggingHandler``.  Every time an individual unit test "
"is started, the ``setUp`` method will create a new ``handler`` and "
"associate it to the root logger.  The ``tearDown`` method takes care of "
"removing it."
msgstr ""

#: ../../building.rst:487
#, python-format
msgid ""
"You can check for presence of specific logging messages in "
"``self.handler.messages``. ``messages`` is a dictionary, initially empty,"
" with two levels of indexation. First the name of the logger issuing the "
"logging record, then the name of the level of the logging record. Keys "
"are created when needed. Values hold lists of messages, formatted "
"according to whatever formatter you associate to the handler, defaulting "
"to ``logging.Formatter(\"%(message)s\")``."
msgstr ""

#: ../../building.rst:495
msgid ""
"You can explicitly empty the collected messages by invoking "
"``self.handler.clear()``."
msgstr ""

#: ../../building.rst:500
msgid "Putting all together"
msgstr ""

#: ../../building.rst:502
msgid "From time to time you want to activate the test class you're working at::"
msgstr ""

#: ../../building.rst:506
msgid "And at the end of the process you want to update the statistics::"
msgstr ""

#: ../../building.rst:512
msgid "Structure of user interface"
msgstr ""

#: ../../building.rst:514
msgid ""
"The user interface is built according to the **Model** — **View** — "
"**Presenter** architectural pattern.  For much of the interface, "
"**Model** is a SQLAlchemy database object, but we also have interface "
"elements where there is no corresponding database model.  In general:"
msgstr ""

#: ../../building.rst:519
msgid ""
"The **View** is described as part of a **glade** file. This should "
"include the signal-callback and ListStore-TreeView associations. Just "
"reuse the base class ``GenericEditorView`` defined in ``bauble.editor``. "
"When you create your instance of this generic class, pass it the "
"**glade** file name and the root widget name, then hand this instance "
"over to the **presenter** constructor."
msgstr ""

#: ../../building.rst:526
msgid ""
"In the glade file, in the ``action-widgets`` section closing your "
"GtkDialog object description, make sure every ``action-widget`` element "
"has a valid ``response`` value.  Use `valid GtkResponseType values "
"<http://gtk.php.net/manual/en/html/gtk/gtk.enum.responsetype.html>`_, for"
" example:"
msgstr ""

#: ../../building.rst:537
msgid ""
"There is no easy way to unit test a subclassed view, so please don't "
"subclass views, there's really no need to."
msgstr ""

#: ../../building.rst:540
msgid ""
"In the glade file, every input widget should define which handler is "
"activated on which signal.  The generic Presenter class offers generic "
"callbacks which cover the most common cases."
msgstr ""

#: ../../building.rst:544
msgid ""
"GtkEntry (one-line text entry) will handle the ``changed`` signal, with "
"either ``on_text_entry_changed`` or ``on_unique_text_entry_changed``."
msgstr ""

#: ../../building.rst:546
msgid ""
"GtkTextView: associate it to a GtkTextBuffer. To handle the ``changed`` "
"signal on the GtkTextBuffer, we have to define a handler which invokes "
"the generic ``on_textbuffer_changed``, the only role for this function is"
" to pass our generic handler the name of the model attribute that "
"receives the change. This is a workaroud for an `unresolved bug in GTK "
"<http://stackoverflow.com/questions/32106765/>`_."
msgstr ""

#: ../../building.rst:552
msgid ""
"GtkComboBox with translated texts can't be easily handled from the glade "
"file, so we don't even try.  Use the ``init_translatable_combo`` method "
"of the generic ``GenericEditorView`` class, but please invoke it from the"
" **presenter**."
msgstr ""

#: ../../building.rst:557
msgid ""
"The **Model** is just an object with known attributes. In this "
"interaction, the **model** is just a passive data container, it does "
"nothing more than to let the **presenter** modify it."
msgstr ""

#: ../../building.rst:561
msgid "The subclassed **Presenter** defines and implements:"
msgstr ""

#: ../../building.rst:563
msgid ""
"``widget_to_field_map``, a dictionary associating widget names to name of"
" model attributes,"
msgstr ""

#: ../../building.rst:565
msgid ""
"``view_accept_buttons``, the list of widget names which, if activated by "
"the user, mean that the view should be closed,"
msgstr ""

#: ../../building.rst:567
msgid "all needed callbacks,"
msgstr ""

#: ../../building.rst:568
msgid "optionally, it plays the **model** role, too."
msgstr ""

#: ../../building.rst:570
msgid ""
"The **presenter** continuously updates the **model** according to changes"
" in the **view**. If the **model** corresponds to a database object, the "
"**presenter** commits all **model** updates to the database when the "
"**view** is closed successfully, or rolls them back if the **view** is "
"canceled. (this behaviour is influenced by the parameter ``do_commit``)"
msgstr ""

#: ../../building.rst:576
msgid ""
"If the **model** is something else, then the **presenter** will do "
"something else."
msgstr ""

#: ../../building.rst:581
msgid ""
"A well behaved **presenter** uses the **view** api to query the values "
"inserted by the user or to forcibly set widget statuses. Please do not "
"learn from the practice of our misbehaving presenters, some of which "
"directly handle fields of ``view.widgets``. By doing so, these presenters"
" prevents us from writing unit tests."
msgstr ""

#: ../../building.rst:587
msgid ""
"The base class for the presenter, ``GenericEditorPresenter`` defined in "
"``bauble.editor``, implements many useful generic callbacks.  There is a "
"``MockView`` class, that you can use when writing tests for your "
"presenters."
msgstr ""

#: ../../building.rst:592
msgid "Examples"
msgstr ""

#: ../../building.rst:594
msgid ""
"``Contact`` and ``ContactPresenter`` are implemented following the above "
"lines.  The view is defined in the ``contact.glade`` file."
msgstr ""

#: ../../building.rst:597
msgid ""
"A good example of Presenter/View pattern (no model) is given by the "
"connection manager."
msgstr ""

#: ../../building.rst:600
msgid ""
"We use the same architectural pattern for non-database interaction, by "
"setting the presenter also as model. We do this, for example, for the "
"JSON export dialog box. The following command will give you a list of "
"``GenericEditorView`` instantiations::"
msgstr ""

#: ../../building.rst:608
msgid "Extending Ghini with Plugins"
msgstr ""

#: ../../building.rst:610
msgid ""
"Nearly everything about Ghini is extensible through plugins. Plugins can "
"create tables, define custom searchs, add menu items, create custom "
"commands and more."
msgstr ""

#: ../../building.rst:614
msgid ""
"To create a new plugin you must extend the ``bauble.pluginmgr.Plugin`` "
"class."
msgstr ""

#: ../../building.rst:617
msgid ""
"The ``Tag`` plugin is a good minimal example, even if the ``TagItemGUI`` "
"falls outside the Model-View-Presenter architectural pattern."
msgstr ""

#: ../../building.rst:621
msgid "Plugins structure"
msgstr ""

#: ../../building.rst:623
msgid ""
"Ghini is a framework for handling collections, and is distributed along "
"with a set of plugins making Ghini a botanical collection manager. But "
"Ghini stays a framework and you could in theory remove all plugins we "
"distribute and write your own, or write your own plugins that extend or "
"complete the current Ghini behaviour."
msgstr ""

#: ../../building.rst:629
msgid ""
"Once you have selected and opened a database connection, you land in the "
"Search window. The Search window is an interaction between two objects: "
"SearchPresenter (SP) and SearchView (SV)."
msgstr ""

#: ../../building.rst:633
msgid ""
"SV is what you see, SP holds the program status and handles the requests "
"you express through SV. Handling these requests affect the content of SV "
"and the program status in SP."
msgstr ""

#: ../../building.rst:637
msgid ""
"The search results shown in the largest part of SV are rows, objects that"
" are instances of classes registered in a plugin."
msgstr ""

#: ../../building.rst:640
msgid ""
"Each of these classes must implement an amount of functions in order to "
"properly behave within the Ghini framework. The Ghini framework reserves "
"space to pluggable classes."
msgstr ""

#: ../../building.rst:644
msgid ""
"SP knows of all registered (plugged in) classes, they are stored in a "
"dictionary, associating a class to its plugin implementation.  SV has a "
"slot (a gtk.Box) where you can add elements. At any time, at most only "
"one element in the slot is visible."
msgstr ""

#: ../../building.rst:649
msgid ""
"A plugin defines one or more plugin classes. A plugin class plays the "
"role of a partial presenter (pP - plugin presenter) as it implement the "
"callbacks needed by the associated partial view fitting in the slot (pV -"
" plugin view), and the MVP pattern is completed by the parent presenter "
"(SP), again acting as model. To summarize and complete:"
msgstr ""

#: ../../building.rst:655
msgid "SP acts as model,"
msgstr ""

#: ../../building.rst:656
msgid "the pV partial view is defined in a glade file."
msgstr ""

#: ../../building.rst:657
msgid "the callbacks implemented by pP are referenced by the glade file."
msgstr ""

#: ../../building.rst:658
msgid "a context menu for the SP row,"
msgstr ""

#: ../../building.rst:659
msgid "a children property."
msgstr ""

#: ../../building.rst:661
msgid "when you register a plugin class, the SP:"
msgstr ""

#: ../../building.rst:663
msgid "adds the pV in the slot and makes it non-visible."
msgstr ""

#: ../../building.rst:664
msgid "adds an instance of pP in the registered plugin classes."
msgstr ""

#: ../../building.rst:665
msgid "tells the pP that the SP is the model."
msgstr ""

#: ../../building.rst:666
msgid "connects all callbacks from pV to pP."
msgstr ""

#: ../../building.rst:668
msgid ""
"when an element in pV triggers an action in pP, the pP can forward the "
"action to SP and can request SP that it updates the model and refreshes "
"the view."
msgstr ""

#: ../../building.rst:672
msgid ""
"When the user selects a row in SP, SP hides everything in the pluggable "
"slot and shows only the single pV relative to the type of the selected "
"row, and asks the pP to refresh the pV with whatever is relative to the "
"selected row."
msgstr ""

#: ../../building.rst:676
msgid ""
"Apart from setting the visibility of the various pV, nothing needs be "
"disabled nor removed: an invisible pV cannot trigger events!"
msgstr ""

#: ../../building.rst:680
msgid "bug solving workflow"
msgstr ""

#: ../../building.rst:683
msgid "normal development workflow"
msgstr ""

#: ../../building.rst:685
msgid ""
"while using the software, you notice a problem, or you get an idea of "
"something that could be better, you think about it good enough in order "
"to have a very clear idea of what it really is, that you noticed. you "
"open an issue and describe the problem. someone might react with hints."
msgstr ""

#: ../../building.rst:689
msgid "you open the issues site and choose one you want to tackle."
msgstr ""

#: ../../building.rst:690
msgid ""
"assign the issue to yourself, this way you are informing the world that "
"you have the intention to work at it. someone might react with hints."
msgstr ""

#: ../../building.rst:692
msgid ""
"optionally fork the repository in your account and preferably create a "
"branch, clearly associated to the issue."
msgstr ""

#: ../../building.rst:694
msgid ""
"write unit tests and commit them to your branch (please do not push "
"failing unit tests to github, run ``nosetests`` locally first)."
msgstr ""

#: ../../building.rst:696
msgid ""
"write more unit tests (ideally, the tests form the complete description "
"of the feature you are adding or correcting)."
msgstr ""

#: ../../building.rst:698
msgid ""
"make sure the feature you are adding or correcting is really completely "
"described by the unit tests you wrote."
msgstr ""

#: ../../building.rst:700
msgid ""
"make sure your unit tests are atomic, that is, that you test variations "
"on changes along one single variable. do not give complex input to unit "
"tests or tests that do not fit on one screen (25 lines of code)."
msgstr ""

#: ../../building.rst:703
msgid "write the code that makes your tests succeed."
msgstr ""

#: ../../building.rst:704
msgid "update the i18n files (run ``./scripts/i18n.sh``)."
msgstr ""

#: ../../building.rst:705
msgid ""
"whenever possible, translate the new strings you put in code or glade "
"files."
msgstr ""

#: ../../building.rst:707
msgid ""
"when you change strings, please make sure that old translations get re-"
"used."
msgstr ""

#: ../../building.rst:708
msgid "commit your changes."
msgstr ""

#: ../../building.rst:709
msgid "push to github."
msgstr ""

#: ../../building.rst:710
msgid "open a pull request."
msgstr ""

#: ../../building.rst:713
msgid "publishing to production"
msgstr ""

#: ../../building.rst:715
msgid ""
"please use the ``publish.sh`` script, in the ``scritps`` directory.  This"
" one takes care of every single step, and produces recognizable commit "
"comments, it publishes the release on pypi, and in perspective it will "
"contain all steps for producing a ``deb`` file, and a windows executable."
msgstr ""

#: ../../building.rst:720
msgid "you can also do this by hand:"
msgstr ""

#: ../../building.rst:722
msgid ""
"open the pull request page using as base a production line ``ghini-x.y``,"
" compared to ``ghini-x.y-dev``."
msgstr ""

#: ../../building.rst:724
msgid "make sure a ``bump`` commit is included in the differences."
msgstr ""

#: ../../building.rst:725
msgid "it should be possible to automatically merge the branches."
msgstr ""

#: ../../building.rst:726
msgid "create the new pull request, call it as “publish to the production line”."
msgstr ""

#: ../../building.rst:727
msgid "you possibly need wait for travis-ci to perform the checks."
msgstr ""

#: ../../building.rst:728
msgid "merge the changes."
msgstr ""

#: ../../building.rst:730
msgid ""
"don't forget to tell the world about the new release: on `facebook "
"<https://www.facebook.com/bauble.thesoftware/>`_, the `google group "
"<https://groups.google.com/forum/#!forum/bauble>`_, in any relevant "
"linkedin group, and on `our web page <http://ghini.github.io/>`_."
msgstr ""

#: ../../building.rst:736
msgid "your own fork"
msgstr ""

#: ../../building.rst:738
msgid ""
"If you want to keep your own fork of the project, keep in mind this is "
"full force work in progress, so staying up to date will require some "
"effort from your side."
msgstr ""

#: ../../building.rst:742
msgid ""
"The best way to keep your own fork is to focus on some specific issue, "
"work relatively quickly, often open pull requests for your work, make "
"sure that you get it accepted.  Just follow Ghini's coding style, write "
"unit tests, concise and abundant, and there should be no problem in "
"having your work included in Ghini's upstream."
msgstr ""

#: ../../building.rst:748
msgid ""
"If your fork got out of sync with Ghini's upstream: read, understand, "
"follow the github guides `configuring a remote for a fork "
"<https://help.github.com/articles/configuring-a-remote-for-a-fork/>`_ and"
" `syncing a fork <https://help.github.com/articles/syncing-a-fork/>`_."
msgstr ""

#: ../../building.rst:754
msgid "closing step"
msgstr ""

#: ../../building.rst:756
msgid ""
"review this workflow. consider this as a guideline, to yourself and to "
"your colleagues. please help make it better and matching the practice."
msgstr ""

#: ../../building.rst:760
msgid "distributing for windows"
msgstr ""

#: ../../building.rst:762
msgid ""
"For building a Windows installer or executable you will need an "
"installation of Windows.  The methods described here has been used "
"successfully on Windows 7, 8 and 10.  Windows Vista should also work but "
"has not been tested."
msgstr ""

#: ../../building.rst:766
msgid ""
"In the remainder of this section we assume you're using a Windows "
"workstation.  We also assume assume you do not use it as your software "
"development platform.  All steps described here are very similar to the "
"steps for a normal Windows :ref:`installation`."
msgstr ""

#: ../../building.rst:771
msgid "py2exe will not work with eggs"
msgstr ""

#: ../../building.rst:774
msgid ""
"Building a Windows executable with py2exe requires packages **not** be "
"installed as eggs.  There are several methods to accomplish this, "
"including:"
msgstr ""

#: ../../building.rst:777
msgid ""
"Using pip to install.  The easiest method is to install into a virtual "
"environment that doesn't currently have any modules installed as eggs "
"using ``pip install .`` as described below.  If you do wish to install "
"over the top of an install with eggs (e.g. the environment created by "
"``devinstall.bat``) you can try ``pip install -I .`` but your mileage may"
" vary."
msgstr ""

#: ../../building.rst:784
msgid "By adding::"
msgstr ""

#: ../../building.rst:789
msgid ""
"to setup.cfg (or similarly ``zip_safe = False`` to ``setuptools.setup()``"
" in ``setup.py``) you can use ``python setup.py install`` but you will "
"need to download and install `Microsoft Visual C++ Compiler for Python "
"2.7 <http://aka.ms/vcpython27>`_ to get any of the C extensions and will "
"need a fresh virtual environment with no dependent packages installed as "
"eggs."
msgstr ""

#: ../../building.rst:795
msgid ""
"Download and install git, Python 2.7 and PyGTK as outlined in the generic"
" :ref:`installation` instructions."
msgstr ""

#: ../../building.rst:798
msgid ""
"Additionally, download and install `NSIS v3 "
"<http://nsis.sourceforge.net/Download>`_."
msgstr ""

#: ../../building.rst:800
msgid "A **reboot** is recommended."
msgstr ""

#: ../../building.rst:802
msgid "we have a script that automates the remaining steps"
msgstr ""

#: ../../building.rst:805
msgid ""
"A batch file is available that can complete the last few steps.  To use "
"it use this command::"
msgstr ""

#: ../../building.rst:810
msgid "``build_win.bat`` accepts 2 arguments:"
msgstr ""

#: ../../building.rst:812
msgid ""
"``/e`` will produce an executable only, skipping the extra step of "
"building an installer, and will copy ``win_gtk.bat`` into place."
msgstr ""

#: ../../building.rst:815
#, python-format
msgid ""
"A path to the location for the virtual environment to use. (defaults to "
"``\"%HOMEDRIVE%%HOMEPATH%\"\\.virtualenvs\\ghi2exe``)"
msgstr ""

#: ../../building.rst:818
msgid ""
"e.g. to produce an executable only and use a virtual environment in a "
"folder beside where you have ghini.desktop you could execute "
"``scripts\\build_win.bat /e ..\\ghi2exe``"
msgstr ""

#: ../../building.rst:822
msgid ""
"Clone ghini.desktop to wherever you want to keep it (replace ``<path-to-"
"keep-ghini>`` with the path of your choice, e.g. "
"``Local\\github\\Ghini\\``) and checkout a production branch "
"(``ghini-3.1`` is recommended as used in the example).  To do this, open "
"a command prompt and type these commands::"
msgstr ""

#: ../../building.rst:833
msgid ""
"Install virtualenv, create a virtual environment and activate it.  With "
"only Python 2.7 on your system (where ``<path-to-venv>`` is the path to "
"where you wish to keep the virtual environment) use::"
msgstr ""

#: ../../building.rst:841
msgid ""
"On systems where Python 3 is also installed you may need to either call "
"pip and virtualenv with absolute paths e.g.  "
"``C:\\Python27\\Scripts\\pip`` or use the Python launcher e.g. ``py -2.7 "
"-m pip`` (run ``python --version`` first to check.  If you get anything "
"other than version 2.7 you'll need to use one of these methods.)"
msgstr ""

#: ../../building.rst:847
msgid "Install dependencies and ghini.desktop into the virtual environment::"
msgstr ""

#: ../../building.rst:852
msgid "Build the executable::"
msgstr ""

#: ../../building.rst:856
msgid ""
"The ``dist`` folder will now contain a full working copy of the software "
"in a frozen, self contained state, that can be transferred however you "
"like and will work in place.  (e.g. placed on a USB flash drive for "
"demonstration purposes or copied manually to ``C:\\Program Files`` with a"
" shortcut created on the desktop).  To start ghini.desktop double click "
"``ghini.exe`` in explorer (or create a shortcut to it). If you have "
"issues with the UI not displaying correctly you need to run the script "
"``win_gtk.bat`` from the ``dist`` folder to set up paths to the GTK "
"components correctly.  (Running ``build_win /e`` will place this script "
"in the dist folder for you or you can copy it from the ``scripts`` folder"
" yourself.)  You will only need to run this once each time the location "
"of the folder changes.  Thereafter ``ghini.exe`` will run as expected."
msgstr ""

#: ../../building.rst:869
msgid "Build the installer::"
msgstr ""

#: ../../building.rst:873
msgid ""
"This should leave a file named ``ghini.desktop-<version>-setup.exe`` in "
"the ``scripts`` folder.  This is your Windows installer."
msgstr ""

#: ../../building.rst:876
msgid "about the installer"
msgstr ""

#: ../../building.rst:879
msgid "Capable of single user or global installs."
msgstr ""

#: ../../building.rst:881
msgid ""
"At this point in time ghini.desktop installed this way will not check or "
"or notify you of any updated version.  You will need to check yourself."
msgstr ""

#: ../../building.rst:885
msgid "Capable of downloading and installing optional extra components:"
msgstr ""

#: ../../building.rst:887
msgid ""
"Apache FOP - If you want to use xslt report templates install FOP. FOP "
"requires Java Runtime. If you do not currently have it installed the "
"installer will let you know and offer to open the Oracle web site for you"
" to download and install it from."
msgstr ""

#: ../../building.rst:892
msgid ""
"MS Visual C runtime - You most likely don't need this but if you have any"
" trouble getting ghini.desktop to run try installing the MS Visual C "
"runtime (e.g. rerun the installer and select this component only)."
msgstr ""

#: ../../building.rst:896
msgid ""
"Can be run silently from the commandline (e.g. for remote deployment) "
"with the following arguments:"
msgstr ""

#: ../../building.rst:899
msgid "``/S`` for silent;"
msgstr ""

#: ../../building.rst:901
msgid "``/AllUser`` (when run as administrator) or ``/CurrentUser``"
msgstr ""

#: ../../building.rst:903
msgid "``/C=[gFC]`` to specify components where:"
msgstr ""

#: ../../building.rst:905
msgid ""
"``g`` = Deselect the main ghini.desktop component (useful for adding "
"optional component after an initial install)"
msgstr ""

#: ../../building.rst:908
msgid "``F`` = select Apache FOP"
msgstr ""

#: ../../building.rst:910
msgid "``C`` = select MS Visual C runtime"
msgstr ""

#: ../../editing.rst:4
msgid "Editing and Inserting Data"
msgstr ""

#: ../../editing.rst:6
msgid ""
"The main way that we add or change information in Ghini is by using the "
"editors.  Each basic type of data has its own editor.  For example there "
"is a Family editor, a Genus editor, an Accession editor, etc."
msgstr ""

#: ../../editing.rst:10
msgid ""
"To create a new record click on the :menuselection:`Insert` menu on the "
"menubar and then select the type of record your would like to create.  "
"This opens a new blank editor for the type."
msgstr ""

#: ../../editing.rst:14
msgid ""
"To edit an existing record in the database right click on an item in the "
"search results and select :menuselection:`Edit` from the popup menu.  "
"This opens an editor that allows you to change the values on the record "
"that you selected."
msgstr ""

#: ../../editing.rst:19
msgid ""
"Most types also have children which you can add by right clicking on the "
"parent and selecting \"Add ???...\" on the context menu.  For example, a "
"Family has Genus children: you can add a Genus to a Family by right "
"clicking on a Family and selecting \"Add genus\"."
msgstr ""

#: ../../editing.rst:26
msgid "Notes"
msgstr ""

#: ../../editing.rst:27
msgid ""
"Almost all of the editors in Ghini have a *Notes* tab which should work "
"the same regardless of which editor you are using."
msgstr ""

#: ../../editing.rst:30
msgid ""
"If you enter a web address in a note then the link shows up in the Links "
"box when the item your are editing is selected in the search results."
msgstr ""

#: ../../editing.rst:33
msgid ""
"You can browse the notes for an item in the database using the Notes box "
"at the bottom of the screen.  The Notes box is desensitized if the "
"selected item does not have any notes."
msgstr ""

#: ../../editing.rst:39
msgid "Family"
msgstr ""

#: ../../editing.rst:40
msgid "The Family editor allows you to add or change a botanical family."
msgstr ""

#: ../../editing.rst:42
msgid ""
"The *Family* field on the editor lets you change the epithet of the "
"family. The Family field is required."
msgstr ""

#: ../../editing.rst:45
msgid ""
"The *Qualifier* field lets you change the family qualifier.  The value "
"can either be *sensu lato*, *sensu stricto*, or nothing."
msgstr ""

#: ../../editing.rst:48
msgid ""
"*Synonyms* allow you to add other families that are synonyms with the "
"family you are currently editing.  To add a new synonyms type in a family"
" name in the entry.  You must select a family name from the list of "
"completions. Once you have selcted a family name that you want to add as "
"a synonym click on the Add button next to the synonym list and the "
"software adds the selected synonym to the list.  To remove a synonym, "
"select the synonym from the list and click on the Remove button."
msgstr ""

#: ../../editing.rst:56 ../../editing.rst:91 ../../editing.rst:115
msgid "To cancel your changes without saving then click on the *Cancel* button."
msgstr ""

#: ../../editing.rst:58
msgid "To save the family you are working on then click *OK*."
msgstr ""

#: ../../editing.rst:60
msgid ""
"To save the family you are working on and add a genus to it then click on"
" the *Add Genera* button."
msgstr ""

#: ../../editing.rst:63
msgid ""
"To add another family when you are finished editing the current one click"
" on the *Next* button on the bottom.  This saves the current family and "
"opens a new blank family editor."
msgstr ""

#: ../../editing.rst:69
msgid "Genus"
msgstr ""

#: ../../editing.rst:71
msgid "The Genus editor allows you to add or change a botanical genus."
msgstr ""

#: ../../editing.rst:73
msgid ""
"The *Family* field on the genus editor allows you to choose the family "
"for the genus.  When you begin type a family name it will show a list of "
"families to choose from.  The family name must already exist in the "
"database before you can set it as the family for the genus."
msgstr ""

#: ../../editing.rst:78
msgid "The *Genus* field allows you to set the genus for this entry."
msgstr ""

#: ../../editing.rst:80
msgid ""
"The *Author* field allows you to set the name or abbreviation of the "
"author(s) for the genus."
msgstr ""

#: ../../editing.rst:83
msgid ""
"*Synonyms* allow you to add other genera that are synonyms with the genus"
" you are currently editing.  To add a new synonyms type in a genus name "
"in the entry.  You must select a genus name from the list of completions."
"  Once you have selcted a genus name that you want to add as a synonym "
"click on the Add button next to the synonym list and it will add the "
"selected synonym to the list.  To remove a synonym select the synonym "
"from the list and click on the Remove button."
msgstr ""

#: ../../editing.rst:93
msgid "To save the genus you are working on then click *OK*."
msgstr ""

#: ../../editing.rst:95
msgid ""
"To save the genus you are working on and add a species to it then click "
"on the *Add Species* button."
msgstr ""

#: ../../editing.rst:98
msgid ""
"To add another genus when you are finished editing the current one click "
"on the *Next* button on the bottom.  This will save the current genus and"
" open a new blank genus editor."
msgstr ""

#: ../../editing.rst:104
msgid "Species/Taxon"
msgstr ""

#: ../../editing.rst:106
msgid ""
"For historical reasons called a `species`, but by this we mean a `taxon` "
"at rank `species` or lower.  It represents a unique name in the database."
"  The species editor allows you to construct the name as well as "
"associate metadata with the taxon such as its distribution, synonyms and "
"other information."
msgstr ""

#: ../../editing.rst:112
msgid ""
"The *Infraspecific parts* in the species editor allows you to specify the"
" `taxon` further than at `species` rank."
msgstr ""

#: ../../editing.rst:117
msgid "To save the species you are working on then click *OK*."
msgstr ""

#: ../../editing.rst:119
msgid ""
"To save the species you are working on and add an accession to it then "
"click on the *Add Accession* button."
msgstr ""

#: ../../editing.rst:122
msgid ""
"To add another species when you are finished editing the current one "
"click on the *Next* button on the bottom.  This will save the current "
"species and open a new blank species editor."
msgstr ""

#: ../../editing.rst:127
msgid "Accessions"
msgstr ""

#: ../../editing.rst:129
msgid ""
"The Accession editor allows us to add an accession to a species.  In "
"Ghini an accession represents a group of plants or clones that are of the"
" same taxon, are of the same propagule type (or treatment), were received"
" from the same source, were received at the same time."
msgstr ""

#: ../../editing.rst:134
msgid "Choose the Taxon name, add one if you forgot to do that in advance."
msgstr ""

#: ../../editing.rst:136
msgid ""
"You may note uncertainty in identification by adding an identification "
"qualifier, at the proper rank, so you can for example have a plant "
"initially identified as *Iris* cf. *florentina* by choosing *Iris "
"florentina* in the taxon name, identification qualifier 'cf.', qualified "
"rank 'species'."
msgstr ""

#: ../../editing.rst:141
msgid "Type the Accession ID, preferably also the Quantity received."
msgstr ""

#: ../../editing.rst:145
msgid "Accession Source"
msgstr ""

#: ../../editing.rst:147
msgid ""
"The source of the accessions lets you add more information about where "
"this accession came from.  Select a Contact from the drop-down list, or "
"choose \"Garden Propagation\", which is placed as a default first item in"
" the list of contacts."
msgstr ""

#: ../../editing.rst:152
msgid "A Garden Propagation is the result of successful Propagation."
msgstr ""

#: ../../editing.rst:154
msgid ""
"When accessing material from a Garden Propagation, you would initially "
"leave the first tab alone (General) and start from the second tab "
"(Source). Select as Contact \"Garden Propagation\", indicate which plant "
"is the parent plant and choose among the still not completely accessed "
"propagations the one you intend to add as an accession in your database."
msgstr ""

#: ../../editing.rst:160
msgid ""
"Once you select a propagation, the software will set several fields in "
"the General tab, which you can now review.  The Taxon (maybe you managed "
"to obtain something slightly different than the parent plant). The "
"Initial quantity (in case not all plants go in the same accession). The "
"Type of Material, inferred from the propagation type."
msgstr ""

#: ../../editing.rst:170 ../../use_cases-jbq.rst ../../use_cases-jbq.rst:669
#: ../../use_cases-jbq.rst:704
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:669
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:704
#: <included from
msgid "Plant"
msgstr ""

#: ../../editing.rst:172
msgid ""
"A ``Plant`` in the Ghini database describes an individual plant in your "
"collection. A plant belongs to an accession, and it has a specific "
"location."
msgstr ""

#: ../../editing.rst:176
msgid "Creating multiple plants"
msgstr ""

#: ../../editing.rst:178
msgid ""
"You can create multiple Plants by using ranges in the code entry. This is"
" only allowed when creating new plants and it is not possible when "
"editing existing Plants in the database."
msgstr ""

#: ../../editing.rst:182
msgid ""
"For example the range, 3-5 will create plant with code 3,4,5.  The range "
"1,4-7,25 will create plants with codes 1,4,5,6,7,25."
msgstr ""

#: ../../editing.rst:185
msgid ""
"When you enter the range in the plant code entry the entry will turn blue"
" to indicate that you are now creating multiple plants.  Any fields that "
"are set while in this mode will be copied to all the plants that are "
"created."
msgstr ""

#: ../../editing.rst:193
msgid "Pictures"
msgstr ""

#: ../../editing.rst:195
msgid ""
"Just as almost all objects in the Ghini database can have *Notes* "
"associated to them, Plants and Species can also have *Pictures*: next to "
"the tab for Notes, the Plant and the Species editors contain an extra tab"
" called \"Pictures\". You can associate as many pictures as you might "
"need to a plant and to a species object."
msgstr ""

#: ../../editing.rst:201
msgid ""
"When you associate a picture to an object, the file is copied in the "
"*pictures* folder, and a miniature (500x500) is generated and copied in "
"the `thumbnails` folder inside of the pictures folder."
msgstr ""

#: ../../editing.rst:205
msgid ""
"As of Ghini-1.0.62, Pictures are not kept in the database. To ensure "
"pictures are available on all terminals where you have installed and "
"configured Ghini, you can use a network drive, or a file sharing service "
"like Tresorit or Dropbox."
msgstr ""

#: ../../editing.rst:210
msgid ""
"Remember that you have configured the pictures root folder when you "
"specified the details of your database connection. Again, you should make"
" sure that the pictures root folder is shared with your file sharing "
"service of choice."
msgstr ""

#: ../../editing.rst:215
msgid ""
"When a Plant or a Species in the current selection is highlighted, its "
"pictures are displayed in the pictures pane, the pane left of the "
"information pane. When an Accession in the selection is highlighted, any "
"picture associated to the plants in the highlighted accession are "
"displayed in the pictures pane."
msgstr ""

#: ../../editing.rst:221
msgid ""
"In Ghini-3.1, pictures are special notes, with category \"<picture>\", "
"and text the path to the file, relative to the pictures root folder.  In "
"the Notes tab, Picture notes will show as normal notes, and you can edit "
"them without limitations."
msgstr ""

#: ../../editing.rst:226
msgid ""
"A Plant is a physical object, so you associate to it pictures taken of "
"that individual plant, taken at any relevant development stage of the "
"plant, possibly helping its identification."
msgstr ""

#: ../../editing.rst:230
msgid ""
"Species are abstract objects, so you would associate to it pictures "
"showing the characteristic elements of the species, so it makes sense to "
"associate a flora illustration to it. You can also do that by reference: "
"go to the Notes tab, add a note and specify as category \"<picture>\", "
"then in the text field you type the URL for the illustration of your "
"choice."
msgstr ""

#: ../../editing.rst:238
msgid "Locations"
msgstr ""

#: ../../editing.rst:240
msgid "The Location editor"
msgstr ""

#: ../../editing.rst:243
msgid "danger zone"
msgstr ""

#: ../../editing.rst:245
msgid ""
"The location editor contains an initially hidden section named *danger "
"zone*. The widgets contained in this section allow the user to merge the "
"current location into a different location, letting the user correct "
"spelling mistakes or implement policy changes."
msgstr ""

#: ../../ghini-family.rst:12
msgid "the Ghini family"
msgstr ""

#: ../../ghini-family.rst:14
msgid ""
"Let's start by recalling the composition of the Ghini family, as shown in"
" the diagram:"
msgstr ""

#: ../../ghini-family.rst:18
msgid ""
"You have learned how to use ghini.desktop, here we introduce the other "
"members of the family, and their interaction."
msgstr ""

#: ../../ghini-family.rst:29
msgid ""
"ghini.pocket is an Android app which you can install from the `play store"
" <https://play.google.com/store/apps/details?id=me.ghini.pocket>`_. "
"ghini.pocket is definitely the tool you will use most, next to "
"ghini.desktop."
msgstr ""

#: ../../ghini-family.rst:35
msgid ""
"With ghini.pocket you always have the latest snapshot of your database "
"with you."
msgstr ""

#: ../../ghini-family.rst:38
msgid "Type an accession number, or scan its barcode or QR label, and you know:"
msgstr ""

#: ../../ghini-family.rst:40
msgid "the identification of the plant,"
msgstr ""

#: ../../ghini-family.rst:41
msgid "whether it already has pictures,"
msgstr ""

#: ../../ghini-family.rst:42
msgid "when it entered the garden and"
msgstr ""

#: ../../ghini-family.rst:43
msgid "from which source."
msgstr ""

#: ../../ghini-family.rst:45
msgid "Apart as a quick data viewer, you can use ghini.pocket for..."
msgstr ""

#: ../../ghini-family.rst:47
msgid "data correction"
msgstr ""

#: ../../ghini-family.rst:50
msgid ""
"If by your judgement, some of the information is incorrect, or if the "
"plant is flowering and you want to immediately take a picture and store "
"it in the database, you do not need take notes on paper, nor follow "
"convolute procedures: ghini.pocket lets you write your corrections in a "
"log file, take pictures associated to the plant, and you will import this"
" information straight into the database, with further minimal user "
"intervention."
msgstr ""

#: ../../ghini-family.rst:58
msgid "inventory review"
msgstr ""

#: ../../ghini-family.rst:61
msgid ""
"The initial idea on which we based ghini.pocket is still one of its "
"functionalities: inventory review."
msgstr ""

#: ../../ghini-family.rst:64
msgid ""
"Using ghini.pocket, reviewing the inventory of a greenhouse, in "
"particular if you have QR codes on plant labels, goes as fast as you can "
"walk: simply enter the location code of your greenhouse, reset the log, "
"then one by one scan the plant codes of the plants in the greenhouse.  No"
" further data collection action is required."
msgstr ""

#: ../../ghini-family.rst:70
msgid ""
"When you're done, import the log in ghini.desktop.  The procedure "
"available in ghini.desktop includes adding unknown but labelled plants in"
" the database, marking as lost/dead all plants that the database reports "
"as alive and present in the inventoried location, but were not found "
"during the inventory."
msgstr ""

#: ../../ghini-family.rst:76
msgid "taxonomic support"
msgstr ""

#: ../../ghini-family.rst:79
msgid ""
"As a bonus, ghini.pocket contains a phonetic genus search, and a quite "
"complete database of botanic taxa with rank between order and genus, "
"including tribes, and synonymies."
msgstr ""

#: ../../ghini-family.rst:83
msgid "check further :any:`pocket-desktop interaction`."
msgstr ""

#: ../../ghini-family.rst:93
msgid "ghini.web is a web server, written in nodejs."
msgstr ""

#: ../../ghini-family.rst:95
msgid ""
"Its most visible part runs at http://web.ghini.me and shows as a map of "
"the world, where you browse gardens and search their published "
"collection."
msgstr ""

#: ../../ghini-family.rst:99
msgid "It also serves configuration data to ghini.tour instances."
msgstr ""

#: ../../ghini-family.rst:101 ../../ghini-family.rst:131
msgid "check further :any:`interaction among components`."
msgstr ""

#: ../../ghini-family.rst:107
msgid "ghini.tour"
msgstr ""

#: ../../ghini-family.rst:112
msgid ""
"ghini.tour is an Android app which you can install from the `play store "
"<https://play.google.com/store/apps/details?id=me.ghini.tour>`_."
msgstr ""

#: ../../ghini-family.rst:116
msgid ""
"People visiting your garden will install ghini.tour on their phone or "
"tablet, enjoy having a map of the garden, knowing where they are, and "
"will be able to listen to audio files that you have placed as virtual "
"information panels in strategic spots in your garden."
msgstr ""

#: ../../ghini-family.rst:121
msgid "world view"
msgstr ""

#: ../../ghini-family.rst:124
msgid "at startup, you see the world and gardens.  select a garden, and enter."
msgstr ""

#: ../../ghini-family.rst:126
msgid "garden view"
msgstr ""

#: ../../ghini-family.rst:129
msgid "when viewing at garden level, you see panels.  select a panel, and listen."
msgstr ""

#: ../../ghini-family.rst:136
msgid "data streams between components"
msgstr ""

#: ../../ghini-family.rst:141
msgid ""
"In the diagram showing the composition of the Ghini family, the alert "
"reader noticed how different arrows, corresponding to the different data "
"flows, had different colours: some are deep green, some have a lighter "
"tint, while the two streams connecting ghini.pocket and ghini.desktkop "
"have a colour gradient, from light to deep green."
msgstr ""

#: ../../ghini-family.rst:148
msgid ""
"The colour choice for the arrows conveys a meaning: deeper green streams "
"are constant flows of data, representing the core activity of a "
"component, eg: the interaction between ghini.desktop and its database "
"server, or your internet browser and ghini.web."
msgstr ""

#: ../../ghini-family.rst:152
msgid ""
"Lighter green streams are import/export actions, initiated by the user at"
" the command panel of ghini.desktop, or in the ghini.tour settings page."
msgstr ""

#: ../../ghini-family.rst:155
msgid ""
"The interaction between ghini.pocket and ghini.desktop seen from the "
"desktop, it is a stream you initiate when needed and stop as soon as you "
"are done using it, for this reason it is light green at the desktop end."
"  From the point of view of ghini.pocket however, it is an interaction "
"with a data server, and we make this visible by giving the arrows a deep "
"green colour at the pocket end."
msgstr ""

#: ../../ghini-family.rst:161
msgid ""
"This is again the same graph, but now all import data streams have been "
"given an identifier, and where we added thin red lines ending in a thick "
"dot, to indicate the control line from the controlling console to the "
"controlled stream."
msgstr ""

#: ../../ghini-family.rst:167
msgid ""
"The interaction between ghini.pocket and ghini.desktop is one of the "
"daily tasks of Ghini users, and has an integrated, hopefully user-"
"friendly interface, at both the ghini.pocket and the ghini.desktop ends."
"  This is described in the next section."
msgstr ""

#: ../../ghini-family.rst:171
msgid ""
"All import/export actions relating to ghini.web are still rather low "
"level actions, so their description needs be of a rather technical type."
"  These are handled in the remainig expandable sections, aimed mainly at "
"database managers and possibly software developers."
msgstr ""

#: ../../ghini-family.rst:175
msgid "d2w: send a selection of your garden data to ghini.web"
msgstr ""

#: ../../ghini-family.rst:178
msgid ""
"Offer a selection of your garden data to a central ghini.web site, so "
"online virtual visitors can browse it.  This includes plant "
"identification and their geographic location."
msgstr ""

#: ../../ghini-family.rst:182 ../../ghini-family.rst:199
#: ../../ghini-family.rst:211
msgid "content of this flow:"
msgstr ""

#: ../../ghini-family.rst:184
msgid "garden: coords, name, zoom level (for initial view)"
msgstr ""

#: ../../ghini-family.rst:185
msgid "plants: coords, identification, zoom level (for visibility)"
msgstr ""

#: ../../ghini-family.rst:186
msgid "species: binomial, phonetic approximation"
msgstr ""

#: ../../ghini-family.rst:188
msgid ""
"There is a ``stream_d2w.py`` script for this, living in the ``scripts`` "
"directory.  It should really be integrated in ghini.desktop, some day."
msgstr ""

#: ../../ghini-family.rst:192
msgid "g2w4t: add geographic non-botanic data to ghini.web"
msgstr ""

#: ../../ghini-family.rst:195
msgid ""
"Write geographic information about non-botanic data (ie: point of "
"interest within the garden, required by ghini.tour) in the central "
"ghini.web site."
msgstr ""

#: ../../ghini-family.rst:201
msgid "virtual panels: coords, title, audio file"
msgstr ""

#: ../../ghini-family.rst:202
msgid "photos: coords, title, picture"
msgstr ""

#: ../../ghini-family.rst:204
msgid ""
"virtual panels don't necessarily have an associated photo, photos don't "
"necessarily have an associated audio file."
msgstr ""

#: ../../ghini-family.rst:208
msgid "w2t: importing locations and POIs from ghini.web to tour"
msgstr ""

#: ../../ghini-family.rst:213
msgid "Garden (coords, name, zoom level)"
msgstr ""

#: ../../ghini-family.rst:214
msgid "Points of Interest (coords, title, audio file, photo)"
msgstr ""

#: ../../ghini-family.rst:219
msgid "Managing pocket/desktop interaction"
msgstr ""

#: ../../ghini-family.rst:221
msgid ""
"Interaction between |ghini.pocket| and |ghini.desktop| is handled "
"following a client server scheme.  When you need to export a new database"
" snapshot to pocket, or import the pocket log into the main database, you"
" put |ghini.desktop| in server mode, so that it awaits requests from "
"registered |ghini.pocket| clients."
msgstr ""

#: ../../ghini-family.rst:227
msgid "|ghini.desktop| server mode"
msgstr ""

#: ../../ghini-family.rst:229
msgid ""
"Select :menuselection:`Tools-->Pocket Server..` to activate server mode "
"on |ghini.desktop|. The Pocket Server console looks roughly like this, "
"where it is creating a \"snapshot\":"
msgstr ""

#: ../../ghini-family.rst:234
msgid ""
"While in server mode, |ghini.desktop| is not available for other uses, "
"and |ghini.pocket| clients will be able to register, request database "
"snapshots, or send collected updates."
msgstr ""

#: ../../ghini-family.rst:237
msgid ""
"|ghini.pocket| works with a reduced database snapshot, containing only "
"the most significant elements, under a simplified schema.  "
"|ghini.desktop| produces such a snapshot when it enters server mode, "
"automatically and in the background.  A typical Pocket Server session "
"consists of: validate your identity, push updates from |ghini.pocket| "
"clients, refresh your snapshot on |ghini.desktop|, pull the new snapshot "
"to each of your clients."
msgstr ""

#: ../../ghini-family.rst:243
msgid ""
"Production of a snapshot is generally fast, surely for collections below "
"the ten thousand plants, so you may prefer to keep the automatic refresh "
"option enabled: a refresh will be triggered after receiving data from "
"pocket clients and ghini.desktop will compute it while it is still "
"receiving pictures.  You will most likely not notice any delay.  With "
"automatic refresh enabled, the sequence reduces to: validate your "
"identity, push updates, pull the new snapshot."
msgstr ""

#: ../../ghini-family.rst:249
msgid ""
"|ghini.desktop| and |ghini.pocket| need to be connected to the same "
"(local) network.  The server GUI includes an informative entry for the "
"server IP address, this you obviously don't edit, and an entry for the "
"port number, which defaults to GHINI/44464.  Make sure that every "
"configuration on your clients matches the settings on the server, i.e.: "
"please copy your Server IP address, as shown by |ghini.desktop|, to all "
"your |ghini.pocket| clients, and make sure that your clients are talking "
"to the port on which the server will be listening."
msgstr ""

#: ../../ghini-family.rst:258
msgid "I understand beans, what should I do?"
msgstr ""

#: ../../ghini-family.rst:261
msgid ""
"Right, you're a botanist, with little interest in learning network "
"management, quite fair."
msgstr ""

#: ../../ghini-family.rst:263
msgid ""
"Here are my three guesses for getting ghini.desktop (running on your "
"computer) and ghini.pocket (running on your Android phone) to see each "
"other:"
msgstr ""

#: ../../ghini-family.rst:266
msgid ""
"Easiest case: you have a local network at home, to which you connect both"
" your phone and your computer.  Just make sure both your phone and "
"computer are connected, and read further.  In most cases, it will just "
"work."
msgstr ""

#: ../../ghini-family.rst:270
msgid ""
"Beware: there's routers that will not let you talk from one system to the"
" other, or that leave only a few ports open.  If your router has a "
"'guest' and a 'home' SSID, do use the 'home' signal for both systems.  "
"But it all depends, and you should check with your router.  If you are "
"using your home router and you still can't quite connect pocket to "
"desktop, try the next option."
msgstr ""

#: ../../ghini-family.rst:276
msgid ""
"Next easiest: configure a WiFi hotspot on your Android phone, and connect"
" your computer to it."
msgstr ""

#: ../../ghini-family.rst:279
msgid ""
"Make sure your ghini.desktop computer has no other active network "
"connection.  You might want to disable mobile data on the phone, to avoid"
" your computer to consume bandwith and make you incur in costs.  Without "
"mobile data, Android might warn you that the hotspot will not be "
"functional.  Ignore that: you're using the hotspot for local connections,"
" not for getting on internet."
msgstr ""

#: ../../ghini-family.rst:285
msgid ""
"Still easy enough: connect your Android phone to your computer using a "
"USB cable, and activate USB tethering on the phone."
msgstr ""

#: ../../ghini-family.rst:288
msgid ""
"Again, make sure your computer has no other active network connection, "
"and again consider disabling mobile data on the phone."
msgstr ""

#: ../../ghini-family.rst:291
msgid ""
"Any of the above three will put your two devices on the same network "
"segment, and enable communication.  Minimal terminology you might still "
"check: IP Address; IP Port; Network Segment."
msgstr ""

#: ../../ghini-family.rst:295
msgid ""
"Check your phone IP address in :menuselection:`Settings --> About device "
"--> Status`, no more to make sure that both addresses, desktop and "
"pocket, belong to the same segment, roughly true if the first three of "
"those four numbers are equal."
msgstr ""

#: ../../ghini-family.rst:299
msgid "Port Number, GHINI/44464?  What is that?"
msgstr ""

#: ../../ghini-family.rst:302
msgid ""
"44464 is a port number and a port, think of it like of a virtual plug "
"that a server program can enable and listen to, and to which client "
"programs may attach and speak into. This port number, 44464 makes some "
"sense because it's like GHINI on a phone keyboard. There is nothing "
"special with this 44464, you can choose just about any number from 1025 "
"to 65535, as long as it's `not already in use "
"<https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers>`_ by "
"other programs and it's the same on both ghini.desktop and ghini.pocket."
msgstr ""

#: ../../ghini-family.rst:310
msgid "localhost and your local network"
msgstr ""

#: ../../ghini-family.rst:313
msgid ""
"Is your ghini.desktop showing the ``127.0.0.1`` address, that means that "
"it is not connected to any network.  That address is the numeric form of "
"``localhost``, and only useful for local connections.  You will **not** "
"be able to connect pocket to desktop if this is what desktop reports as "
"server IP address."
msgstr ""

#: ../../ghini-family.rst:318
msgid ""
"Your local IP address is something starting with ``192.168.`` followed by"
" two more numbers between 0 and 255, or maybe ``10.`` followed by three "
"more such numbers, or still ``172.`` followed by a number in the range 16"
" to 31, and again two more numbers between 0 and 255."
msgstr ""

#: ../../ghini-family.rst:322
msgid ""
"Anything else is something else, not your local IP address, and will not "
"work."
msgstr ""

#: ../../ghini-family.rst:325
msgid ""
"|ghini.desktop| holds a list of registered |ghini.pocket| clients.  "
"(Check the below section on the client user interface, for how to "
"register a phone.)  The first time you activate |ghini.pocket|, it will "
"create a persistent custom phone code, high chance it is a unique code, "
"and this code will be used by both pocket and desktop to identify your "
"phones.  The chance that two of your 40 phones share the same code is "
"smaller than a 2cm meteorite to strike your house within the next 5 "
"minutes.  Maybe not precisely this small, but definitely very small.  "
"When |ghini.desktop| receives a valid registration request for a phone "
"code, the code is added to the list of registered clients and associated "
"to the remote user name."
msgstr ""

#: ../../ghini-family.rst:334
msgid ""
"The client registration is persistent, and is used as a basic identity "
"check for all client-server interaction.  If you need to use the same "
"phone with a different user name, you must overrule the existing "
"registration, and to do so, you need the security code as shown in the "
"desktop server settings."
msgstr ""

#: ../../ghini-family.rst:339
msgid ""
"Start the server on |ghini.desktop| by clicking on that thick square push"
" button with the diagonal arrow: the button will stay pushed, the arrow "
"slowly spinning, while the server is active.  Decide if you prefer to "
"enable automatic refresh, then move your attention focus to your "
"|ghini.pocket| client.  It is from the |ghini.pocket| clients that you "
"handle the communication.  After accepting updates from your "
"|ghini.pocket| clients, refresh the snapshot and update it on all your "
"clients."
msgstr ""

#: ../../ghini-family.rst:346
msgid ""
"When done, stop the server, review the logs, close the Pocket Server "
"window."
msgstr ""

#: ../../ghini-family.rst:349
msgid "|ghini.pocket| user interface"
msgstr ""

#: ../../ghini-family.rst:351
msgid ""
"With the pocket server running on ghini.desktop, grab now your Android "
"phone with the latest ghini.pocket version."
msgstr ""

#: ../../ghini-family.rst:354
msgid ""
"|ghini.pocket| options menu has a |desktop| item.  Use it to activate the"
" \"desktop-client\" window, which implements all interaction with the "
"|ghini.desktop| server."
msgstr ""

#: ../../ghini-family.rst:357
msgid ""
"The \"desktop-client\" window contains data fields you have to edit in "
"order to gain access to the server, and buttons for server communication."
"  The communication buttons are not enabled unless you validate (that is:"
" register, or verify if already registered) your identity."
msgstr ""

#: ../../ghini-family.rst:363
msgid ""
"The above is |ghini.pocket|'s \"desktop-client\" on my virtual phone.  "
"192.168.43.226 is my laptop's IP address in my local network.  Please "
"replace that with your own computer address as previously explained."
msgstr ""

#: ../../ghini-family.rst:367
msgid ""
"|ghini.pocket| implements a very basic authentication check, trusting "
"that your local network is secure.  In fact the main goal of "
"authentication between pocket and desktop is to make sure that you know "
"which user is going to be credited with the edits you are supplying from "
"pocket."
msgstr ""

#: ../../ghini-family.rst:372
msgid ""
"|verify| to check the communication parameters and the registered user "
"name for your phone. Enter the server IP address, edit if necessary the "
"communication port, and verify whether your phone is already registered."
"  If your phone id matches an already registered IMEI number, the User "
"Name widget will show you the currently registered user name, and the "
"bottom communication buttons will be enabled.  If no user is registered "
"for your phone, a notification will briefly flash on your phone, asking "
"you to please register."
msgstr ""

#: ../../ghini-family.rst:379
msgid ""
"|register|, to associate your new user name to your phone IMEI code.  "
"Enter both a User Name, a Security Code, and press on |register|.  This "
"informs the desktop server that your phone, and through it all the "
"information you push from your phone to desktop, is associated to your "
"user name.  Registration is permanent, so if you had already previously "
"registered your phone with your name, you don't need registering again.  "
"You do need to register if you want to assign the same phone to a "
"different user."
msgstr ""

#: ../../ghini-family.rst:386
msgid ""
"|pull| to refresh the |ghini.pocket| database with the snapshot from the "
"server.  This also resets the log, which gets anyway overruled by the new"
" snapshot.  Since this is a potentially destructive operation, you need "
"to confirm you really mean it."
msgstr ""

#: ../../ghini-family.rst:390
msgid ""
"|push| to send your collected information: inventory log, corrections, "
"pictures.  In particular if you are sending pictures, this operation will"
" take time.  Please don't be surprised if copying 20 high resolution "
"pictures, over your high speed local network connection, ghini is making "
"you wait a couple of minutes: it's the sum that makes the total."
msgstr ""

#: ../../ghini-family.rst:396
msgid "Exposed API"
msgstr ""

#: ../../ghini-family.rst:398
msgid ""
"This is a technical reference section, you may safely ignore it if you "
"aren't sure what it is about."
msgstr ""

#: ../../ghini-family.rst:401
msgid ""
"|ghini.desktop| runs an XML-RPC server, exposing the following API1.  All"
" functions but ``verify`` and ``get_snapshot`` return 0 on success; "
"``verify`` and ``get_snapshot`` return a string on success; for all "
"functions, if the result is numeric, it is an error code."
msgstr ""

#: ../../ghini-family.rst:405
msgid "verify(client_id)"
msgstr ""

#: ../../ghini-family.rst:408
msgid ""
"Return the user name associated to the client.  The result is either a "
"non-empty string, or a numeric error code."
msgstr ""

#: ../../ghini-family.rst:411
msgid "register(client_id, user_name, security_code)"
msgstr ""

#: ../../ghini-family.rst:414
msgid ""
"Register the client on the server, associating it to the given user_name,"
" given that the provided security_code matches the expected one."
msgstr ""

#: ../../ghini-family.rst:417
msgid "Overwrite any previous registration of the same client."
msgstr ""

#: ../../ghini-family.rst:419
msgid "Return 0 if successful, otherwise a numeric error code."
msgstr ""

#: ../../ghini-family.rst:421
msgid "get_snapshot(client_id)"
msgstr ""

#: ../../ghini-family.rst:424
msgid "Return the current ``pocket.db`` snapshot of the database."
msgstr ""

#: ../../ghini-family.rst:426 ../../ghini-family.rst:446
#: ../../ghini-family.rst:461
msgid "If client is not registered, return a numeric error code."
msgstr ""

#: ../../ghini-family.rst:428
msgid "put_change(client_id, content, baseline)"
msgstr ""

#: ../../ghini-family.rst:431
msgid ""
"Update the ghini database with the content of the collected pocket client"
" logs."
msgstr ""

#: ../../ghini-family.rst:433
msgid "Content is a complete log file, to be handled as a block."
msgstr ""

#: ../../ghini-family.rst:435
msgid "Baseline is a timestamp, expressed as seconds since the Unix Epoch."
msgstr ""

#: ../../ghini-family.rst:437
msgid ""
"Each change line applies to a single plant or accession.  Change lines "
"are composed of change atoms, and atoms come in two flavours: additions "
"(plant photos, accession verification) and overwrites (location name, "
"location coordinates, quantity).  Photos need be sent separately, one per"
" request.  Addition-atoms are always performed, while overwrite-atoms are"
" approved, or rejected, based on their timestamp, the baseline value, and"
" the last change of the affected object.  In particular, an overwrite-"
"atom is rejected if the affected object had been changed since the "
"baseline, except of course if the change was part of this put_change "
"action."
msgstr ""

#: ../../ghini-family.rst:448
msgid ""
"Returns a list of numeric values, each corresponding to a log line, "
"indicating whether the line was successfully applied, or (partially) "
"rejected."
msgstr ""

#: ../../ghini-family.rst:451
msgid "put_picture(client_id, name, base64)"
msgstr ""

#: ../../ghini-family.rst:454
msgid ""
"Add a picture to the collection.  These are sent after the textual data "
"has been updated.  There is no check whether or not the picture is indeed"
" referred to in the database."
msgstr ""

#: ../../ghini-family.rst:458
msgid ""
"If a picture by the same name already exists, the action fails with a "
"numeric error code."
msgstr ""

#: ../../goal.rst:2
msgid "Ghini's goals and highlights"
msgstr ""

#: ../../goal.rst:4
msgid ""
"Should you use this software? This question is for you to answer. We "
"trust that if you manage a botanic collection, you will find Ghini overly"
" useful and we hope that this page will convince you about it."
msgstr ""

#: ../../goal.rst:8
msgid ""
"This page shows how Ghini makes software meet the needs of a botanic "
"garden."
msgstr ""

#: ../../goal.rst:10
msgid ""
"If you already know, and all you want is to do something practical, just"
"  `install the software <installing.html>`_, then check our `user-"
"contributed recipes <use_cases.html>`_."
msgstr ""

#: ../../goal.rst:13
msgid "Botanic Garden"
msgstr ""

#: ../../goal.rst:15
msgid ""
"According to the Wikipedia, »A botanic(al) garden is a garden dedicated "
"to the collection, cultivation and display of a wide range of plants "
"labelled with their botanical names«, and still according to the "
"Wikipedia, »a garden is a planned space, usually outdoors, set aside for "
"the display, cultivation, and enjoyment of plants and other forms of "
"nature.«"
msgstr ""

#: ../../goal.rst:21
msgid ""
"So we have in a botanic garden both the physical space, the garden, as "
"its dynamic, the activities to which the garden is dedicated, activities "
"which makes us call the garden a botanic garden."
msgstr ""

#: ../../goal.rst:27
msgid "**the physical garden**"
msgstr ""

#: ../../goal.rst:31
msgid "**collection related activities in the garden**"
msgstr ""

#: ../../goal.rst:36
msgid "Botanic Garden Software"
msgstr ""

#: ../../goal.rst:38
msgid ""
"At the other end of our reasoning we have the application program Ghini, "
"and again quoting the Wikipedia, »an application program is a computer "
"program designed to perform a group of coordinated functions, tasks, or "
"activities for the benefit of the user«, or, in short, »designed to help "
"people perform an activity«."
msgstr ""

#: ../../goal.rst:44
msgid ""
"Data and algorithms within Ghini have been designed to represent the "
"physical space and the dynamic of a botanic garden."
msgstr ""

#: ../../goal.rst:49 ../../searching.rst:160
msgid "**core structure of Ghini's database**"
msgstr ""

#: ../../goal.rst:51
msgid ""
"In the above figure, a simplified view on the database, the highlighted "
"blocks are those relative to objects you definitely need insert in the "
"database."
msgstr ""

#: ../../goal.rst:55
msgid ""
"We distinguish three main sections in the database.  Start reading the "
"graph from the right hand side, with the relevant **Taxonomy** "
"information, then step to administering your **Collection**, and finally "
"consider the physical **Garden**."
msgstr ""

#: ../../goal.rst:60
msgid ""
"The central element in Ghini's point of view is the ``Accession``. "
"Following its links to other database objects lets us better understand "
"the structure:"
msgstr ""

#: ../../goal.rst:63
msgid "**Accession links Planting to Species**"
msgstr ""

#: ../../goal.rst:65
msgid ""
"An ``Accession`` represents the action of receiving this specific plant "
"material in the garden. As such, ``Accession`` is an abstract concept, it"
" links physical living ``Plantings`` —groups of plants placed each at a "
"``Location`` in the garden— to the corresponding ``Species``. It is not "
"the same as an acquisition from a source, because in a single acquisition"
" you can access material of more than one species. In other words: a "
"single aquisition can embark multiple accessions. An ``Accession`` has "
"zero or more ``Plantings`` associated to it (0..n), and it is at all "
"times connected to exactly 1 ``Species``. Each ``Planting`` belongs to "
"exactly one ``Accession``, each ``Species`` may have multiple "
"``Accessions`` relating to it."
msgstr ""

#: ../../goal.rst:74
msgid ""
"An ``Accession`` stays in the database even if all of its ``Plantings`` "
"have been removed, sold, or have died. Identifying the ``Species`` of an "
"``Accession`` consistently connects all its ``Plantings`` to the "
"``Species``."
msgstr ""

#: ../../goal.rst:79
msgid "**Accession at the base of the history of your plants**"
msgstr ""

#: ../../goal.rst:81
msgid ""
"``Propagations`` and ``Contacts`` provide plant material for the garden; "
"this information is optional and smaller collectors might prefer to leave"
" this aside. A ``Propagation`` trial may be unsuccessful, most of the "
"time it will result in exactly one accession, but it may also produce "
"slightly different taxa, so the database allows for zero  or more "
"``Accessions`` per ``Propagation`` (0..n). Also a ``Contact`` may provide"
" zero or more ``Accessions`` (0..n)."
msgstr ""

#: ../../goal.rst:88
msgid "**Accession and Verification opinions**"
msgstr ""

#: ../../goal.rst:90
msgid ""
"Specialists may formulate their opinion about the ``Species`` to which an"
" ``Accession`` belongs, by providing a ``Verification``, signing it, and "
"stating the applicable level of confidence."
msgstr ""

#: ../../goal.rst:94
msgid "**Accessing your own Propagations**"
msgstr ""

#: ../../goal.rst:96
msgid ""
"If an ``Accession`` was obtained in the garden nursery from a successful "
"``Propagation``, the ``Propagation`` links the ``Accession`` and all of "
"its ``Plantings`` to a single parent ``Planting``, the seed or the "
"vegetative parent."
msgstr ""

#: ../../goal.rst:103
msgid ""
"Even after the above explanation, new users generally still ask why they "
"need pass through an ``Accession`` screen while all they want is to "
"insert a ``Plant`` in the collection, and again: what is this "
"\"accession\" thing anyway?  Most discussions on the net don't make the "
"concept any clearer. One of our users gave an example which I'm glad to "
"include in Ghini's documentation."
msgstr ""

#: ../../goal.rst
msgid "use case"
msgstr ""

#: ../../goal.rst:110
msgid ""
"At the beginning of 2007 we got five seedlings of *Heliconia longa* (a "
"plant ``Species``) from our neighbour (the ``Contact`` source). Since it "
"was the first acquisition of the year, we named them 2007.0001 (we gave "
"them a single unique ``Accession`` code, with quantity 5) and we planted "
"them all together at one ``Location`` as a single ``Planting``, also with"
" quantity 5."
msgstr ""

#: ../../goal.rst:118
msgid ""
"At the time of writing, nine years later, ``Accession`` 2007.0001 has 6 "
"distinct ``Plantings``, each at a different ``Locations`` in our garden, "
"obtained vegetatively (asexually) from the original 5 plants. Our only "
"intervention was splitting, moving, and of course writing this "
"information in the database. Total plant quantity is above 40."
msgstr ""

#: ../../goal.rst:125
msgid ""
"New ``Plantings`` obtained by (assisted) sexual ``Propagation`` come in "
"our database under different ``Accession`` codes, where our garden is the"
" ``Contact`` source and where we know which of our ``Plantings`` is the "
"seed parent."
msgstr ""

#: ../../goal.rst:130
msgid "the above three cases translate into several short usage stories:"
msgstr ""

#: ../../goal.rst:132
msgid ""
"activate the menu Insert → Accession, verify the existence and "
"correctness of the ``Species`` *Heliconia longa*, specify the initial "
"quantity of the ``Accession``; add its ``Planting`` at the desired "
"``Location``."
msgstr ""

#: ../../goal.rst:136
msgid ""
"edit ``Planting`` to correct the amount of living plants — repeat this as"
" often as necessary."
msgstr ""

#: ../../goal.rst:138
msgid ""
"edit ``Planting`` to split it at separate ``Locations`` — this produces a"
" different ``Planting`` under the same ``Accession``."
msgstr ""

#: ../../goal.rst:140
msgid "edit ``Planting`` to add a (seed) ``Propagation``."
msgstr ""

#: ../../goal.rst:141
msgid "edit ``Planting`` to update the status of the ``Propagation``."
msgstr ""

#: ../../goal.rst:142
msgid ""
"activate the menu Insert → Accession to associate an accession to a "
"successful ``Propagation`` trial; add the ``Planting`` at the desired "
"``Location``."
msgstr ""

#: ../../goal.rst:146
msgid ""
"In particular the ability to split a ``Planting`` at several different "
"``Locations`` and to keep all uniformly associated to one ``Species``, or"
" the possibility to keep information about ``Plantings`` that have been "
"removed from the collection, help justify the presence of the "
"``Accession`` abstraction level."
msgstr ""

#: ../../goal.rst:153
msgid "Hypersimplified view"
msgstr ""

#: ../../goal.rst:155
msgid ""
"People using Ghini only sporadically may prefer ignoring the database "
"structure and look at it as two nested sequences of objects, each element"
" of the sequence being necessary to add element at the next level."
msgstr ""

#: ../../goal.rst:159
msgid ""
"In order to get down to an Accession, you will need four levels, as in "
"this example:"
msgstr ""

#: ../../goal.rst:164
msgid ""
"A quite complete set of Families and Genera are inserted in your database"
" at the moment Ghini initializes it. So all you need is adding Species "
"and Accessions, in this order."
msgstr ""

#: ../../goal.rst:168
msgid ""
"When placing a physical Plant (relative to an Accession) somewhere in the"
" garden, you need to describe this \"somewhere\" digitally, as a Location"
" in the garden."
msgstr ""

#: ../../goal.rst:177
msgid "Highlights"
msgstr ""

#: ../../goal.rst:178
msgid "not-so-brief list of highlights, meant to whet your appetite."
msgstr ""

#: ../../goal.rst:181
msgid "taxonomic information"
msgstr ""

#: ../../goal.rst:183
msgid ""
"When you first start Ghini, and connect to a database, Ghini will "
"initialize the database not only with all tables it needs to run, but it "
"will also populate the taxon tables for ranks family and genus, using the"
" data from the “RBG Kew's Family and Genera list from Vascular Plant "
"Families and Genera compiled by R. K. Brummitt and published by the Royal"
" Botanic Gardens, Kew in 1992”.  In 2015 we have reviewed the data "
"regarding the Orchidaceae, using “Tropicos, botanical information system "
"at the Missouri Botanical Garden - www.tropicos.org” as a source."
msgstr ""

#: ../../goal.rst:193
msgid "importing data"
msgstr ""

#: ../../goal.rst:195
msgid ""
"Ghini will let you import any data you put in an intermediate json "
"format. What you import will complete what you already have in the "
"database. If you need help, you can ask some Ghini professional to help "
"you transform your data into Ghini's intermediate json format."
msgstr ""

#: ../../goal.rst:201
msgid "synonyms"
msgstr ""

#: ../../goal.rst:203
msgid ""
"Ghini will allow you define synonyms for species, genera, families. Also "
"this information can be represented in its intermediate json format and "
"be imported in an existing Ghini database."
msgstr ""

#: ../../goal.rst:208
msgid "scientific responsible"
msgstr ""

#: ../../goal.rst:210
msgid ""
"Ghini implements the concept of 'accession', intermediate between "
"physical plant (or a group thereof) and abstract taxon. Each accession "
"can associate the same plants to different taxa, if two taxonomists do "
"not agree on the identification: each taxonomist can have their say and "
"do not need overwrite each other's work. All verifications can be found "
"back in the database, with timestamp and signature."
msgstr ""

#: ../../goal.rst:218
msgid "helps off-line identification"
msgstr ""

#: ../../goal.rst:220
msgid ""
"Ghini allows you associate pictures to physical plants, this can help "
"recognize the plant in case a sticker is lost, or help taxonomic "
"identification if a taxonomist is not available at all times."
msgstr ""

#: ../../goal.rst:225
msgid "exports and reports"
msgstr ""

#: ../../goal.rst:227
msgid ""
"Ghini will let you export a report in whatever textual format you need. "
"It uses a powerful templating engine named 'mako', which will allow you "
"export the data in a selection to whatever format you need. Once "
"installed, a couple of examples are available in the mako subdirectory."
msgstr ""

#: ../../goal.rst:233
msgid "annotate your info"
msgstr ""

#: ../../goal.rst:235
msgid ""
"You can associate notes to plants, accessions, species, .... Notes can be"
" categorized and used in searches or reports."
msgstr ""

#: ../../goal.rst:239
msgid "garden or herbarium"
msgstr ""

#: ../../goal.rst:241
msgid "Management of plant locations."
msgstr ""

#: ../../goal.rst:244
msgid "database history"
msgstr ""

#: ../../goal.rst:246
msgid ""
"All changes in the database is stored in the database, as history log. "
"All changes are 'signed' and time-stamped.  Ghini makes it easy to "
"retrieve the list of all changes in the last working day or week, or in "
"any specific period in the past."
msgstr ""

#: ../../goal.rst:252
msgid "simple and powerful search"
msgstr ""

#: ../../goal.rst:254
msgid ""
"Ghini allows you search the database using simple keywords, e.g.: the "
"name of the location or a genus name, or you can write more complex "
"queries, which do not reach the complexity of SQL but allow you a decent "
"level of detail localizing your data."
msgstr ""

#: ../../goal.rst:260
msgid "database agnostic"
msgstr ""

#: ../../goal.rst:262
msgid ""
"Ghini is not a database management system, so it does not reinvent the "
"wheel. It works storing its data in a SQL database, and it will connect "
"to any database management system which accepts a SQLAlchemy connector. "
"This means any reasonably modern database system and includes MySQL, "
"PostgreSQL, Oracle. It can also work with sqlite, which, for single user "
"purposes is quite sufficient and efficient. If you connect Ghini to a "
"real database system, you can consider making the database part of a LAMP"
" system (Linux-Apache-MySQL-Php) and include your live data on your "
"institution web site."
msgstr ""

#: ../../goal.rst:273
msgid "language agnostic"
msgstr ""

#: ../../goal.rst:275
msgid ""
"The program was born in English and all its technical and user "
"documentation is first written in that language. Both technical and user "
"documentation use ``gettext``, an advanced tool for semi-automatic "
"translation."
msgstr ""

#: ../../goal.rst:279
msgid ""
"The program has been translated and can be used in various other "
"languages, including Spanish (97%), French (82%), Portuguese (71%), to "
"name some Southern American languages, as well as Ukrainian (100%) and "
"Czech (71%)."
msgstr ""

#: ../../goal.rst:283
msgid ""
"Translation of documentation goes a bit slower, with only Ukrainian, "
"Spanish and Italian at more than 50%."
msgstr ""

#: ../../goal.rst:287
msgid "platform agnostic"
msgstr ""

#: ../../goal.rst:289
msgid ""
"Installing Ghini on Windows is an easy and linear process, it will not "
"take longer than 10 minutes. Ghini was born on Linux and installing it on"
" ubuntu, fedora or debian is consequently even easier. MacOSX being based"
" on unix, it is possible to successfully run the Linux installation "
"procedure on any recent Apple computer, after a few preparation steps."
msgstr ""

#: ../../goal.rst:296
msgid "easily updated"
msgstr ""

#: ../../goal.rst:298
msgid ""
"The installation process will produce an updatable installation, where "
"updating it will take less than one minute. Depending on the amount of "
"feedback we receive, we will produce updates every few days or once in a "
"while."
msgstr ""

#: ../../goal.rst:304
msgid "unit tested"
msgstr ""

#: ../../goal.rst:306
msgid ""
"Ghini is continuously and extensively unit tested, something that makes "
"regression of functionality close to impossible. Every update is "
"automatically quality checked, on the Travis Continuous Integration "
"service. Integration of TravisCI with the github platform will make it "
"difficult for us to release anything which has a single failing unit "
"test."
msgstr ""

#: ../../goal.rst:312
msgid ""
"Most changes and additions we make, come with some extra unit test, which"
" defines the behaviour and will make any undesired change easily visible."
msgstr ""

#: ../../goal.rst:316
msgid "customizable/extensible"
msgstr ""

#: ../../goal.rst:318
msgid ""
"Ghini is extensible through plugins and can be customized to suit the "
"needs of the institution."
msgstr ""

#: ../../imex.rst:12
msgid "Importing and Exporting Data"
msgstr ""

#: ../../imex.rst:14
msgid ""
"Ghini offers several formats for exchanging data with other systems, "
"while additional formats may be provided in the form of plug-ins."
msgstr ""

#: ../../imex.rst:17
msgid ""
"For two formats (CSV and JSON) Ghini offers both import and export.  CSV "
"aims at saving and restoring whole tables.  JSON is mostly meant for "
"selections, for non-destructive updating existing data, for combining "
"selections from different databases."
msgstr ""

#: ../../imex.rst:21
msgid ""
"A special case of import-export is handling |ghini.pocket| snapshots, and"
" accepting collected updates from |ghini.pocket| instances."
msgstr ""

#: ../../imex.rst:24
msgid ""
"There is some support for exporting in Access for Biological Collections "
"Data (ABCD) format, while export in BGCI format is provided by the Report"
" plug-in in the form of a Mako Template."
msgstr ""

#: ../../imex.rst:28
msgid ""
"There is also limited support for exporting to an XML format that more or"
" less reflects exactly the tables and row of the database."
msgstr ""

#: ../../imex.rst:31
msgid "Exporting ABCD and XML will not be covered here."
msgstr ""

#: ../../imex.rst:34
msgid "Backup as Flat-files / CSV"
msgstr ""

#: ../../imex.rst:36
msgid ""
"This section is about exporting the complete database as CSV files, one "
"file per table. These files can be later used to restore your database, "
"to initialize an other Ghini instance, as a base for migrating your data "
"to a newer Ghini version."
msgstr ""

#: ../../imex.rst:40
msgid ""
"Please note that we also have a QuickCSV reporter, able to produce a "
"single CSV file, where the user decides, on-the-fly, which fields have to"
" be included in the report.  Here we talk about creating and (partially) "
"restoring databases."
msgstr ""

#: ../../imex.rst:45
msgid "Creating a backup"
msgstr ""

#: ../../imex.rst:47
msgid ""
"To export the Ghini data to CSV select "
":menuselection:`Tools-->Backup-->Create` from the menu."
msgstr ""

#: ../../imex.rst:50
msgid ""
"This tool will ask you to select a directory to export the CSV data. All "
"of the tables in Ghini will be exported to files in the format "
"``table_name.txt`` if ``TableName`` is the name of the table where the "
"data was exported from."
msgstr ""

#: ../../imex.rst:56
msgid "Restoring a backup"
msgstr ""

#: ../../imex.rst:58
msgid ""
"In general it is best to only import CSV files into Ghini that were "
"previously exported from Ghini.  It is possible to import any CSV file "
"but that is more advanced that this doc will cover."
msgstr ""

#: ../../imex.rst:62
msgid ""
"To import CSV files into Ghini select "
":menuselection:`Tools-->Backup-->Restore` from the menu."
msgstr ""

#: ../../imex.rst:65
msgid ""
"After clicking |OK| on the dialog that ask if you are sure you know what "
"you're doing a file chooser will open.  In the file chooser select the "
"files you want to import."
msgstr ""

#: ../../imex.rst:69
msgid "Restoring a backup deletes all previous content from restored tables."
msgstr ""

#: ../../imex.rst:72
msgid "JSON - JavaScript Object Notation"
msgstr ""

#: ../../imex.rst:74
msgid ""
"This feature has being developed when a user asked for it.  Their request"
" was quite simple, but we preferred anyway to lay down the bases for a "
"more generic solution.  At the moment, everything we ever needed is in "
"place.  Even so, this feature is still quite far from complete, so if it "
"does not satisfy your needs, please contact the maintainers."
msgstr ""

#: ../../imex.rst:80
msgid "Exporting to JSON"
msgstr ""

#: ../../imex.rst:84
msgid ""
"when you activate this export tool, you are given the choice to specify "
"what to export. You can use the current selection to limit the span of "
"the export, or you can start at the complete content of a domain, to be "
"chosen among Species, Accession, Plant."
msgstr ""

#: ../../imex.rst:90
msgid ""
"Exporting *Species* will only export the complete taxonomic information "
"in your database. *Accession* will export all your accessions plus all "
"the taxonomic information it refers to: unreferred to taxa will not be "
"exported. *Plant* will export all living plants (some accession might not"
" be included), all referred to locations and taxa."
msgstr ""

#: ../../imex.rst:98
msgid "Importing from JSON"
msgstr ""

#: ../../imex.rst:100
msgid ""
"This is *the* way to import data into an existing database, without "
"destroying previous content. A typical example of this functionality "
"would be importing your digital collection into a fresh, just initialized"
" Ghini database. Converting a database into bauble json interchange "
"format is beyond the scope of this manual, please contact one of the "
"authors if you need any further help."
msgstr ""

#: ../../imex.rst:107
msgid ""
"Using the Ghini json interchange format, you can import data which you "
"have exported from a different Ghini installation."
msgstr ""

#: ../../imex.rst:111
msgid "Importing a Pictures Collection"
msgstr ""

#: ../../imex.rst:113
msgid ""
"We can consider a collection of plant pictures as a particular form of "
"botanical database, in which each picture is clearly associated with one "
"specific plant."
msgstr ""

#: ../../imex.rst:117
msgid ""
"Even without using a photo collection software, you can associate "
"pictures to accessions by following one and the same clear rule when "
"naming picture files."
msgstr ""

#: ../../imex.rst:121
msgid ""
"For example, ``2018.0020.1 (4) Epidendrum.jpg`` would be the name of the "
"fourth picture for plant number 1 within accession 2018.0020, identified "
"to rank genus as an Epidendrum."
msgstr ""

#: ../../imex.rst:125
msgid ""
"The :menuselection:`Tools-->Import-->Pictures` functionality here "
"described is meant for importing an ordered collection of plant pictures "
"either to initialize a ghini database, or for periodically adding to it."
msgstr ""

#: ../../imex.rst:130
msgid ""
"Use :menuselection:`Tools-->Import-->Pictures` to activate this import "
"tool.  Import goes in several steps: parameter definition; data revision "
"and confirmation; the import step proper; finally review the import log."
"  At the first two steps you can confirm the data and go to the next step"
" by clicking on the |next| button, or you can go back to the previous "
"step by clicking on the |prev| button.  Once the import is done and "
"you're reviewing the log, you can only either confirm —or abort— the "
"whole transaction."
msgstr ""

#: ../../imex.rst:140
msgid ""
"In the \"parameter definition\" pane you: select the directory from which"
" you intend to import pictures; indicate whether to import pictures "
"recursively; select or create a location which will be used as default "
"location for new plants; inform the tool about the rule you've been "
"following when naming picture files."
msgstr ""

#: ../../imex.rst:148
msgid ""
"In the \"data revision\" pane you are shown a table with as many rows as "
"the pictures you are importing.  Each row holds as much information as "
"the tool managed to extract from the picture name.  You can review the "
"information, correct or confirm, and indicate whether or not the row "
"should be imported."
msgstr ""

#: ../../imex.rst:156
msgid ""
"In the final \"commit or rollback\" pane you read the logs relative to "
"your data import, and decide whether to keep them (commit them to the "
"database), or undo them (rollback the transaction)."
msgstr ""

#: ../../imex.rst:162
msgid ""
"When the Picture Collection importer creates or updates objects, it also "
"sets a Note that you can use for selecting the objects involved in the "
"import, and for reviewing if needed."
msgstr ""

#: ../../imex.rst:167
msgid "Importing from a Generic Database"
msgstr ""

#: ../../imex.rst:169
msgid ""
"This functionality is the object of `issue #127 "
"<https://github.com/Ghini/|ghini.desktop|/issues/127>`_, for which we "
"have no generic solution yet."
msgstr ""

#: ../../imex.rst:173
msgid ""
"If you're interested in importing data from some flat file (e.g.: Excel "
"spreadsheet) or from any database, contact the developers."
msgstr ""

#: ../../index.rst:2
msgid "Documentation for Ghini 3.1"
msgstr ""

#: ../../index.rst:8
msgid ""
"Ghini is a suite of applications for managing botanical specimen "
"collections."
msgstr ""

#: ../../index.rst:10
msgid ""
"**ghini.desktop** lets you create and query a database representing "
"objects and events in your plant collection."
msgstr ""

#: ../../index.rst:11
msgid "**ghini.web** publishes highlights from your database on the web."
msgstr ""

#: ../../index.rst:12
msgid "**ghini.pocket** puts a snapshot of your database in your handheld device."
msgstr ""

#: ../../index.rst:13
msgid ""
"**ghini.tour** assists garden visitors with a map and spoken virtual "
"panels."
msgstr ""

#: ../../index.rst:17
msgid ""
"The bulk of this documentation focuses on ghini.desktop.  One final "
"chapter presents the rest of the Ghini family: :any:`ghini.pocket`, "
":any:`ghini.web`, :any:`ghini.tour`, and the :any:`interaction among "
"components`."
msgstr ""

#: ../../index.rst:21
msgid ""
"All Ghini software is `open <http://www.opensource.org>`_ and `free "
"<http://www.fsf.org>`_. Our standalone software is released under the "
"`GNU Public License <http://www.fsf.org/licensing/licenses/gpl.html>`_. "
"Our client-server software follows the `GNU Affero Public License "
"<http://www.fsf.org/licensing/licenses/agpl.html>`_."
msgstr ""

#: ../../index.rst:28
msgid "Statements"
msgstr ""

#: ../../index.rst:37
msgid "Installing Ghini"
msgstr ""

#: ../../index.rst:46
msgid "User's Guide"
msgstr ""

#: ../../index.rst:61
msgid "Cookbook"
msgstr ""

#: ../../index.rst:69
msgid "Administration"
msgstr ""

#: ../../index.rst:77
msgid "Ghini Family"
msgstr ""

#: ../../index.rst:85
msgid "Ghini Development"
msgstr ""

#: ../../index.rst:94
msgid "Supporting Ghini"
msgstr ""

#: ../../index.rst:98
msgid ""
"If you're using Ghini, or if you feel like helping its development "
"anyway, please consider `donating <https://pledgie.com/campaigns/29188>`_"
msgstr ""

#: ../../installing.rst:2
msgid "Installation"
msgstr ""

#: ../../installing.rst:4
msgid ""
"ghini.desktop is a cross-platform program and it will run on unix "
"machines like GNU/Linux and MacOSX, as well as on Windows."
msgstr ""

#: ../../installing.rst:7
msgid "one-liner for hurried users."
msgstr ""

#: ../../installing.rst:10
msgid ""
"Linux users just download and run `the installation script "
"<https://raw.githubusercontent.com/Ghini/ghini.desktop/ghini-3.1-dev/scripts/devinstall.sh>`_."
msgstr ""

#: ../../installing.rst:13
msgid ""
"Windows users in a real hurry don't the instructions and use a recent "
"`Windows installer <https://github.com/Ghini/ghini.desktop/releases/>`_."
"  You do not miss any functional feature, but you have less chances to "
"contribute to development."
msgstr ""

#: ../../installing.rst:17
msgid "Mac users are never in a hurry, are they?"
msgstr ""

#: ../../installing.rst:19
msgid "Please make sure you check the documentation at some later moment."
msgstr ""

#: ../../installing.rst:21
msgid ""
"The installation and subsequent updates for ghini.desktop are based on a "
"single cross-platform installation procedure.  This has a few big "
"advantages which you will learn to appreciate as we go."
msgstr ""

#: ../../installing.rst:24
msgid "The installation is based on running a script."
msgstr ""

#: ../../installing.rst:26
msgid ""
"The GNU/Linux script takes care of everything, from dependecies to "
"installation for users in the ``ghini`` group."
msgstr ""

#: ../../installing.rst:28
msgid "The Windows script needs you to first install a couple things."
msgstr ""

#: ../../installing.rst:29
msgid ""
"On MacOSX we use the same script as on GNU/Linux. Since OSX has no "
"default package manager, we install one and we use it before we start the"
" script."
msgstr ""

#: ../../installing.rst:32
msgid ""
"Following our installation procedure, you will end with Ghini running "
"within a Python virtual environment, all Python dependencies installed "
"locally, non conflicting with any other Python program you may have on "
"your system."
msgstr ""

#: ../../installing.rst:36
msgid ""
"Dependencies that don't fit in a Python virtual environment are: Python, "
"virtualenv, GTK+, and a couple of Gtk libraries. Their installation "
"varies per platform."
msgstr ""

#: ../../installing.rst:39
msgid ""
"If you later choose to remove Ghini, you simply remove the virtual "
"environment, which is a directory, with all of its content, then decide "
"whether to remove the globally installed dependencies."
msgstr ""

#: ../../installing.rst:43
msgid "Installing on GNU/Linux"
msgstr ""

#: ../../installing.rst:45
msgid "Open a shell terminal window, and follow the following instructions."
msgstr ""

#: ../../installing.rst:47
msgid ""
"Download the `devinstall.sh "
"<https://raw.githubusercontent.com/Ghini/ghini.desktop/ghini-3.1-dev/scripts/devinstall.sh>`_"
" script. Please do not follow the link, instead right-click on it, and "
"choose *Save link as…*."
msgstr ""

#: ../../installing.rst:51
msgid ""
"Invoke the script from a terminal window, starting at the directory where"
" you downloaded it, like this::"
msgstr ""

#: ../../installing.rst:56
msgid "The script will produce quite some output, which you can safely ignore."
msgstr ""

#: ../../installing.rst:58
msgid "global installation"
msgstr ""

#: ../../installing.rst:61
msgid ""
"When almost ready, the installation script will ask you for your "
"password.  This lets it create a ``ghini`` user group, initialise it to "
"just yourself, make the just created ``ghini`` script available to the "
"whole ``ghini`` user group."
msgstr ""

#: ../../installing.rst:66
msgid ""
"If feeling paranoid, you can safely not give your password and interrupt "
"the script there."
msgstr ""

#: ../../installing.rst:69
msgid ""
"Possibly the main advantage of a global installation is being able to "
"find Ghini in the application menus of your graphic environment."
msgstr ""

#: ../../installing.rst:73
msgid "You can now start ghini by invoking the ``ghini`` script::"
msgstr ""

#: ../../installing.rst:77
msgid ""
"You use the same ``ghini`` script to update ghini to the latest released "
"production patch::"
msgstr ""

#: ../../installing.rst:82
msgid "This is what you would do when ghini shows you something like this:"
msgstr ""

#: ../../installing.rst:86
msgid ""
"Users of the global installation will also type ``ghini`` to invoke the "
"program, but they will get to a different script, located in "
"``/usr/local/bin``. This globally available ``ghini`` script cannot be "
"used to update a ghini installation."
msgstr ""

#: ../../installing.rst:91
msgid ""
"Again the same ``ghini`` script lets you install the optional database "
"connectors: option ``-p`` is for PostgreSQL, option ``-m`` is for "
"MySQL/MariaDB, but you can also install both at the same time::"
msgstr ""

#: ../../installing.rst:97
msgid ""
"Please beware: you might need solve dependencies. How to do so, depends "
"on which GNU/Linux flavour you are using. Check with your distribution "
"documentation."
msgstr ""

#: ../../installing.rst:101
msgid ""
"You can also use the ``ghini`` script to switch to a different production"
" line.  At the moment ``1.0`` is the stable one, but you can select "
"``3.1`` if you want to help us with its development::"
msgstr ""

#: ../../installing.rst:107
msgid "beginner's note"
msgstr ""

#: ../../installing.rst:110
msgid ""
"To run a script, first make sure you note down the name of the directory "
"to which you have downloaded the script, then you open a terminal window "
"and in that window you type `bash` followed by a space and the complete "
"name of the script including directory name, and hit on the enter key."
msgstr ""

#: ../../installing.rst:116
msgid "technical note"
msgstr ""

#: ../../installing.rst:119
msgid "You can study the script to see what steps if runs for you."
msgstr ""

#: ../../installing.rst:121
msgid ""
"In short it will install dependencies which can't be satisfied in a "
"virtual environment, then it will create a virtual environment named as "
"your selected branch (e.g.: ``ghini-3.1``), use git to download the "
"sources to a directory named ``~/Local/github/Ghini/ghini.desktop``, and "
"connect this git checkout to the ``ghini-3.1`` branch (this you can "
"consider a production line), it then builds ghini, downloading all "
"remaining dependencies in the virtual environment, and finally it creates"
" the ``ghini`` startup script."
msgstr ""

#: ../../installing.rst:130
msgid ""
"If you have ``sudo`` permissions, it will be placed in "
"``/usr/local/bin``, otherwise in your ``~/bin`` folder."
msgstr ""

#: ../../installing.rst:134 ../../installing.rst:212 ../../installing.rst:356
msgid "Next..."
msgstr ""

#: ../../installing.rst:138
msgid "Installing on MacOSX"
msgstr ""

#: ../../installing.rst:140
msgid ""
"Being macOS a unix environment, most things will work the same as on "
"GNU/Linux (sort of)."
msgstr ""

#: ../../installing.rst:143
msgid ""
"First of all, you need things which are an integral part of a unix "
"environment, but which are missing in a off-the-shelf mac:"
msgstr ""

#: ../../installing.rst:146
msgid ""
"developers tools: xcode. check the wikipedia page for the version "
"supported on your mac."
msgstr ""

#: ../../installing.rst:148
msgid "package manager: homebrew (tigerbrew for older OSX versions)."
msgstr ""

#: ../../installing.rst:150
msgid "Installation on older macOS."
msgstr ""

#: ../../installing.rst:153
msgid ""
"Every time we tested, we could only solve all dependencies on the two or "
"three most recent macOS versions.  In April 2015 this excluded macOS 10.6"
" and older.  In September 2017 this excluded macOS 10.8 and older.  We "
"never had a problem with the lastest macOS."
msgstr ""

#: ../../installing.rst:158
msgid ""
"The problem lies with homebrew and some of the packages we rely on. The "
"message you have to fear looks like this::"
msgstr ""

#: ../../installing.rst:163
msgid "The only solution I can offer is: please update your system."
msgstr ""

#: ../../installing.rst:165
msgid ""
"On the bright side, if at any time in the past you did install "
"ghini.desktop on your older and now unsupported macOS, you will always be"
" able to update ghini.desktop to the latest version."
msgstr ""

#: ../../installing.rst:169
msgid "With the above installed, open a terminal window and run::"
msgstr ""

#: ../../installing.rst:173
msgid ""
"make sure you understand the problems it reports, and correct them. pygtk"
" will need xquartz and brew will not solve the dependency automatically. "
"either install xquartz using brew or the way you prefer::"
msgstr ""

#: ../../installing.rst:179
msgid "then install the remaining dependencies::"
msgstr ""

#: ../../installing.rst:184
msgid "follow all instructions on how to activate what you have installed."
msgstr ""

#: ../../installing.rst:186
msgid ""
"In particular, make sure you read and understand all reports starting "
"with ``If you need to have this software``."
msgstr ""

#: ../../installing.rst:189
msgid ""
"You will need at least the following four lines in your "
"``~/.bash_profile``::"
msgstr ""

#: ../../installing.rst:196
msgid "Activate the profile by sourcing it::"
msgstr ""

#: ../../installing.rst:200
msgid ""
"Before we can run ``devinstall.sh`` as on GNU/Linux, we still need "
"installing a couple of python packages, globally. Do this::"
msgstr ""

#: ../../installing.rst:205
msgid ""
"The rest is just as on a normal unix machine. Read the above GNU/Linux "
"instructions, follow them, enjoy."
msgstr ""

#: ../../installing.rst:207
msgid ""
"As an optional aesthetical step, consider packaging your ``~/bin/ghini`` "
"script in a `platypus <https://github.com/sveinbjornt/Platypus>`_ "
"application bundle.  The ``images`` directory contains a 128×128 icon."
msgstr ""

#: ../../installing.rst:216
msgid "Installing on Windows"
msgstr ""

#: ../../installing.rst:218
msgid ""
"The steps described here instruct you on how to install Git, Gtk, Python,"
" and the python database connectors. With this environment correctly set "
"up, the Ghini installation procedure runs as on GNU/Linux. The concluding"
" steps are again Windows specific."
msgstr ""

#: ../../installing.rst:223
msgid ""
"Ghini has been tested with and is known to work on W-XP, W-7 up to W-10. "
"Although it should work fine on other versions Windows it has not been "
"thoroughly tested."
msgstr ""

#: ../../installing.rst:233
msgid "The installation steps on Windows:"
msgstr ""

#: ../../installing.rst:235
msgid ""
"download and install ``git`` (comes with a unix-like ``sh`` and includes "
"``vi``). Grab it from `the Git download area <https://git-"
"scm.com/download/win>`_."
msgstr ""

#: ../../installing.rst:238
msgid ""
"all default options are fine, except we need git to be executable from "
"the command prompt:"
msgstr ""

#: ../../installing.rst:243
msgid ""
"download and install Python 2.x (32bit). Grab it from the `Python "
"official site <http://www.python.org>`_."
msgstr ""

#: ../../installing.rst:246
msgid "When installing Python, do put Python in the PATH:"
msgstr ""

#: ../../installing.rst:250
msgid ""
"download ``pygtk`` from `the official source "
"<http://ftp.gnome.org/pub/GNOME/binaries/win32/pygtk/>`_. (this requires "
"32bit python). be sure you download the \"all in one\" version."
msgstr ""

#: ../../installing.rst:254
msgid "Make a complete install, selecting everything:"
msgstr ""

#: ../../installing.rst:258
msgid ""
"(Possibly necessary, maybe superfluous) install lxml, you can grab this "
"from `the pypi archives <https://pypi.python.org/pypi/lxml/3.4.4>`_"
msgstr ""

#: ../../installing.rst:261
msgid "Remember you need the 32 bit version, for Python 2.7."
msgstr ""

#: ../../installing.rst:272
msgid ""
"(definitely optional) download and install a database connector other "
"than ``sqlite3``."
msgstr ""

#: ../../installing.rst:275
msgid ""
"If you plan using PostgreSQL, the best Windows binary library for Python "
"is `psycopg and is Made in Italy "
"<http://initd.org/psycopg/docs/install.html>`_."
msgstr ""

#: ../../installing.rst:279
msgid "**REBOOT**"
msgstr ""

#: ../../installing.rst:281
msgid "hey, this is Windows, you need to reboot for changes to take effect!"
msgstr ""

#: ../../installing.rst:283
msgid ""
"We're done with the dependecies, now we can download and run the batch "
"file:"
msgstr ""

#: ../../installing.rst:285
msgid ""
"`devinstall.bat "
"<https://raw.githubusercontent.com/Ghini/ghini.desktop/ghini-3.1-dev/scripts/devinstall.bat>`_"
msgstr ""

#: ../../installing.rst:287
msgid ""
"Please don't just follow the above link.  Instead: right click, save link"
" as..."
msgstr ""

#: ../../installing.rst:291
msgid ""
"Also make sure you don't let Windows convert the script to a text "
"document."
msgstr ""

#: ../../installing.rst:295
msgid ""
"Now **Open** the script to run it.  Please note: in the below image, we "
"have saved the file twice, once letting Windows convert it to a text "
"document, and again as a Windows Batch File.  Opening the batch file will"
" run the script.  Opening the text document will show you the code of the"
" batch file, which isn't going to lead us anywhere."
msgstr ""

#: ../../installing.rst:303
msgid ""
"If you installed everything as described here, the first thing you should"
" see when you start the installation script is a window like this, and "
"your computer will be busy during a couple of minutes, showing you what "
"it is doing."
msgstr ""

#: ../../installing.rst:310
msgid ""
"Running ``devinstall.bat`` will pull the ``ghini.desktop`` repository "
"from github to your home directory, under ``Local\\github\\Ghini``, "
"checkout the ``ghini-3.1`` production line, create a virtual environment "
"and install ghini into it."
msgstr ""

#: ../../installing.rst:315
msgid ""
"You can also run ``devinstall.bat`` passing it as argument the numerical "
"part of the production line you want to follow."
msgstr ""

#: ../../installing.rst:318
msgid ""
"This is the last installation step that depends, heavily, on a working "
"internet connection."
msgstr ""

#: ../../installing.rst:321
msgid ""
"The operation can take several minutes to complete, depending on the "
"speed of your internet connection."
msgstr ""

#: ../../installing.rst:324
msgid ""
"the last installation step creates the Ghini group and shortcuts in the "
"Windows Start Menu, for all users. To do so, you need run a script with "
"administrative rights. The script is called ``devinstall-finalize.bat``, "
"it is right in your HOME folder, and has been created at the previous "
"step."
msgstr ""

#: ../../installing.rst:332
msgid ""
"Right-click on it, select run as administrator, confirm you want it to "
"make changes to your computer.  These changes are in the Start Menu only:"
" create the Ghini group, place the Ghini shortcut."
msgstr ""

#: ../../installing.rst:336
msgid "download the batch file, it will help you staying up-to-date:"
msgstr ""

#: ../../installing.rst:338
msgid ""
"`ghini-update.bat "
"<https://raw.githubusercontent.com/Ghini/ghini.desktop/ghini-3.1-dev/scripts"
"/ghini-update.bat>`_"
msgstr ""

#: ../../installing.rst:340
msgid ""
"If you are on a recent Ghini installation, each time you start the "
"program, Ghini will check on the development site and alert you of any "
"newer ghini release within your chosen production line."
msgstr ""

#: ../../installing.rst:344
msgid ""
"Any time you want to update your installation, just run the ``ghini-"
"update.bat`` script, it will hardly take one minute."
msgstr ""

#: ../../installing.rst:347
msgid ""
"How to save a batch file, and how to run it: check the the quite detailed"
" instructions given for ``devinstall.bat``."
msgstr ""

#: ../../installing.rst:350
msgid ""
"If you would like to generate and print PDF reports using Ghini's default"
" report generator then you will need to download and install `Apache FOP "
"<http://xmlgraphics.apache.org/fop/>`_.  After extracting the FOP archive"
" you will need to include the directory you extracted to in your PATH."
msgstr ""

#: ../../installing.rst:360
msgid "Installing on Android"
msgstr ""

#: ../../installing.rst:362
msgid ""
"``ghini.desktop`` is a desktop program, obviously you don't install it on"
" a handheld device, but we do offer the option, for your Android phone or"
" tablet, to install ``ghini.pocket``."
msgstr ""

#: ../../installing.rst:365
msgid ""
"``ghini.pocket`` is a small data viewer, it comes handy if you want to "
"have a quick idea of a plant species, its source, and date it entered the"
" garden, just by scanning a plant label."
msgstr ""

#: ../../installing.rst:368
msgid ""
"Installation is as easy as it can be: just `look for it in Google Play "
"<https://play.google.com/store/apps/details?id=me.ghini.pocket>`_, and "
"install it."
msgstr ""

#: ../../installing.rst:371
msgid ""
"Export the data from ``ghini.desktop`` to pocket format, copy it to your "
"device, enjoy."
msgstr ""

#: ../../propagations.rst:4
msgid "Dealing with Propagations"
msgstr ""

#: ../../propagations.rst:6
msgid ""
"Ghini offers the possibility to associate Propagations trials to Plants "
"and to document their treatments and results. Treatments are integral "
"parts of the description of a Propagation trial. If a Propagation trial "
"is successful, Ghini lets you associate it to a new Accession. You can "
"only associate one Accession to a Propagation Trial."
msgstr ""

#: ../../propagations.rst:12
msgid "Here we describe how you use this part of the interface."
msgstr ""

#: ../../propagations.rst:15
msgid "Creating a Propagation"
msgstr ""

#: ../../propagations.rst:17
msgid ""
"A Propagation (trial) is obtained from a Plant. Ghini reflects this in "
"its interface: you select a plant, open the Plant Editor on it, activate "
"the Propagation Tab, click on Add."
msgstr ""

#: ../../propagations.rst:21
msgid ""
"When you do the above, you get a Propagation Editor window. Ghini does "
"not consider Propagation trials as independent entities. As a result, "
"Ghini treats the Propagation Editor as a special editor window, which you"
" can only reach from the Plant Editor."
msgstr ""

#: ../../propagations.rst:26
msgid ""
"For a new Propagation, you select the type of propagation (this becomes "
"an immutable property of the propagation) then insert the data describing"
" it."
msgstr ""

#: ../../propagations.rst:29
msgid ""
"You will be able to edit the propagation data via the same path: select a"
" plant, open the Plant Editor, identify the propagation you want to edit,"
" click on the corresponding Edit button. You will be able to edit all "
"properties of an existing Propagation trial, except its type."
msgstr ""

#: ../../propagations.rst:34
msgid ""
"In the case of a seed propagation trial, you have a pollen parent, and a "
"seed parent. You should always associate the Propagation trial to the "
"seed parent."
msgstr ""

#: ../../propagations.rst:38
msgid ""
"In Ghini-1.0 you specify the pollen parent plant in the \"Notes\" field, "
"while Ghini-1.1 has a (relation) field for it. According to ITF2, there "
"might be cases in seed propagation trials where it is not known which "
"Plant plays which role. Again, in Ghini-1.0 you should use a note to "
"indicate whether this is the case, Ghini-1.1 has a (boolean) field "
"indicating whether this is the case."
msgstr ""

#: ../../propagations.rst:47
msgid "Using a Propagation"
msgstr ""

#: ../../propagations.rst:49
msgid "A Propagation trial may be successful and result in a new Accession."
msgstr ""

#: ../../propagations.rst:51
msgid ""
"Ghini helps you reflect this in the database: create a new Accession, "
"immediately switch to the Source tab and select \"Garden Propagation\" in"
" the (admittedly somewhat misleading) Contact field."
msgstr ""

#: ../../propagations.rst:55
msgid ""
"Start typing the plant number and a list of matching plants with "
"propagation trials will appear for you to select from."
msgstr ""

#: ../../propagations.rst:58
msgid ""
"Select the plant, and the list of accessed and unaccessed propagation "
"trials will appear in the lower half of the window."
msgstr ""

#: ../../propagations.rst:61
msgid ""
"Select a still unaccessed propagation trial from the list and click on Ok"
" to complete the operation."
msgstr ""

#: ../../propagations.rst:64
msgid ""
"Using the data from the Propagation trial, Ghini completes some of the "
"fields in the General tab: Taxon name, Type of material, and possibly "
"Provenance. You will be able to edit these fields, but please note that "
"the software will not prevent introducing conceptual inconsistencies in "
"your database."
msgstr ""

#: ../../propagations.rst:70
msgid "You can associate a Propagation trial to only one Accession."
msgstr ""

#: ../../report.rst:5
msgid "Generating reports"
msgstr ""

#: ../../report.rst:7
msgid ""
"A database without exporting facilities is of little use.  Ghini lets you"
" export your data in table format (files you can open in a spreadsheet "
"program), as labels (to be printed or engraved), as html pages, pdf or "
"postscript documents, and the list could go on.  Table format files we "
"also call 'flat files', and the most common example would be CSV files."
msgstr ""

#: ../../report.rst:13
msgid "The Report Tools"
msgstr ""

#: ../../report.rst:15
msgid ""
"Ghini has two Report Tools, one based on templates, and a quick solution "
"for flat file production.  The ``Template`` based tool is as flexible as "
"a programming language can be; the ``Quick CSV`` tool shares much of its "
"user interface with the query builder."
msgstr ""

#: ../../report.rst:19
msgid ""
"You activate the Report Tools from the main menu: "
":menuselection:`Tools-->Report`, then choose either ``From Template``, or"
" ``Quick CSV``.  Both Report Tools act on the current result in the "
"results view, so you first select something, then start the Report Tool."
msgstr ""

#: ../../report.rst:25
msgid "Selecting the whole collection."
msgstr ""

#: ../../report.rst:28
msgid ""
"If you want to produce a report regarding your whole collection, you can "
"do it from at least two points of view: you may want all the ``Species``,"
" or you may want all the ``Locations``."
msgstr ""

#: ../../report.rst:31
msgid ""
"A handy shortcut to get all your species in the selection, go to the home"
" screen, then click on the ``Families: in use`` cell."
msgstr ""

#: ../../report.rst:34
msgid ""
"If your focus is more on the garden location than on taxonomy and "
"accessions, you would click on the ``Locations: total`` cell."
msgstr ""

#: ../../report.rst:37
msgid ""
"The `Quick CSV` report tool can act on the whole collection, regardless "
"the content of the results view."
msgstr ""

#: ../../report.rst:41
msgid "Template Based Reports"
msgstr ""

#: ../../report.rst:43
msgid ""
"Activate the :menuselection:`Tools-->Report-->From Template` and you get "
"the following dialog box (fields may be filled in differently):"
msgstr ""

#: ../../report.rst:48
msgid ""
"You have already selected your objects in the main window, you now here "
"select a report template, then press on ``Execute`` to produce your "
"report.  Ghini will open the report in the corresponding application, if "
"installed and enabled."
msgstr ""

#: ../../report.rst:52
msgid ""
"Ghini comes with a few sample package-templates, and it lets you install "
"your own user-templates."
msgstr ""

#: ../../report.rst:54
msgid "package-templates vs. user-templates"
msgstr ""

#: ../../report.rst:57
msgid ""
"Package-templates are integral part of the installation and are "
"overwritten every time you update your installation.  User-templates are "
"part of your custom data, just like your ghini configuration, your sqlite"
" databases and your plant pictures.  User-templates are persistent as "
"long as you stay in the same production line (say, ghini-3.1)."
msgstr ""

#: ../../report.rst:62
msgid ""
"To install a new template as a user-template, click on ``Add``, choose "
"the file that contains your template, confirm.  |ghini.desktop| will copy"
" it to your ghini user directory."
msgstr ""

#: ../../report.rst:65
msgid ""
"You can delete installed user-templates, or disable package-templates: "
"select the template name in the pull down list, click on ``Remove``.  "
"Removing a user-templates deletes its file from your custom user data.  "
"Removing a package-template only disables it for the current user.  You "
"can enable all disabled package-templates by opening the ``Add`` dialog "
"box, and clicking on the ``Reset package-templates`` button"
msgstr ""

#: ../../report.rst:71
msgid ""
"A user can overrule a package-template, by installing it again as a user-"
"template.  Installed user-templates are just text files, you can edit "
"them with any decent text editor.  This allows you to alter package-"
"templates, and to keep your changes across updates.  You can use your "
"preferred file handling tool to copy or rename your user-templates."
msgstr ""

#: ../../report.rst:76
msgid ""
"Choosing a template implies the choice of a template language.  "
"|ghini.desktop| supports three template languages: Jinja2, Mako and XSL."
"  There is only one formatting engine handling the Jinja2 template "
"language, and the same goes for Mako.  During installation you indicated "
"which of the several XSL formatting engines you wanted to have, if any."
msgstr ""

#: ../../report.rst:81
msgid ""
"Expand the ``Details`` section to see some information about the selected"
" formatter template."
msgstr ""

#: ../../report.rst:85
msgid ""
"The formatter engine combines selection and template to produce a report."
"  Each formatter template indicates its iteration domain, that is what "
"kind of collection objects you focus on in your report.  In the above "
"example, we are using Jinja2 to report about individual plants, producing"
" —per plant— a postscript label with a QR code."
msgstr ""

#: ../../report.rst:90
msgid ""
"Expand the ``Options`` section to see what extra parameters your selected"
" template may require or expects."
msgstr ""

#: ../../report.rst:94
msgid ""
"In the above example, the plant-labelling formatter lets you override the"
" selection, and produce a set of labels in your preferred format, for a "
"given range of accession codes."
msgstr ""

#: ../../report.rst:97
msgid ""
"In general: choose the report you need, specify parameters if required, "
"and produce the report.  Ghini will open the report in the associated "
"application."
msgstr ""

#: ../../report.rst:100
msgid ""
"This is as far as generic information can go.  Formatter templates can be"
" very specific, and vary broadly from each other, most of them are small "
"pieces of software themselves."
msgstr ""

#: ../../report.rst:104
msgid "Template-less Reports (Quick CSV)"
msgstr ""

#: ../../report.rst:106
msgid ""
"Activate the :menuselection:`Tools-->Report-->Quick CSV` and you get the "
"following dialog box:"
msgstr ""

#: ../../report.rst:110
msgid "Start from the top and work your way to the bottom:"
msgstr ""

#: ../../report.rst:112
msgid "decide whether you work on the selection or the whole collection,"
msgstr ""

#: ../../report.rst:113
msgid "choose the iteration domain,"
msgstr ""

#: ../../report.rst:114
msgid "select the properties to include in the report,"
msgstr ""

#: ../../report.rst:115
msgid "drag and drop them in the list to get them in the correct order,"
msgstr ""

#: ../../report.rst:116
msgid "choose the destination file,"
msgstr ""

#: ../../report.rst:117
msgid "execute."
msgstr ""

#: ../../report.rst:119
msgid ""
"Ghini will open the report, a CSV file, in your preferred spreadsheet "
"program."
msgstr ""

#: ../../report.rst:121
msgid ""
"Do you really need any further documentation?  If anything isn't clear "
"then please ask."
msgstr ""

#: ../../report.rst:124
msgid "Technical information"
msgstr ""

#: ../../report.rst:126
msgid ""
"The remainder of this page provides technical information and links "
"regarding the formatter engines, and gives hints on writing report "
"templates.  Writing templates comes very close to writing a computer "
"program, and that's beyond the scope of this manual, but we have hints "
"that will definitely be useful to the interested reader."
msgstr ""

#: ../../report.rst:133
msgid "Working with Templates Languages"
msgstr ""

#: ../../report.rst:136
msgid "Common information"
msgstr ""

#: ../../report.rst:138
msgid ""
"Creating reports with Mako and Jinja2 technically equivalent to creatint "
"a web page from a template.  Both Mako and Jinja2 are indeed mostly used "
"for dynamic creation of static web pages.  This should be easy to do, for"
" anyone with a little programming experience."
msgstr ""

#: ../../report.rst:142
msgid ""
"Ghini instructs the template generator to use the same file extension as "
"the template, stripping the trailing ``.mako`` / ``.jj2`` part.  The "
"remaining template extension indicates the type of output produced by the"
" template.  The trailing ``.mako`` / ``.jj2`` helps ghini decide which "
"template generator to use, and prevents you from mistaking a template for"
" an output file."
msgstr ""

#: ../../report.rst:147
msgid ""
"For example, to generate an HTML page from a Mako template, you would "
"name the template something like ``report.html.mako``.  Similarly, you "
"would name a template ``report.csv.jj2`` if it uses Jinja2 to generate a "
"comma separated value file."
msgstr ""

#: ../../report.rst:151
msgid ""
"A template must declare its iteration domain, that is, on which type of "
"objects it reports.  The iteration domain is declared in a comment line, "
"something like this (for Mako):"
msgstr ""

#: ../../report.rst:154
msgid "``## DOMAIN <name>``"
msgstr ""

#: ../../report.rst:156
msgid "or this (for Jinja2):"
msgstr ""

#: ../../report.rst:158
msgid "``{# DOMAIN <name> #}``"
msgstr ""

#: ../../report.rst:160
msgid ""
"Here ``<name>`` is one of ``Species``, ``Accession``, ``Plant``, "
"``Location``, or ``raw``.  The keyword ``DOMAIN`` needs be all upper "
"case, but the declaration is further case insensitive."
msgstr ""

#: ../../report.rst:163
msgid ""
"The role of the ``DOMAIN`` declaration is to instruct ghini about the "
"data that the template needs to receive: when rendering a template, ghini"
" starts by building a raw list containing all top-level objects in the "
"current result.  If the declared iteration domain is ``raw``, ghini will "
"pass this raw list to the template.  If the declared iteration domain is "
"a ghini class, ghini will then build a list of all objects in the "
"iteration domain, associated to the raw list.  E.g.: if you select a "
"couple of locations, and the report declares ``DOMAIN Accession``, ghini "
"will collect all accessions having plants in one of the selected "
"locations."
msgstr ""

#: ../../report.rst:171
msgid ""
"These objects are available to the template as elements of the list "
"``values``."
msgstr ""

#: ../../report.rst:173
msgid ""
"A template declaring ``DOMAIN raw`` needs more programming logic.  On the"
" other hand, a small, well-thought set of such templates can reduce the "
"amount of template names that your users need to handle."
msgstr ""

#: ../../report.rst:176
msgid ""
"A template may require extra options, that can the user will define at "
"run time.  These are described in comment lines, like in this Mako "
"example:"
msgstr ""

#: ../../report.rst:179
msgid ""
"``## OPTION accession_first: (type: integer, default: '', tooltip: 'start"
" of range.')``"
msgstr ""

#: ../../report.rst:181
msgid "The Jinja2 equivalent of the above is:"
msgstr ""

#: ../../report.rst:183
msgid ""
"``{# OPTION accession_first: (type: integer, default: '', tooltip: 'start"
" of range.') #}``"
msgstr ""

#: ../../report.rst:185
msgid ""
"As you can see from the example, an option has a name and the three "
"compulsory fields ``type``, ``default``, ``tooltip``.  ``type`` must be "
"the python name of a type, valid at runtime, and initializable from the "
"default value, and from the text inserted by the user at runtime.  Built-"
"in examples would be ``str``, ``int``, ``float``, ``bool``.  If the user "
"provided value is invalid for the type, or if the user provides no value,"
" the ``default`` value will be used.  ``tooltip`` is shown when the user "
"places the mouse cursor over the text, without clicking."
msgstr ""

#: ../../report.rst:192
msgid ""
"Options are available to the template, collected in the dictionary "
"``options``."
msgstr ""

#: ../../report.rst:194
msgid ""
"|ghini.desktop| provides several Postscript and SVG production functions,"
" in the two namespaces ``PS`` and ``SVG``, respectively."
msgstr ""

#: ../../report.rst:197
msgid ""
"The SVG namespace defines the ``add_text``, ``add_QR`` and ``add_code39``"
" functions.  The PS namespace defines the ``add_text``, ``add_QR``, and "
"``add_image`` functions.  Please refer to sources and examples for their "
"usage.  There is nothing preventing us from defining an ``add_code39`` "
"function also in the PS namespace, while defining the ``add_image`` for "
"the SVG namespace is more of a challenge, because of the raster/vectorial"
" incompatibility."
msgstr ""

#: ../../report.rst:205
msgid "Working with Jinja2"
msgstr ""

#: ../../report.rst:207
msgid ""
"Jinja2 is a mainstream, powerful and well documented template language.  "
"Please refer to `Jinja2 online documentation <http://jinja.pocoo.org/>`_ "
"for information regarding how to write templates."
msgstr ""

#: ../../report.rst:210
msgid ""
"A good and comprehensive example for Jinja2 within |ghini.desktop| is the"
" ``tortuosa.ps.jj2`` template.  It shows how to write a template that "
"inherits from a base template, how to define a template domain, how to "
"include pictures, how to use the ``PS`` and ``SVG`` namespaces and the "
"``enumerate`` function, included by default to the environment accessible"
" from your Jinja2 templates."
msgstr ""

#: ../../report.rst:215
msgid ""
"The ``tortuosa.ps.jj2`` is not precisely a beginner's case.  Please check"
" Mako examples for simpler templates."
msgstr ""

#: ../../report.rst:219
msgid "Working with Mako"
msgstr ""

#: ../../report.rst:221
msgid ""
"The Mako report formatter uses the Mako template language for generating "
"reports.  The Mako templating system is included in all |ghini.desktop| "
"installation."
msgstr ""

#: ../../report.rst:224
msgid ""
"Mako is less mainstream than Jinja2, and arguably less good documented, "
"but also quite more flexible than Jinja2.  They are very similar to each "
"other so most concepts apply to both.  If you're doing something rather "
"simple, start with Jinja2.  If you stumble against Jinja2 limitations, "
"try Mako.  If you don't understand how Mako works, spend a couple of "
"hours on Jinja2 documentation, then go back to Mako."
msgstr ""

#: ../../report.rst:229
msgid ""
"More information about Mako and its language can be found at "
"`makotemplates.org <http://www.makotemplates.org>`_."
msgstr ""

#: ../../report.rst:232
msgid ""
"An bare bones sample Mako template is the further uninteresting "
"``example.csv.mako`` template.  A more useful example is the ``bgci-"
"upload.csv.mako`` template.  Just as simple, but it accomplishes a useful"
" goal."
msgstr ""

#: ../../report.rst:235
msgid ""
"A very comprehensive example for Mako within |ghini.desktop| is the "
"``accession-label-qr.ps.mako`` example. It shows how to write a template "
"that inherits from a base templates, how to define a template domain.  "
"The ``accession-label-qr.ps.mako`` example also shows how to import "
"pictures, how to import functions from the available Python environment, "
"and how to use the ``PS`` and ``SVG`` namespaces, included by default to "
"the environment accessible from your Mako templates."
msgstr ""

#: ../../report.rst:243
msgid "Working with XSL Stylesheets"
msgstr ""

#: ../../report.rst:245
msgid "Not up-to-date, help required."
msgstr ""

#: ../../report.rst:248
msgid ""
"The current maintainer was never hired to work at this part of the "
"software, and he leaves this feature as he found it, both code and user "
"documentation, trying not to break it.  Please contribute, with text, "
"screenshots, examples, if you know how to produce reports with XSL.  The "
"below notes date back to the old Bauble 1.0.11 docs.  And, oh well, you "
"may state that they say close to nothing."
msgstr ""

#: ../../report.rst:253
msgid ""
"The XSL report formatter requires an XSL to PDF renderer to convert the "
"data to a PDF file.  Apache FOP is a free and open-source XSL->PDF "
"renderer and is recommended."
msgstr ""

#: ../../report.rst:258
msgid "Installing Apache FOP on GNULinux"
msgstr ""

#: ../../report.rst:260
msgid ""
"If using Linux, Apache FOP should be installable using your package "
"manager.  On Debian/Ubuntu it is installable as ``fop`` in Synaptic or "
"using the following command::"
msgstr ""

#: ../../report.rst:268
msgid "Installing Apache FOP on Windows"
msgstr ""

#: ../../report.rst:270
msgid ""
"You have two options for installing FOP on Windows. The easiest way is to"
" download the prebuilt `ApacheFOP-0.95-1-setup.exe "
"<http://code.google.com/p/apache-fop-"
"installer/downloads/detail?name=ApacheFOP-0.95-1-setup.exe&can=2&q=#makechanges>`_"
" installer."
msgstr ""

#: ../../report.rst:275
msgid ""
"Alternatively you can download the `archive "
"<http://www.apache.org/dist/xmlgraphics/fop/binaries/>`_.  After "
"extracting the archive you must add the directory you extracted the "
"archive to to your PATH environment variable."
msgstr ""

#: ../../searching.rst:4
msgid "Searching in Ghini"
msgstr ""

#: ../../searching.rst:6
msgid ""
"Searching allows you to view, browse and create reports from your data. "
"You can perform searches by either entering the queries in the main "
"search entry or by using the Query Builder to create the queries for you."
" The results of Ghini searches are listed in the main window."
msgstr ""

#: ../../searching.rst:13
msgid "Search Strategies"
msgstr ""

#: ../../searching.rst:15
msgid "Ghini offers four distinct search strategies:"
msgstr ""

#: ../../searching.rst:17
msgid "by value — in all domains;"
msgstr ""

#: ../../searching.rst:18
msgid "by expression — in a few implicit fields in one explicit domain;"
msgstr ""

#: ../../searching.rst:19
msgid "by query — in one domain;"
msgstr ""

#: ../../searching.rst:20
msgid "by binomial name — only searches the Species domain."
msgstr ""

#: ../../searching.rst:22
msgid ""
"All search strategies —with the notable exception of the binomial name "
"search— are case insensitive."
msgstr ""

#: ../../searching.rst:27
msgid "Search by Value"
msgstr ""

#: ../../searching.rst:29
msgid ""
"Search by value is the simplest way to search. You enter one or more "
"strings and see what matches. The result includes objects of any type "
"(domain) where one or more of its fields contain one or more of the "
"search strings."
msgstr ""

#: ../../searching.rst:33
msgid ""
"You don't specify the search domain, all are included, nor do you "
"indicate which fields you want to match, this is implicit in the search "
"domain."
msgstr ""

#: ../../searching.rst:36
msgid ""
"The following table helps you understand the results and guides you in "
"formulating your searches."
msgstr ""

#: ../../searching.rst:42
msgid "search domain overview"
msgstr ""

#: ../../searching.rst:44
msgid "name and shorthands"
msgstr ""

#: ../../searching.rst:44
msgid "field"
msgstr ""

#: ../../searching.rst:44
msgid "result type"
msgstr ""

#: ../../searching.rst:49 ../../searching.rst:50 ../../searching.rst:54
#: ../../searching.rst:56
msgid "name"
msgstr ""

#: ../../searching.rst:59
msgid ""
"Examples of searching by value would be: Maxillaria, Acanth, 2008.1234, "
"2003.2.1, indica."
msgstr ""

#: ../../searching.rst:62
msgid ""
"Unless explicitly quoted, spaces separate search strings. For example if "
"you search for ``Block 10`` then Ghini will search for the strings Block "
"and 10 and return all the results that match either of these strings. If "
"you want to search for Block 10 as one whole string then you should quote"
" the string like ``\"Block 10\"``."
msgstr ""

#: ../../searching.rst:68
msgid "× Composite Primary Keys"
msgstr ""

#: ../../searching.rst:71
msgid ""
"A **species** epithet means little without the corresponding genus, "
"likewise a **planting** code is unique only within the accession to which"
" it belongs.  In database theory terminology, epithet and code are not "
"sufficient to form a **primary key** for respectively species and "
"planting. These domains need a **composite** primary key."
msgstr ""

#: ../../searching.rst:78
msgid ""
"Search by value lets you look for **plantings** by their complete "
"planting code, which includes the accession code. Taken together, "
"Accession code and Planting code do provide a **composite primary key** "
"for plantings.  For **species**, we have introduced the binomial search, "
"described below."
msgstr ""

#: ../../searching.rst:86
msgid "Search by Expression"
msgstr ""

#: ../../searching.rst:88
msgid ""
"Searching with expression gives you a little more control over what you "
"are searching for. You narrow the search down to a specific domain, the "
"software defines which fields to search within the domain you specified."
msgstr ""

#: ../../searching.rst:92
msgid ""
"An expression is built as ``<domain> <operator> <value>``. For example "
"the search: ``gen=Maxillaria`` would return all the genera that match the"
" name Maxillaria. In this case the domain is ``gen``, the operator is "
"``=`` and the value is ``Maxillaria``."
msgstr ""

#: ../../searching.rst:97
msgid ""
"The above search domain overview table tells you the names of the search "
"domains, and, per search domain, which fields are searched."
msgstr ""

#: ../../searching.rst:100
#, python-format
msgid ""
"The search string ``loc like block%`` would return all the Locations for "
"which name or code start with \"block\".  In this case the domain is "
"``loc`` (a shorthand for ``location``), the operator is ``like`` (this "
"comes from SQL and allows for \"fuzzy\" searching), the value is "
"``block%``, the implicitly matched fields are ``name`` and ``code``.  The"
" percent sign is used as a wild card so if you search for ``block%`` then"
" it searches for all values that start with ``block``.  If you search for"
" ``%10`` it searches for all values that end in ``10``.  The string "
"``%ck%10`` would search for all value that contain ``ck`` and end in "
"``10``."
msgstr ""

#: ../../searching.rst:110
msgid "When a query takes ages to complete"
msgstr ""

#: ../../searching.rst:113
msgid ""
"You give a query, it takes time to compute, the result contains "
"unreasonably many entries.  This happens when you intend to use a "
"strategy, but your strings do not form a valid expression.  In this case "
"Ghini falls back to *search by value*. For example the search string "
"``gen lik maxillaria`` will search for the strings ``gen``, ``lik``, and "
"``maxillaria``, returning all that match at least one of the three "
"criteria."
msgstr ""

#: ../../searching.rst:122
msgid "Binomial search"
msgstr ""

#: ../../searching.rst:124
msgid ""
"You can also perform a search in the database if you know the species, "
"just by placing a few initial letters of genus and species epithets in "
"the search engine, correctly capitalized, i.e.: **Genus epithet** with "
"one leading capital letter, **Species epithet** all lowercase."
msgstr ""

#: ../../searching.rst:129
msgid "This way you can perform the search ``So ha``."
msgstr ""

#: ../../searching.rst:131
msgid "These would be the initials for Solanum hayesii, or Solanum havanense."
msgstr ""

#: ../../searching.rst:133
msgid ""
"Binomial search comes to compensate the limited usefulness of the above "
"search by expression when trying to look for a species."
msgstr ""

#: ../../searching.rst:136
msgid ""
"It is the correct capitalization **Xxxx xxxx** that informs the software "
"of your intention to perform a binomial search.  The software's second "
"guess will be a search by value, which will possibly result in far more "
"matches than you had expected."
msgstr ""

#: ../../searching.rst:141
msgid ""
"The similar request ``so ha`` will return, in a fresh install, over 3000 "
"objects, starting at Family \"Acalyp(**ha**)ceae\", ending at Geography "
"\"Western (**So**)uth America\"."
msgstr ""

#: ../../searching.rst:147
msgid "Search by Query"
msgstr ""

#: ../../searching.rst:149
msgid ""
"Queries allow the most control over searching. With queries you can "
"search across relations, specific columns, combine search criteria using "
"boolean operators like ``and``, ``or``, ``not`` (and their shorthands "
"``&&``, ``||``, ``!``), enclose them in parentheses, and more."
msgstr ""

#: ../../searching.rst:154
msgid ""
"Please contact the authors if you want more information, or if you "
"volunteer to document this more thoroughly.  In the meanwhile you may "
"start familiarizing yourself with the core structure of Ghini's database."
msgstr ""

#: ../../searching.rst:162
msgid "A few examples:"
msgstr ""

#: ../../searching.rst:164
msgid "plantings of family Fabaceae in location Block 10::"
msgstr ""

#: ../../searching.rst:168
msgid "locations that contain no plants::"
msgstr ""

#: ../../searching.rst:172
msgid ""
"accessions associated to a species of known binomial name (e.g.: "
"Mangifera indica)::"
msgstr ""

#: ../../searching.rst:176
msgid "accessions we propagated in the year 2016::"
msgstr ""

#: ../../searching.rst:180
msgid "accessions we modified in the last three days::"
msgstr ""

#: ../../searching.rst:184
msgid ""
"Searching with queries requires some knowledge of a little syntax and an "
"idea of the extensive Ghini database table structure. Both you acquire "
"with practice, and with the help of the Query Builder."
msgstr ""

#: ../../searching.rst:190
msgid "The Query Builder"
msgstr ""

#: ../../searching.rst:192
msgid ""
"Ghini offers a Query Builder, that helps you build complex search queries"
" through a point and click interface.  To open the Query Builder click "
"the |querybuilder| icon to the left of the search entry or select "
":menuselection:`Tools-->Query Builder` from the menu."
msgstr ""

#: ../../searching.rst:201
msgid ""
"A window will show up, which will lead you through all steps necessary to"
" construct a correct query that is understood by Ghini's Query Search "
"Strategy."
msgstr ""

#: ../../searching.rst:210
msgid ""
"First of all you indicate the search domain, this will allow the Query "
"Builder complete its graphical user interface, then you add as many "
"logical clauses as you need, connecting them with a ``and`` or ``or`` "
"binary operator."
msgstr ""

#: ../../searching.rst:215
msgid ""
"Each clause is formed of three parts: a property that can be reached from"
" the starting search domain, a comparison operator that you select from "
"the drop-down list, a value that you can either type or select from the "
"list of valid values for the field."
msgstr ""

#: ../../searching.rst:220
msgid ""
"Add as many search properties as you need, by clicking on the plus sign. "
"Select and/or next to the property name to choose how the clauses will be"
" combined in the search query."
msgstr ""

#: ../../searching.rst:224
msgid "When you are done building your query click OK to perform the search."
msgstr ""

#: ../../searching.rst:226
msgid ""
"At this point the Query Builder writes the query in the search entry, and"
" executes it. You may now edit the string as if you had typed it "
"yourself. Notice how the left hand side values are interpreted by the "
"query builder and enclosed in single quotes if recognized as strings, "
"left alone if they look like numbers or the two reserved words ``None`` "
"and ``Empty``. You may edit the query and insert quotes if you need them,"
" eg if you need to literally look for the string ``Empty``."
msgstr ""

#: ../../searching.rst:234
msgid ""
"``None`` is the value of an empty field. It is not the same as the zero "
"lenght string ``''`` nor the numeric ``0`` nor the boolean ``False`` nor "
"the set ``Empty``, it indicates that the field has no value at all."
msgstr ""

#: ../../searching.rst:238
msgid ""
"``Empty`` is the empty set. Being it a set, it can be matched against "
"sets (eg: plants of an accession, or accessions of a species), not "
"against elements (eg: quantity of a plant or description of a location). "
"However, the Query Builder does not let you choose a left hand side value"
" stopping at a set, it expects you to select a field. Choose just any "
"field: at the moment of producing the query, when the Query Builder meets"
" a clause with right hand side value the literal string ``Empty``, it "
"will drop the field name and let you compare the set on the left with "
"``Empty`` on the right."
msgstr ""

#: ../../searching.rst:247
msgid ""
"We have no literals ``False`` and ``True``. These are typed values, and "
"the Query Builder does not know how to produce them. Instead of ``False``"
" type ``0``, and instead of ``True`` type ``1``."
msgstr ""

#: ../../searching.rst:253
msgid "Query Grammar"
msgstr ""

#: ../../searching.rst:255
msgid ""
"For those who don't fear a bit of formal precision, the following BNF "
"code gives you a rather precise idea of the grammar implemented by the "
"Query Search Strategy.  Some grammatical categories are informally "
"defined; any missing ones are left to your fertile imagination; literals "
"are included in single quotes; the grammar is mostly case insensitive, "
"unless otherwise stated::"
msgstr ""

#: ../../searching.rst:318
msgid ""
"Please be aware that Ghini's Query language is quite a bit more complex "
"than what the Query Builder can produce: Queries you can build with the "
"Query Builder form a proper subset of the queries recognized by the "
"software::"
msgstr ""

#: ../../started.rst:2
msgid "Initial Configuration"
msgstr ""

#: ../../started.rst:4
msgid ""
"After a successful installation, more complex organizations will need "
"configure their database, and configure Ghini according to their database"
" configuration. This page focuses on this task. If you don't know what "
"this is about, please do read the part relative to SQLite."
msgstr ""

#: ../../started.rst:12
msgid "Should you SQLite?"
msgstr ""

#: ../../started.rst:14
msgid ""
"Is this the first time you use Ghini, are you going to work in a stand-"
"alone setting, you have not the faintest idea how to manage a database "
"management system? If you answered yes to any of the previous, you "
"probably better stick with SQLite, the easy, fast, zero-administration "
"file-based database."
msgstr ""

#: ../../started.rst:20
msgid ""
"With SQLite, you do not need any preparation and you can continue with "
"`connecting`_."
msgstr ""

#: ../../started.rst:23
msgid ""
"On the other hand, if you want to connect more than one bauble "
"workstation to the same database, or if you want to make your data "
"available for other clients, as could be a web server in a LAMP setting, "
"you should consider keeping your database in a database management system"
" like `PostgreSQL <http://www.postgresql.org>`_ or `MySQL/MariaDB "
"<https://mariadb.org/>`_, both supported by Ghini."
msgstr ""

#: ../../started.rst:30
msgid ""
"When connecting to a database server as one of the above, you have to "
"manually do the following: Create at least one user; Create your "
"database; Give at least one user full permissions on your database; If "
"you plan having more database users: Give one of your users the "
"``CREATEROLE`` privilege; Consider the user with the ``CREATEROLE`` "
"privilege as a super-user, not meant to handle data directly; Keep your "
"super-user credentials in a very safe place."
msgstr ""

#: ../../started.rst:38
msgid ""
"When this is done, Ghini will be able to proceed, creating the tables and"
" importing the default data set.  The process is database-dependent and "
"it falls beyond the scope of this manual."
msgstr ""

#: ../../started.rst:42
msgid ""
"If you already got the chills or sick at your stomach, no need to worry, "
"just stick with SQLite, you do not miss on features nor performance."
msgstr ""

#: ../../started.rst:45
msgid "Some more hints if you need PostgreSQL"
msgstr ""

#: ../../started.rst:48
msgid ""
"Start simple, don't do all at the same time. Review `the online manual "
"<https://www.postgresql.org/docs/9.4/static/index.html>`_, or download "
"and study `the offline version "
"<https://www.postgresql.org/files/documentation/pdf/9.4/postgresql-9.4-A4.pdf>`_."
msgstr ""

#: ../../started.rst:53
msgid ""
"As said above, create a database, a user, make this user the owner of the"
" database, decide whether you're going to need multiple users, and "
"preferably reserve a user for database and normal user creation. This "
"super-user should be your only user with ``CREATEROLE`` privilege."
msgstr ""

#: ../../started.rst:59
msgid ""
"All normal users will need all privileges on all tables and sequences, "
"something you can do from the :menuselection:`Tools-->Users` menu.  If "
"you have any difficulty, please `open an issue "
"<https://github.com/Ghini/ghini.desktop/issues/new>`_ about it."
msgstr ""

#: ../../started.rst:65
msgid ""
"Connect using the ``psql`` interactive terminal.  Create a ``~/.pgpass`` "
"file (read more about it in `the manual "
"<https://www.postgresql.org/docs/9.4/static/libpq-pgpass.html>`_), tweak "
"your ``pg_hba.conf`` and ``postgresql.conf`` files, until you can connect"
" using the command::"
msgstr ""

#: ../../started.rst:73
msgid "With the above setup, connecting from ghini will be an obvious task."
msgstr ""

#: ../../started.rst:79
msgid "Connecting to a database"
msgstr ""

#: ../../started.rst:81
msgid ""
"When you start Ghini the first thing that comes up is the connection "
"dialog."
msgstr ""

#: ../../started.rst:84
msgid ""
"Quite obviously, if this is the first time you start Ghini, you have no "
"connections yet and Ghini will alert you about it."
msgstr ""

#: ../../started.rst:89
msgid ""
"This alert will show at first activation and also in the future if your "
"connections list becomes empty. As it says: click on **Add** to create "
"your first connection."
msgstr ""

#: ../../started.rst:95
msgid ""
"Just insert a name for your connection, something meaningful you "
"associate with the collection to be represented in the database (for "
"example: “my home garden”), and click on **OK**. You will be back to the "
"previous screen, but your connection name will be selected and the "
"Connection Details will have expanded."
msgstr ""

#: ../../started.rst:103
msgid "**specify the connection details**"
msgstr ""

#: ../../started.rst:105
msgid ""
"If you do not know what to do here, Ghini will help you stay safe. "
"Activate the **Use default locations** check box and create your first "
"connection by clicking on **Connect**."
msgstr ""

#: ../../started.rst:108
msgid ""
"You may safely skip the remainder of this section for the time being and "
"continue reading to the following section."
msgstr ""

#: ../../started.rst:111
msgid "**fine-tune the connection details**"
msgstr ""

#: ../../started.rst:113
msgid ""
"By default Ghini uses the file-based SQLite database.  During the "
"installation process you had the choice (and you still have after "
"installation), to add database connectors other than the default SQLite."
msgstr ""

#: ../../started.rst:117
msgid ""
"In this example, Ghini can connect to SQLite, PostgreSQL and MySQL, but "
"no connector is available for Oracle or MS SQL Server."
msgstr ""

#: ../../started.rst:122
msgid ""
"If you use SQLite, all you really need specify is the connection name. If"
" you let Ghini use the default filename then Ghini creates a database "
"file with the same name as the connection and ``.db`` extension, and a "
"pictures folder with the same name and no extension, both in "
"``~/.bauble`` on Linux/MacOSX or in ``AppData\\Roaming\\Bauble`` on "
"Windows."
msgstr ""

#: ../../started.rst:128
msgid ""
"Still with SQLite, you might have received or downloaded a bauble "
"database, and you want to connect to it. In this case you do not let "
"Ghini use the default filename, but you browse in your computer to the "
"location where you saved the Ghini SQLite database file."
msgstr ""

#: ../../started.rst:133
msgid ""
"If you use a different database connector, the dialog box will look "
"different and it will offer you the option to fine tune all parameters "
"needed to connect to the database of your choice."
msgstr ""

#: ../../started.rst:137
msgid ""
"If you are connecting to an existing database you can continue to :ref"
":`editing-and-inserting-data` and subsequently :ref:`searching-in-ghini`,"
" otherwise read on to the following section on initializing a database "
"for Ghini."
msgstr ""

#: ../../started.rst:142
msgid ""
"If you plan to associate pictures to plants, specify also the *pictures "
"root* folder. The meaning of this is explained in further detail at :ref"
":`plant-pictures` in :ref:`editing-and-inserting-data`."
msgstr ""

#: ../../started.rst:146
msgid "A sample SQLite database"
msgstr ""

#: ../../started.rst:149
msgid ""
"Indeed we have a sample database, from our pilot garden \"El Cuchubo\", "
"in Mompox, Colombia.  We have both a zipped `sample database for "
"ghini-1.0 <http://www.ghini.me/cuchubo-1.0.zip>`_ and the same equally "
"zipped `sample database for ghini-3.1 "
"<http://www.ghini.me/cuchubo-3.1.zip>`_."
msgstr ""

#: ../../started.rst:155
msgid ""
"Both zip files contain a SQLite database file, named ``cuchubo.db``, but "
"they are **not** the same file: one is to be used with ghini-1.0, one for"
" the newer ghini-3.1.  You cannot mix versions."
msgstr ""

#: ../../started.rst:159
msgid ""
"Download the one corresponding to the ghini version you installed, unzip "
"it to the location of your choice, then start Ghini, create a connection "
"named possibly ``cuchubo``, or ``sample``, and edit the Connection "
"Details.  Keep the connection type at the default SQLite, but instead of "
"using the default locations, make sure that Filename points to your "
"unpacked ``cuchubo.db`` file."
msgstr ""

#: ../../started.rst:169
msgid "Initialize a database"
msgstr ""

#: ../../started.rst:171
msgid ""
"First time you open a connection to a database which had never been seen "
"by Ghini before, Ghini will first display an alert:"
msgstr ""

#: ../../started.rst:176
msgid "immediately followed by a question:"
msgstr ""

#: ../../started.rst:180
msgid ""
"Be careful when manually specifying the connection parameters: the values"
" you have entered may refer to an existing database, not intended for use"
" with Ghini. By letting Ghini initialize a database, the database will be"
" emptied and all of its content be lost."
msgstr ""

#: ../../started.rst:185
msgid ""
"If you are sure you want to create a database at this connection then "
"select \"Yes\". Ghini will then start creating the database tables and "
"importing the default data. This can take a minute or two so while all of"
" the default data is imported into the database so be patient."
msgstr ""

#: ../../started.rst:190
msgid ""
"Once your database has been created, configured, initialized, you are "
"ready to start :ref:`editing-and-inserting-data` and subsequently :ref"
":`searching-in-bauble`."
msgstr ""

#: ../../statements.rst:2
msgid "Mission & Vision"
msgstr ""

#: ../../statements.rst:4
msgid ""
"Here we state who we are, what we think of our work, what you can expect "
"of this project."
msgstr ""

#: ../../statements.rst:8
msgid "Who is behind Ghini"
msgstr ""

#: ../../statements.rst:10
msgid ""
"Ghini is a small set of programs, meant to let collection managers manage"
" their collection also digitally."
msgstr ""

#: ../../statements.rst:13
msgid ""
"Ghini was born back in 2004 as Bauble, at the Belize Botanical Garden. It"
" was later adapted to the needs of a few more gardens. Brett Adams, the "
"original programmer, made this software a commons, by releasing it under "
"a GPL license."
msgstr ""

#: ../../statements.rst:18
msgid ""
"After years of stagnation Mario Frasca revived the project, and rebranded"
" it as Ghini in honour of Luca Ghini, founder of the first European "
"botanic garden and herbarium. Mario Frasca started advocating, "
"travelling, distributing, developing, expanding, redefining, documenting "
"it, and it is now Mario Frasca writing this, looking for users, "
"requesting feedback."
msgstr ""

#: ../../statements.rst:24
msgid ""
"Behind Ghini there's not only one developer, but a small but growing "
"global users community."
msgstr ""

#: ../../statements.rst:27
msgid ""
"Translations are provided by volunteers who mostly stay behind the "
"scenes, translating missing terms or sentences, and disappearing again."
msgstr ""

#: ../../statements.rst:30
msgid ""
"To make things clearer when we speak of Ghini, but should—and in this "
"document we will—indicate whether it's Ghini(the software), or Ghini(the "
"people), unless obviously we mean both things."
msgstr ""

#: ../../statements.rst:35
msgid "Mission"
msgstr ""

#: ../../statements.rst:37
msgid ""
"Our goal as Ghini Software is to provide free software, of proven "
"quality, and to let anybody install it if they feel like it.  We also aim"
" at facilitating access to functional knowledge, in the form of "
"documentation or by laying the contact among users or between users and "
"software professionals."
msgstr ""

#: ../../statements.rst:43
msgid ""
"All our sources, software and documentation, are open and free, and we "
"welcome and stimulate people to use and to contribute.  To facilitate "
"community forming, all our platforms can be consulted without "
"registration. Registration is obviously required if you want to "
"contribute."
msgstr ""

#: ../../statements.rst:48
msgid ""
"Ghini welcomes the formation of groups of users, bundling forces to "
"define and finance further development, and we welcome developers "
"contributing software, from any corner in the world, and we stimulate and"
" help them comply with the high quality requirements, before we accept "
"the contributed code in the software sources."
msgstr ""

#: ../../statements.rst:55
msgid "Vision"
msgstr ""

#: ../../statements.rst:57
msgid ""
"The Vision serves to indicate the way ahead and projects a future image "
"of what we want our organization to be, in a realistic and attractive "
"way.  It serves as motivation because it visualizes the challenge and "
"direction of necessary changes in order to grow and prosper."
msgstr ""

#: ../../statements.rst:62
msgid "by the year 2020"
msgstr ""

#: ../../statements.rst:63
msgid "reference point"
msgstr ""

#: ../../statements.rst:64
msgid "community"
msgstr ""

#: ../../statements.rst:65
msgid "development"
msgstr ""

#: ../../statements.rst:66
msgid "integration with web portal"
msgstr ""

#: ../../statements.rst:67
msgid "geographic information"
msgstr ""

#: ../../tagging.rst:2
msgid "Tagging"
msgstr ""

#: ../../tagging.rst:4
msgid ""
"Tagging is an easy way to give context to an object or create a "
"collection of object that you want to recall later."
msgstr ""

#: ../../tagging.rst:7
msgid ""
"The power in this tagging action is that you can share this selection "
"with colleagues, who can act on it, without the need to redo all your "
"collecting work."
msgstr ""

#: ../../tagging.rst:11
msgid ""
"For example if you need to print accession labels of otherwise unrelated "
"plants, you can group the objects by tagging them with the string "
"\"relabel\". You or one of your colleagues can then select \"relabel\" "
"from the tags menu, the search view will show all the objects you tagged,"
" and performing a report will act on the tagged objects."
msgstr ""

#: ../../tagging.rst:17
msgid ""
"Tagging acts on the active selection, that is the items in the search "
"results which you have selected."
msgstr ""

#: ../../tagging.rst:20
msgid ""
"Please remember: you can select all result rows by pressing ``Ctrl-A``, "
"you can deselect everything by pressing ``Ctrl-Shift-A``, you can toggle "
"tagging of a single row by ``Ctrl-Mouse click`` on it."
msgstr ""

#: ../../tagging.rst:24
msgid "Once you have an active selection, tagging can be done in two ways:"
msgstr ""

#: ../../tagging.rst:27
msgid "dialog box tagging"
msgstr ""

#: ../../tagging.rst:29
msgid ""
"Press ``Ctrl-T`` or select :menuselection:`Tag-->Tag Selection` from the "
"menu, this activates a window where you can create new tags and apply any"
" existing tag to the selection."
msgstr ""

#: ../../tagging.rst:33
msgid "The tag window is composed of three parts:"
msgstr ""

#: ../../tagging.rst:35
msgid ""
"The upper part mentions the list of objects in your active selection. "
"This is the list of object of which you are editing the tags;"
msgstr ""

#: ../../tagging.rst:37
msgid ""
"The middle part has a list of all available tags, with a checkbox that "
"you can activate for applying the tag to or removing the tag from the "
"selection;"
msgstr ""

#: ../../tagging.rst:40
msgid ""
"The lower part only holds a link to new tag creation, and the Ok button "
"for closing the dialog box."
msgstr ""

#: ../../tagging.rst:43
msgid ""
"If, when opening the tag dialog box, the active selection holds multiple "
"items, then only the tags that are common to all the selected items will "
"have a check next to it.  Tags that only apply to a proper subset of the "
"active selection will show with an 'undecided' status.  Tags that don't "
"apply to any object in the active selection will show blank."
msgstr ""

#: ../../tagging.rst:49
msgid ""
"The most recently created tag, or the most recently selected tag becomes "
"the active tag, and it shows with a check next to it in the tags menu."
msgstr ""

#: ../../tagging.rst:53
msgid "windowless tagging"
msgstr ""

#: ../../tagging.rst:55
msgid ""
"Once you have an active tag, pressing ``Ctrl-Y`` applies the active tag "
"to all objects in the active selection.  ``Ctrl-Shift-Y`` removes the "
"active tag from all objects in the active selection."
msgstr ""

#: ../../template-letters.rst:2
msgid "Template Letters"
msgstr ""

#: ../../template-letters.rst:4
msgid ""
"The reader getting to this point in the documentation probably understood"
" that this Ghini project is above all a very open and collaborative "
"project."
msgstr ""

#: ../../template-letters.rst:7
msgid ""
"Here in this page you find some template letters, please use them as you "
"think best.  Adapt them to welcome new users, translate into your "
"language print it in a nice format, and go with it to the garden next "
"door, or on your way from A to B."
msgstr ""

#: ../../template-letters.rst:11
msgid ""
"Discuss them with a group of your local friends, and if you can use them "
"to spread the use of Ghini, to make the Ghini users community grow, but "
"also to create a (voluntary, or paid) part-time job for you, then they "
"have reached their ideal purpose."
msgstr ""

#: ../../template-letters.rst:16
msgid "Open letter to the garden of your choice"
msgstr ""

#: ../../template-letters.rst:18
msgid "Dear conservator or scientist,"
msgstr ""

#: ../../template-letters.rst:20
msgid ""
"You are reading Ghini's presentation letter.  Ghini is a libre software "
"project on GitHub for botany.  Brought to you by a small community of "
"coders, botanists, translators, and supported by botanical institutions "
"around the world, for all their collection management needs."
msgstr ""

#: ../../template-letters.rst:24
msgid ""
"As a complete software solution of standalone programs, data servers and "
"handheld clients, Ghini is dedicated to helping gardens manage and "
"publish their collection:"
msgstr ""

#: ../../template-letters.rst:29
msgid ""
"**ghini.desktop**, is the core of Ghini, and it allows entering and "
"correcting data, navigating links, producing reports, import and or "
"exporting several standard or ad-hoc formats, reviewing your taxonomy "
"using online sources.  All according to best practices suggested by top "
"gardens and formalized in standard formats, like ABCD or ITF2, but also "
"as elaborated by our developers, based on the feedback by Ghini users.  "
"Developed and continously tested on GNU/Linux, but runs equally well on "
"Windows, or macOS. [1]"
msgstr ""

#: ../../template-letters.rst:36
msgid ""
"**ghini.pocket** is your garden companion within Ghini.  An Android app "
"you can install from F-Droid or the Play Store, it assists you in "
"collecting or correcting data while in the field, associating pictures to"
" your plants, and verifying taxonomic info.  Back to office, you just "
"import your collected data into the desktop client.  **ghini.pocket** "
"reduces the time spent in front of your desktop PC to a true minimum."
msgstr ""

#: ../../template-letters.rst:42
msgid ""
"**ghini.web** is a web server and a courtesy data hub service, offering "
"you world wide visibility: Export a selection of your data from your "
"desktop database, and offer it for publication to the Ghini project, for "
"inclusion on http://gardens.ghini.me/.  **ghini.web** serves a world map "
"with participating gardens, georeferenced plants and info panels."
msgstr ""

#: ../../template-letters.rst:47
msgid ""
"**ghini.tour**, a geographic tour Android app aimed at visitors, using "
"OpenStreetMap as a base map, retrieving its data, gardens and virtual "
"panels, from the web data aggregator ``ghini.web``."
msgstr ""

#: ../../template-letters.rst:52 ../../template-letters.rst:107
msgid "cut-cut-cut"
msgstr ""

#: ../../template-letters.rst:55
msgid ""
"*The remainder is even more a template than the above, please cut and "
"reduce, but make sure that you"
msgstr ""

#: ../../template-letters.rst:55
msgid ""
"convey the below message, which is about feedom, sharing, community "
"forming.*"
msgstr ""

#: ../../template-letters.rst:58
msgid ""
"*You also want to add a few lines about yourself, or you can keep it to "
"the talk you hope to have"
msgstr ""

#: ../../template-letters.rst:58
msgid ""
"with the conservator, scientific director, or garden manager once you get"
" invited.*"
msgstr ""

#: ../../template-letters.rst:60
msgid ""
"All software within the Ghini family is licensed according to the GNU "
"Public License v2+, v3+.  The GPL is one of the strongest copyleft "
"licenses.  In short, the GPL translates the ethical scientific need to "
"share knowledge, into legal terms.  If you want to read more about it, "
"please refer to https://www.gnu.org/licenses/copyleft.html"
msgstr ""

#: ../../template-letters.rst:65
msgid ""
"Ghini's idea about knowledge and software ownership is that software is "
"procedural knowledge and as such, should be made a \"commons\": With "
"software as a commons, \"libre software\" and more specifically "
"\"Copylefted software\", you not only get the source code, you receive "
"the right to adapt it, and the invitation to study and learn from it, and"
" to share it, both share forward to colleagues, and share back to the "
"source.  With proprietary software, you are buying your own ignorance, "
"and with that, your dependency."
msgstr ""

#: ../../template-letters.rst:72
msgid ""
"This fancy term \"copyleft\" instead of just \"libre software\", means "
"the software you received is libre software with one extra freedom, "
"guaranteeing every right you were granted upon receiving the software is "
"never lost."
msgstr ""

#: ../../template-letters.rst:76
msgid ""
"In short: you can consider any GPL licensed software as your own, but "
"*not* your *exclusive* own."
msgstr ""

#: ../../template-letters.rst:78
msgid ""
"With copylefted software you are free —actually welcome— to employ local "
"software developers in your neighbourhood to alter the software according"
" to your needs, please do this on GitHub, fork the code, develop just as "
"openly as the common practice within Ghini, and whenever you want, open a"
" pull request so your edits can be considered for inclusion in the main "
"branch.  Ghini is mostly continuously unit tested, so before your code is"
" added to the main branch, it should follow our quality guidelines for "
"contributions.  With libre software you acquire freedom and contribute to"
" it, something that earns you visibility: Your additions stays yours, you"
" share them back to the community, and will see them completed and made "
"better by others.  Having your code added to the main branch simplifies "
"your upgrade procedure."
msgstr ""

#: ../../template-letters.rst:88
msgid ""
"You can also contribute to the software by helping translate it into your"
" native language. [5]"
msgstr ""

#: ../../template-letters.rst:90
msgid ""
"Some videos are published on YouTube, highlighting some of the software "
"capabilities. [6]"
msgstr ""

#: ../../template-letters.rst:92
msgid ""
"Share back with the community.  Several developers have spent "
"cumulatively many thousand hours developing this software, and we're "
"sharing with the community. We hope by this to stimulate a community "
"sentiment in whoever starts using what we have produced."
msgstr ""

#: ../../template-letters.rst:96
msgid ""
"In case you're interested in publishing your tree collection on the net, "
"I would be happy to include your plants, species, coordinates to "
"http://gardens.ghini.me.  Georeferenced textual information panels are "
"also very welcome, all offered as a courtesy: We're still defining the "
"offer. The idea behind this is allowing visitors to explore aggregated "
"garden collections, and the current focus is on trees."
msgstr ""

#: ../../template-letters.rst:103
#, python-format
msgid "A small example: http://gardens.ghini.me/#garden=Jardín%20el%20Cuchubo"
msgstr ""

#: ../../template-letters.rst:109
msgid ""
"Thanks for your consideration; please let me know if you have any "
"questions,"
msgstr ""

#: ../../template-letters.rst:111
msgid "Mario Frasca MSc"
msgstr ""

#: ../../template-letters.rst:113
msgid "[1] http://ghini.readthedocs.io/ - http://ghini.github.io/"
msgstr ""

#: ../../template-letters.rst:114
msgid "[2] https://play.google.com/store/apps/details?id=me.ghini.pocket"
msgstr ""

#: ../../template-letters.rst:115
msgid "[3] http://gardens.ghini.me/"
msgstr ""

#: ../../template-letters.rst:116
msgid "[4] https://play.google.com/store/apps/details?id=me.ghini.tour"
msgstr ""

#: ../../template-letters.rst:117
msgid "[5] https://hosted.weblate.org/projects/ghini/#languages"
msgstr ""

#: ../../template-letters.rst:118
msgid ""
"[6] "
"https://www.youtube.com/playlist?list=PLtYRCnAxpinU_8WEDuRlgsYnNVe4J_4kv"
msgstr ""

#: ../../template-letters.rst:121
msgid "free botanic data management systems"
msgstr ""

#: ../../template-letters.rst:123
msgid ""
"Many institutions still consider software an investment, an asset that is"
" not to be shared with others, as if it was some economic good that can't"
" be duplicated, like gold."
msgstr ""

#: ../../template-letters.rst:126
msgid ""
"As of right now, very few copylefted programs exist for botanic data "
"management:"
msgstr ""

#: ../../template-letters.rst:128
msgid ""
"``ghini.desktop``, born as ``bauble.classic`` and made a commons by the "
"Belize Botanical Garden.  ``ghini.desktop`` has three more components, a "
"pocket data collecting Android app, a Node.js web server, aggregating "
"data from different gardens and presenting it geographically, again a "
"geographic tour app aimed at visitors using the web data aggregator as "
"its data source.  You can find every Ghini component on GitHub: "
"http://github.com/Ghini"
msgstr ""

#: ../../template-letters.rst:135
msgid ""
"Specify 6 and 7, made a Commons by the Kansas University.  A bit complex "
"to set up, very difficult to configure and tricky to update.  The "
"institutions I've met who tried it, only the bigger ones, with in-house "
"software management capabilities manage to successfully use it.  They use"
" it for very large collections.  Specify is extremely generic, it adapts "
"to herbaria, seed collections, but also to collections of eggs, organic "
"material, fossils, preserved dead animals, possibly even viruses, I'm not"
" sure.  It is this extreme flexibility that makes its configuration such "
"a complex task.  Specify is also on GitHub: https://github.com/specify "
"and is licensed as GPLv2+.  I had no luck with their support. Try yours."
msgstr ""

#: ../../template-letters.rst:145
msgid ""
"Botalista, a French/Swiss cooperation, is GPL as far as rumours go.  Its "
"development has yet to go public.  It was most active in early 2016, by "
"end 2018 it seems to have faded away."
msgstr ""

#: ../../template-letters.rst:148
#, python-format
msgid ""
"``bauble.web`` is an experimental web server by the author of "
"``bauble.classic``. ``bauble.classic`` has been included into Ghini, to "
"become ``ghini.desktop``.  Bauble uses a very permissive license, making "
"it libre, but not copylefted.  As much as 50% of bauble.web and possibly "
"30% of ghini.desktop is shared between the two projects.  Bauble seems to"
" be stagnating, and has not yet reached a production-ready stage."
msgstr ""

#: ../../template-letters.rst:154
msgid ""
"``Taxasoft-BG``, by Eric Gouda, a Dutch botanist, specialist in "
"Bromeliaceae, collection manager at the Utrecht botanical garden.  It was"
" Mario Frasca who convinced Eric to publish what he was doing, licensing "
"it under the GPL, but the repository was not updated after 2016, April "
"13th and Eric forgot to explicitly specify the license.  You find it on "
"github: https://github.com/Ejgouda/Taxasoft-BG"
msgstr ""

#: ../../template-letters.rst:160
msgid ""
"``BG-Recorder``, by the BGCI, runs on Windows, and requires Access.  "
"Developed mostly between 1997 and 2003, it has not been maintained ever "
"since and isn't actively distributed by the BGCI.  I've not managed to "
"find a download link nor its license statement.  It is still mentioned as"
" *the free option* for botanic database management."
msgstr ""

#: ../../template-letters.rst:165
msgid ""
"Of the above, only ``ghini.desktop`` satisfies these conditions: "
"Copylefted, available, documented, maintained, easy to install and "
"configure.  Moreover: Cross platform and internationalized."
msgstr ""

#: ../../template-letters.rst:171
msgid "Welcome to Ghini/Bauble"
msgstr ""

#: ../../template-letters.rst:173
msgid "Dear new user,"
msgstr ""

#: ../../template-letters.rst:175
msgid "Welcome to Ghini/Bauble."
msgstr ""

#: ../../template-letters.rst:177
msgid ""
"As the maintainer, I have received your registration for "
"bauble.classic/ghini.desktop, many thanks for taking your time to fill in"
" the form."
msgstr ""

#: ../../template-letters.rst:180
msgid ""
"I see you are using bauble.classic-1.0.55, whereas 1.0.55 is the last "
"released version of bauble.classic, however, bauble.classic is now "
"unmaintained and superseded by the fully compatible, but slightly "
"aesthetically different ghini.desktop.  Install it following the "
"instructions found at http://ghini.rtfd.io"
msgstr ""

#: ../../template-letters.rst:183
msgid ""
"The registration service says you're not yet using the newest Python2 "
"version available.  As of 2018-05-01, that is 2.7.15.  Using any older "
"version does not necessitate problems, but in case anything strange "
"happens, please update your Python (and PyGTK) before reporting any "
"errors."
msgstr ""

#: ../../template-letters.rst:185
msgid ""
"Also thank you for enabling the \"sentry\" errors and warnings handler. "
"With that enabled, Ghini/Bauble will send any error or warning you might "
"encounter to a central server, where a developer will be able to examine "
"it.  If the warning was caused by an error in the software, its solution "
"will be present in a subsequent release of the software"
msgstr ""

#: ../../template-letters.rst:188
msgid ""
"If you haven't already, to enable the sentry and warnings handler, open "
"the \":config\" page in Ghini and double click on the row "
"\"bauble.use_sentry_client\"."
msgstr ""

#: ../../template-letters.rst:190
msgid ""
"I hope Ghini already matches your expectations, if this is not the case, "
"the whole Ghini community would be very thankful if you took the time to "
"report your experience with it."
msgstr ""

#: ../../template-letters.rst:194
msgid ""
"The above is one way to contribute to Ghini's development.  Others are: -"
" contribute ideas, writing on the bauble google forum "
"(https://groups.google.com/forum/#!forum/bauble), - contribute "
"documentation, or translations "
"(https://hosted.weblate.org/projects/ghini/), - give private feedback, "
"writing to ghini@anche.no, - rate and discuss Ghini openly, and promote "
"its adoption by other institutions, - open an issue on GitHub "
"(https://github.com/Ghini/ghini.desktop/issues/), - contribute code on "
"GitHub (fork the project on (https://github.com/Ghini/ghini.desktop/), - "
"hire a developer and have a set of GitHub issues solved, per-haps your "
"own - let me include your garden on the still experimental worldmap "
"(http://gardens.ghini.me)"
msgstr ""

#: ../../template-letters.rst:204
msgid "I sincerely hope you will enjoy using this copylefted, libre software"
msgstr ""

#: ../../template-letters.rst:206
msgid "Best regards, Mario Frasca"
msgstr ""

#: ../../template-letters.rst:209
msgid "https://ghini.github.io https://github.com/Ghini/ghini.desktop/issues/"
msgstr ""

#: ../../template-letters.rst:213
msgid "Do you want to join Ghini?"
msgstr ""

#: ../../template-letters.rst:215
msgid ""
"I generally send a note similar to the following, to GitHub members who "
"\"star\" the project, or to WebLate contributors doing more than one "
"line, and at different occasions.  If it's from GitHub, and if they "
"stated their geographic location in their profile, I alter the letter by "
"first looking on `institutos botánicos "
"<http://umap.openstreetmap.fr/en/map/institutos-"
"botanicos_47038#2/18.0/12.0>`_ if there's any relevant garden in their "
"neighbourhood."
msgstr ""

#: ../../template-letters.rst:222
msgid "Dear GitHub member, student, colleague, translator, botanist,"
msgstr ""

#: ../../template-letters.rst:224
msgid "Thank you warmly for your interest in the Ghini project!"
msgstr ""

#: ../../template-letters.rst:226
msgid ""
"From your on-line profile on github, I see you're located in Xxxx, is "
"that correct?"
msgstr ""

#: ../../template-letters.rst:228
msgid ""
"If you are indeed in Xxxx, you live very close to gardens Yyyy and Zzzz."
"  Maybe you would consider the following proposition?  All would start by"
" contacting the botanical garden there, and get to know what software "
"they use (what it offers, and at which price) and if they're interested "
"in switching to ghini.desktop+pocket+tour+web."
msgstr ""

#: ../../template-letters.rst:233
msgid ""
"The business model within Ghini is that the software is free and you get "
"it for free, but time is precious and if a garden needs help, they should"
" be ready to contribute.  Maybe you already have a full-time job and "
"don't need more things to do, but in case you're interested, or you have "
"friends who would be, I'm sure we can work something out."
msgstr ""

#: ../../template-letters.rst:238
msgid "Let me know where you stand."
msgstr ""

#: ../../template-letters.rst:240
msgid "best regards, and again thanks for all your contributed translations."
msgstr ""

#: ../../template-letters.rst:242 ../../template-letters.rst:309
msgid "Mario Frasca"
msgstr ""

#: ../../template-letters.rst:246
msgid "Letter to garden network"
msgstr ""

#: ../../template-letters.rst:248
msgid "good morning,"
msgstr ""

#: ../../template-letters.rst:250
msgid ""
"I wish to establish contact with people within the (eg: council of "
"botanic gardens), who could be open for examining a proposal.  I am the "
"current maintainer of the free software Ghini, for the management of "
"botanic collections.  Could you introduce me to one of the gardens in "
"your area, that are looking for a strong data management system, even "
"ones with more time than money?  My advantage is increased feedback (and "
"a Russian translation).  This evaluation of the software can be expanded "
"to further help develop it, for your and our use."
msgstr ""

#: ../../template-letters.rst:257
msgid ""
"The Ghini software is software made into a commons, meaning you can "
"freely copy it, learn from it, and you may enhance it, but you can't "
"appropriate it.  This is different from closed software, where copying is"
" not just discouraged but strictly prohibited."
msgstr ""

#: ../../template-letters.rst:262
msgid "Letter to botanic institution developing proprietary software"
msgstr ""

#: ../../template-letters.rst:264
msgid "Dear Peter, John, James, good morning.  (names of your contact people)"
msgstr ""

#: ../../template-letters.rst:266
msgid ""
"this is (you), of the Ghini Organization (maybe you want to get in touch "
"with me before you say this), (introduce how you know each other, you "
"possibly visited them, whatever). I'm not a botanist (or are you), "
"(myself: a mathematician specializing in information science), and as "
"Peter already knows I endorse the view of software as a commons, rather "
"than just an economic asset.  I am trying to establish a communication "
"line with your institution, and get in touch with the licensing devision "
"makers of the software you develop.  It would be a big advantage to all, "
"if it was copylefted, and published.  I would be happy to contribute to "
"its development."
msgstr ""

#: ../../template-letters.rst:274
msgid ""
"Unfortunately most institutions consider software an investment, not to "
"be shared with others, as if it was an economic good that can't be "
"duplicated, like gold. As of now, I am aware of the existence of very few"
" copylefted programs for botanic data management:"
msgstr ""

#: ../../template-letters.rst:279
msgid ""
"ghini.desktop, born as bauble.classic and made a Commons by the Belize "
"Botanical Garden.  (more recently Bauble regressed to 2008, chose for a "
"different license, which makes it free but not copylefted, and it is "
"again stagnating). ghini.desktop has three more components, a pocket data"
" collecting Android app, a nodeJS web server, aggregating data from "
"different gardens, and presenting it geographically, again a geographic "
"tour app aimed at visitors and using the web data aggregator as its data "
"source.  Every Ghini component is on GitHub: http://github.com/Ghini"
msgstr ""

#: ../../template-letters.rst:286
msgid ""
"specify 6 and 7, made a Commons by the Kansas University. A bit complex "
"to set up, and very difficult to configure, tricky to update.  the "
"institutions I've met who tried it, only the bigger ones, with in-house "
"software management capabilities manage to successfully use it.  Specify "
"is also on GitHub: https://github.com/specify"
msgstr ""

#: ../../template-letters.rst:291
msgid ""
"botalista, a French/Swiss cooperation, is GPL as far as I know, but it "
"wasn't yet released for public download.  very active around 2016, now "
"stagnating."
msgstr ""

#: ../../template-letters.rst:294
msgid ""
"Taxasoft-BG, from Eric Gouda, a Dutch botanist, specialist in "
"Bromeliaceae, collection manager at the Utrecht botanical garden. it was "
"me who convinced him to publish what he was doing, and to publish it "
"under the GPL, but I'm afraid he never posted any update of what he's "
"been doing after 2016, April 13th and I'm also afraid he forgot to "
"clearly specify the license.  I know that he actively works at it and at "
"its distribution. You can find it on GitHub: https://github.com/Ejgouda"
"/Taxasoft-BG"
msgstr ""

#: ../../template-letters.rst:301
msgid ""
"Of the above, only ghini.desktop satisfies the conditions: Copylefted, "
"available, documented, maintained, easy to install and configure.  "
"moreover: Cross platform, internationalized."
msgstr ""

#: ../../template-letters.rst:304
msgid ""
"Maybe you can add yourself to the list?  Or your decision makers could "
"even add your own system? Peter, what's your opinion in this?"
msgstr ""

#: ../../template-letters.rst:307
msgid "Friendly regards,"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:2
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:2
#: <included from
msgid "Quito Botanical Garden"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:4
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:4
#: <included from
msgid ""
"At the JBQ, Quito Botanical Garden, we have adopted the Ghini software in"
" April 2015. Since that time, we have accumulated experience with the "
"program, and we are ourselves in need to document it, in order to secure "
"the knowledge to the institution. We are happy to share it."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:10
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:10
#: <included from
msgid "Technical"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:12
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:12
#: <included from
msgid ""
"We work on GNU/Linux, a platform that many users don't master, and our "
"database is inside of a remote database management system. This implies "
"steps that are not obvious to the casual end user."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:16
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:16
#: <included from
msgid "How to start a program"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:19
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:19
#: <included from
msgid ""
"To start a program given its name, hit the |loose_png| key next to Alt, "
"or click on |10000000000000300000002F89E0224ADF9EC09E_png|, then start "
"typing the name of the program, in our case “Ghini” or just click on the "
"program symbol |100000000000003100000031BB54CBDFA885EBAC_png|, appearing "
"near the left margin of your display."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:25
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:25
#: <included from
msgid "Database server"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:28
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:28
#: <included from
msgid ""
"We chose for a centralised PostgreSQL database server. This way we are "
"protected from concurrent conflicting changes, and all changes are "
"simultaneously available on all ghini clients.  We did need to outsource "
"database server management."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:33
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:33
#: <included from
msgid "adding a new user"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:36
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:36
#: <included from
msgid ""
"Ghini keeps track of the user performing all sort of edits to the "
"database, and at the garden, apart from the stable users, we have all "
"sorts of temporary users writing to the database, that we decided we "
"would let Ghini help us keep track of database events."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:41
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:41
#: <included from
msgid ""
"Since we work using PostgreSQL, the users that Ghini stores in the "
"database history are the database users, not the system users."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:44
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:44
#: <included from
msgid ""
"Each user knows their own password, and only knows that one. Our super-"
"user, responsible for the database content, also has the ``bauble`` "
"fictional user password, which we only only use to create other users."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:49
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:49
#: <included from
msgid ""
"We do not use account names like ``voluntario``, because such accounts do"
" not help us associate the name to the person."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:52
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:52
#: <included from
msgid "— adding a new system user (linux/osx)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:55
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:55
#: <included from
msgid ""
"Adding a system user is not strictly necessary, as ghini does not use it "
"in the logs, however, adding a system user allows for separation of "
"preferences, configured connections, search history. On some of our "
"systems we have a single shared account with several configured "
"connections, on other systems we have one account per user."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:62
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:62
#: <included from
msgid ""
"On systems with one account per user, our users have a single configured "
"connection, and we hold the database password in the "
"``/home/<account>/.pgpass`` file.  This file is only readable for the "
"``<account>`` owner."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:67
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:67
#: <included from
msgid ""
"On systems with a shared account, the user must select their own "
"connection and type the corresponding password."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:70
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:70
#: <included from
msgid "These are the steps to add system users::"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:76
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:76
#: <included from
msgid "— adding a new database user"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:79
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:79
#: <included from
msgid ""
"Ghini has a very minimal interface to user management, it only works with"
" postgresql and it very much lacks maintainance.  We have opened issues "
"that will allow us use it, for the time being we use the ``create-"
"role.sh`` script::"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:96
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:96
#: <included from
msgid ""
"The redundant ``alter role`` following the ``create role`` lets us apply "
"the same script also for correcting existing accounts."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:99
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:99
#: <included from
msgid ""
"Our ghini database is called ``bauble``, and ``bauble`` is also the name "
"of our database super user, the only user with ``CREATEROLE`` privilege."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:103
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:103
#: <included from
msgid ""
"For example, the following invocation would create the user ``willem`` "
"with password ``orange``, on the ``bauble`` database hosted at "
"192.168.5.6::"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:109
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:109
#: <included from
msgid "Understanding when to update"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:111
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:111
#: <included from
msgid "Updating the system"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:114
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:114
#: <included from
msgid ""
"Ubuntu updates are a lot lighter and easier than with Windows. So "
"whenever the system suggests an update, we let it do that. Generally, "
"there's no need to wait during the update nor to reboot after it's done."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:119
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:119
#: <included from
msgid "Updating ghini"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:122
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:122
#: <included from
msgid ""
"The first window presented by Ghini looks like this. Normally, you don't "
"need do anything in this window, just press enter and get into the main "
"program screen."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:128
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:128
#: <included from
msgid ""
"Occasionally, at the top of the screen an information text will appear, "
"telling you that a newer version is available on-line."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:133
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:133
#: <included from
msgid ""
"The update procedure is simple, and it depends on the operating system "
"you use, we're not explaining here again."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:136
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:136
#: <included from
msgid ""
"It is generally a good idea updating the software.  If in doubt, contact "
"the author, or write to the group."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:139
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:139
#: <included from
msgid "understanding ghini initial screen"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:141
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:141
#: <included from
msgid "Complete screen"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:144
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:144
#: <included from
msgid "At the moment of writing, our initial screen looked like this:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:148
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:148
#: <included from
msgid ""
"Apart from the main application menu, Ghini offers three special "
"interface sections with information and tools to explore the database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:152
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:152
#: <included from
msgid "Numeric overview"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:155
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:155
#: <included from
msgid ""
"The table in the right half of the screen presents a summary of all the "
"registered plants can be observed.  Each entry printed in bold is a link "
"to the query selecting the corresponding objects."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:161
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:161
#: <included from
msgid "Stored queries"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:164
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:164
#: <included from
msgid ""
"The lower half of the right hand side contains a set of stored queries.  "
"While you can edit them to your liking, our hints include selecting those"
" accessions that have not been identified at rank species.  And one for "
"the database history."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:171
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:171
#: <included from
msgid "Query and action buttons"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:174
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:174
#: <included from
msgid ""
"At the top of this screen you can find the field in which you would enter"
" your searches."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:179
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:179
#: <included from
msgid ""
"With the |100000000000001C00000020F4C7873186014F2F_png| button, in the "
"form of a house, you can return from your searches to the main screen."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:182
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:182
#: <included from
msgid ""
"With the |100000000000001B000000207EC6F9075C9D3669_png| button, in the "
"form of an arrow, you can return to your last search."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:184
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:184
#: <included from
msgid ""
"With the |100000000000001C0000001FB8A1F75F7A5EF877_png| button, in the "
"form of a gear, you can start the \"Query Builder\", which helps you "
"compose complex searches in a simple, graphical way."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:189
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:189
#: <included from
msgid ""
"We often have volunteers who only work at the garden for a very short "
"time. It was with them in mind that we have developed a `hyper-simplified"
" view <goal.html#hypersimplified-view>`_ on the ghini database structure."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:193
#: ../../use_cases-jbq.rst:597
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:193
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:597
#: <included from
msgid "Details"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:196
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:196
#: <included from
msgid ""
"The two figures here show all that our temporary collaborators need to "
"know."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:199
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:199
#: <included from
msgid "Taxonomy & Collection"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:199
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:199
#: <included from
msgid "Garden"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:204
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:204
#: <included from
msgid ""
"At times, the program gives error messages. |dontpanic_png|, retry, or "
"report to the developers."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:207
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:207
#: <included from
msgid "Network problems"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:210
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:210
#: <included from
msgid ""
"In order to work, the program needs a stable network connection to the "
"database server. It can happen: you start the program, and it can't "
"connect to our database server. You would then get a rather explicit but "
"very badly typeset error message."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:217
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:217
#: <included from
msgid "Just ignore it and try again."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:219
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:219
#: <included from
msgid "Search fails with error"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:222
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:222
#: <included from
msgid ""
"Sometimes and without any apparent cause, a search will not run "
"successfully, and a window with an error message will be displayed. In "
"this case you only have to try to perform the same search again."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:227
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:227
#: <included from
msgid "An example of such an error message:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:231
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:231
#: <included from
msgid "Search does not return something I just inserted"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:234
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:234
#: <included from
msgid ""
"Accession codes starting with zero and composed of just numbers, as for "
"example ``016489`` are considered by the software as numbers, so if you "
"don't enclose the search string in quotes, any leading 0 will be stripped"
" and the value will not be found."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:239
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:239
#: <included from
msgid "Try again, but enclose your search string in single or double quotes."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:243
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:243
#: <included from
msgid "Number on the label"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:243
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:243
#: <included from
msgid "corresponding search"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:248
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:248
#: <included from
msgid ""
"Please note: when you look for a Plant code, not an Accession, the "
"leading zero becomes optional, so in the above example it's maybe easier "
"to type ``16489.1``."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:252
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:252
#: <included from
msgid ""
"A serious situation happened once, and we absolutely want to prevent it "
"from happening again: a user deleted a genus, with everything that was "
"below it, species and accessions, and synonyms."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:256
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:256
#: <included from
msgid "Solving it with user permissions"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:259
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:259
#: <included from
msgid ""
"We propose to have different connection profiles, associated to different"
" database users, each user with all needed permissions."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:263
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:263
#: <included from
msgid "Full permission (BD-JBQ)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:263
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:263
#: <included from
msgid "Only qualified personnel get this kind of access."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:268
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:268
#: <included from
msgid "Insert and update (BD-JBQ-limitado)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:266
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:266
#: <included from
msgid ""
"We use this one for those users who come help us for a limited time, and "
"who did not get a complete introduction to database concepts. It is meant"
" to prevent costly mistakes."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:271
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:271
#: <included from
msgid "Read only (BD-JBQ-lectura)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:271
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:271
#: <included from
msgid "it can be shared with anyone visiting the garden"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:273
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:273
#: <included from
msgid ""
"You select the connection at start-up, and the software asks you for the "
"password corresponding to the connection you selected."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:278
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:278
#: <included from
msgid ""
"If you want to review the details of the connection, click on the ▶ next "
"to 'Connection Details', it will change to ▼, and the connection window "
"will be displayed as one of the following:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:286
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:286
#: <included from
msgid ""
"As you can see, we are connecting to the same database server, each "
"connection uses the same database on the server, but with different user."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:290
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:290
#: <included from
msgid "Thinking further about it"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:293
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:293
#: <included from
msgid ""
"On the other hand, we are questioning if it is at all appropriate, "
"letting any user delete something at such high level as a family, or a "
"genus, or, for that matters, of anything connected to accessions in the "
"collection."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:298
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:298
#: <included from
msgid ""
"The ghini way to question the software features, is by opening a "
"`corresponding issue "
"<https://github.com/Ghini/ghini.desktop/issues/218>`_."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:302
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:302
#: <included from
msgid ""
"When contacting the developers, they will definitely ask for technical "
"information, or at least to see a screen-shot.  Help them help you."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:305
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:305
#: <included from
msgid "Taking a screen-shot"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:308
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:308
#: <included from
msgid ""
"On Linux there are three ways to create a screen-shot, all involve "
"hitting the 'PrtSc' key.  The most practical one is possibly hitting the "
"'PrtSc' key in combination with Ctrl and Shift. This will start an "
"interactive screen copy tool. You select a rectangle and the area is "
"copied in the clipboard.  Paste it in the email you're writing, or in the"
" chat line where the developers are trying to help you."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:316
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:316
#: <included from
msgid "Where are the logs"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:319
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:319
#: <included from
msgid ""
"Ghini continuously saves a very informative log file, in the "
"``~/.bauble/bauble.log`` file.  Don't bother opening it, just send it "
"over.  It contains loads of technical information."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:323
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:323
#: <included from
msgid "Continuous unmanned alerting"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:326
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:326
#: <included from
msgid ""
"An other option is to activate the sentry handler. It will notify our "
"sentry server of any serious situations in the software.  If you "
"registered, the developers will know how to contact you if necessary."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:331
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:331
#: <included from
msgid ""
"To the healthy paranoid: we're not monitoring what you're doing, we're "
"monitoring how our software works.  You can always opt out."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:334
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:334
#: <included from
msgid ""
"You activate the Sentry handler in the ``:prefs`` page: look for the row "
"with name ``bauble.use_sentry_handler``, if the value is not what you "
"wish, double click on the line and it will change to the other value."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:340
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:340
#: <included from
msgid "Taxonomy"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:342
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:342
#: <included from
msgid "Introduction"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:344
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:344
#: <included from
msgid "Orchidaceae taxonomic complexity"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:347
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:347
#: <included from
msgid ""
"At the JBQ, we work most of all with orchids, family Orchidaceae, one of "
"the largest plant families, with no less than 850 genera, organized "
"—according to Dressler— in approximately 70 subtribes, 22 tribes, 5 "
"subfamilies.  How we represent this information is not obvious and needs "
"be explained."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:352
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:352
#: <included from
msgid ""
"The taxonomy of the Orchidaceae family is continuously being reviewed. "
"Genera get added, refused, reorganized, recognized as synonyms, some "
"taxonomists prefer grouping species or genera in a new way, others split "
"them again and differently, botanists of different nationalities may have"
" different views on the matter.  All this sounds very complex and "
"specialistic, but it's part of our daily routine, and it can all be "
"stored in our Ghini database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:360
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:360
#: <included from
msgid "Identifying at rank Genus, or Family"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:362
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:362
#: <included from
msgid "At rank genus"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:365
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:365
#: <included from
msgid ""
"Ghini-3.1 prescribes that an accession is identified at rank species, in "
"all cases. The current maintainer acknowledges that this is a mistake, "
"coming from the early Bauble days, and which Ghini-3.1 has in common with"
" other botanic software. Until this is fixed, we rely on established "
"practices."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:371
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:371
#: <included from
msgid ""
"If an accession is identified at rank genus, we add a fictive species in "
"that genus, we don't specify its species epithet (we don't know that) and"
" we add an unranked epithet in the infraspecific information section, "
"like this:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:378
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:378
#: <included from
msgid "When displayed in a search result, it shows like this:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:382
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:382
#: <included from
msgid "At rank family"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:385
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:385
#: <included from
msgid ""
"If an accession is only identified at rank family, we need a fictive "
"genus, to which we can add the fictive species. Since our garden is "
"primarily focusing on Orchidaceae, we use the very short name **Zzz** for"
" the fictive genus within the family, like this:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:392
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:392
#: <included from
msgid ""
"The current maintainer suggests to use the prefix **Zzz-** and behind the"
" prefix to write the family name, possibly removing the trailing **e**.  "
"Removal of the trailing **e** is useful in order not to get results that "
"include genus names when you as for stuff ending in **aceae**."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:398
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:398
#: <included from
msgid ""
"Apart from the aforementioned **Zzz** genus in the Orchidaceae family, we"
" follow this suggested practice, so for example our collection would "
"include *Zzz-cactacea* or *Zzz-bromeliacea*."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:402
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:402
#: <included from
msgid ""
"Remember: our **Zzz** genus is a fictive genus in the **Orchidaceae** "
"family, do not use it as unspecified genus in other families."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:406
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:406
#: <included from
msgid ""
"Identifying at a rank that is not allowed by the software (eg: Subtribe, "
"or Subfamily)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:408
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:408
#: <included from
msgid "At rank subtribe"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:411
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:411
#: <included from
msgid ""
"We sometimes can't identify a taxon at rank genus, but we do manage to be"
" more precise than just \"it's an orchid\". Quite often we are able to "
"indicate the subtribe, this is useful when you want to produce hybrids."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:416
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:416
#: <included from
msgid ""
"The software does not let us store ranks which are intermediate between "
"family and genus, so we need to invent something, and this is what we do:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:420
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:420
#: <included from
msgid ""
"We insert a fictive genus, naming it as the subtribe, prefixing it with "
"'Zzx-', like in this example:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:425
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:425
#: <included from
msgid "This Zzx-Laeliinae is some genus in the Laeliinae subtribe."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:427
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:427
#: <included from
msgid ""
"In order to be able to select genera by subtribe, we also add a note to "
"the Zzx-Laeliinae fictive genus as well as for all real genera in that "
"subtribe, note category subtribus, note value the subtribe name."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:432
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:432
#: <included from
msgid "This allows for queries like:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:436
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:436
#: <included from
msgid ""
"We are very much looking forward to seeing that `issue-9 "
"<https://github.com/Bauble/bauble.classic/issues/9>`_ solved!"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:439
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:439
#: <included from
msgid "At rank subfamily, tribe"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:442
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:442
#: <included from
msgid ""
"Just as we reserved the prefix Zzx- for subtribe, we reserve the prefixes"
" Zzy- for tribe, Zzw- for subfamily."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:445
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:445
#: <included from
msgid ""
"In particular, the subfamily information is relevant, because there are "
"subfamilies within the Orchidaceae family which are not further "
"separated."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:449
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:449
#: <included from
msgid "Editing the Accession identification - the Species details"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:451
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:451
#: <included from
msgid "Placeholder species for individual accessions"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:454
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:454
#: <included from
msgid ""
"Scenario one describes the identification of a single accession, which "
"had been associated to a \"generic\", placeholder species, something like"
" “*Zzz* sp” or “*Vanda* sp”;"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:458
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:458
#: <included from
msgid ""
"In this case, when the plant species becomes known, we change the "
"association in the accession, selecting a different species."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:463
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:463
#: <included from
msgid ""
"We do not edit the species, because there might be totally unrelated "
"accessions connected to the same placeholder species."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:466
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:466
#: <included from
msgid "Unknown species for multiple accessions"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:469
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:469
#: <included from
msgid ""
"A different case is when we have a whole batch of accessions, all "
"obviously the same species, but we haven't been able to identify it. In "
"this case, we associate the accessions with an incompletely specified "
"species, something like “*Zzz* sp-59”, preferably adding the taxonomist's"
" name, who made the association."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:475
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:475
#: <included from
msgid ""
"A species like “*Vanda* sp-018599” is not a placeholder species, it is a "
"very concrete species, which we haven't yet identified."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:480
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:480
#: <included from
msgid ""
"In this case, when the species gets identified (and it could even be a "
"species nova), we directly edit the species, so all accessions that refer"
" to it get the change."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:484
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:484
#: <included from
msgid "A new plants is relative to a species not yet in our collection."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:486
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:486
#: <included from
msgid "Last minute species"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:489
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:489
#: <included from
msgid ""
"We start this from the Accession window and it's very simple, just click "
"on the **+** next to the species name, we get into the Species window."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:493
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:493
#: <included from
msgid "Adding a species and using online taxonomic services"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:495
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:495
#: <included from
msgid "Adding a new species — the plant list."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:498
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:498
#: <included from
msgid ""
"We start the obvious way: type the genus epithet, possibly select it from"
" the completion list, then type the species epithet, or at least your "
"best guess."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:504
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:504
#: <included from
msgid ""
"Next to the species epithet field there's a small button, |green_ball|, "
"which connects us to the plant list.  Click on it, a message area appears"
" at the top of the window."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:510
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:510
#: <included from
msgid ""
"Depending on the speed of your internet connection, but also on how close"
" your best guess is to a correct published name, the top area will change"
" to something like this:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:516
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:516
#: <included from
msgid "Accept the hint and it will be as if you had typed the data yourself."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:520
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:520
#: <included from
msgid "Reviewing a whole selection — TNRS."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:523
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:523
#: <included from
msgid ""
"This is described in the manual, it's extremely useful, don't forget "
"about it."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:528
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:528
#: <included from
msgid "Let the database fit the garden"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:530
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:530
#: <included from
msgid ""
"A never-ending task is reviewing what we have in the garden and have it "
"match what we have in the database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:533
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:533
#: <included from
msgid "Initial status and variable resources"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:536
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:536
#: <included from
msgid ""
"When we adopted ghini, we imported into it all that was properly "
"described in a filemaker database. That database focused solely on "
"Orchids and even so it was far from complete.  In practice, we still meet"
" labeled plants in the garden which have never been inserted in the "
"database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:542
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:542
#: <included from
msgid ""
"From time to time, we manage to get resources to review the garden, "
"comparing it to the collection in the database, and the main activity is "
"to insert accession codes to the database, take pictures of the plant in "
"question, and note its location, all tasks that are described in the "
"remainder of this section."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:548
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:548
#: <included from
msgid ""
"The small Android app ghini.pocket was added to the Ghini family while a "
"Ghini programmer was here in Quito.  It helps us take a snapshot of the "
"database in our pocket while walking in the garden, but it also allows "
"for a very swift inventory procedure."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:553
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:553
#: <included from
msgid "Inventory procedure"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:556
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:556
#: <included from
msgid ""
"We start ghini.pocket, we write down the name of the location where we "
"will be conducting the inventory, for example (INV 1) for greenhouse 1.  "
"We enter (type or scan if the plant has bar code or QR code) the "
"accession code and we look it up in ghini.pocket."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:561
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:561
#: <included from
msgid ""
"A side effect of performing the search is that ghini.pocket writes the "
"date with time, location and the code looked for in a text file that can "
"later be imported into the database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:565
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:565
#: <included from
msgid ""
"For a greenhouse with around 1000 plants our estimates suggest you will "
"need two days, working at relaxed pace, from 8:00 am to 5:00 pm."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:569
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:569
#: <included from
msgid ""
"After having imported the file generated by ghini.pocket, it is easy to "
"reveal which plants are missing. For example: If we did the inventory of "
"the INV3 from 4 to 5 September, this is the corresponding search::"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:576
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:576
#: <included from
msgid ""
"All of these plants can be marked as dead, or lost, according to garden "
"policy."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:579
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:579
#: <included from
msgid "Visualizing the need of taxonomic attention"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:582
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:582
#: <included from
msgid ""
"Our protocol includes one more detail intended to visually highlight "
"plants that need the attention of a taxonomist."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:587
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:587
#: <included from
msgid ""
"A plant that only appears in our data base identified at family level or "
"that wasn't yet the database receives a visual signal (e.g.: a wooden or "
"plastic stick, for ice cream or french fries), to highlight that it is "
"not identified. In this way the taxonomist in charge, when making a tour "
"of the greenhouse can quickly spot them and possibly proceed to add their"
" identification in the database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:595
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:595
#: <included from
msgid "Naming convention in garden locations"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:601
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:601
#: <included from
msgid "description"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:603
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:603
#: <included from
msgid "Reserved to cactus plants next to the orchids exposition glasshouses."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:606
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:606
#: <included from
msgid "Nepenthaceae exibition"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:608
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:608
#: <included from
msgid ""
"orquidearios de calor en el jardín (1A a 9C son lugares especificos entre"
" del orquideario)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:611
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:611
#: <included from
msgid ""
"orquidearios de frío en el jardín (1A a 5I son lugares específicos dentro"
" del orquideario)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:614
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:614
#: <included from
msgid "invernadero 1 (calor)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:616
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:616
#: <included from
msgid "invernadero 2 (frío)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:618
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:618
#: <included from
msgid "invernadero 3 (calor)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:621
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:621
#: <included from
msgid "Adding an Accession for a Plant"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:623
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:623
#: <included from
msgid ""
"Obviously we keep increasing our collection, with plants coming from "
"commercial sources, or collected from the wild, more rarely coming from "
"expeditions to remote areas of our country, or we receive plants which "
"were illegally collected."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:628
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:628
#: <included from
msgid ""
"Sometimes we have to add plants to the digital collection, just because "
"we have them physically, found in the garden, with or without its label, "
"but without their digital counterpart."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:632
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:632
#: <included from
msgid "Existing plant, found in the garden with its own label"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:635
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:635
#: <included from
msgid ""
"This activity starts with a plant, which was found at a specific garden "
"location, an accession label, and the knowledge that the accession code "
"is not in the database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:647
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:647
#: <included from
msgid ""
"For this example, let's assume we are going to insert this information in"
" the database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:651
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:651
#: <included from
msgid "Accession"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:651
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:651
#: <included from
msgid "Species"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:651
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:651
#: <included from
msgid "Location"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:653
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:653
#: <included from
msgid "Invernadero 1 (calor)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:656
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:656
#: <included from
msgid ""
"We go straight into the Accession Editor, start typing the species name "
"in the corresponding field.  Luckily, the species was already in the "
"database, otherwise we would use the **Add** button next to the entry "
"field."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:663
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:663
#: <included from
msgid ""
"We select the correct species, and we fill in a couple more fields, "
"leaving the rest to the default values:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:667
#: ../../use_cases-jbq.rst:702
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:667
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:702
#: <included from
msgid "Accession ID"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:667
#: ../../use_cases-jbq.rst:702
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:667
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:702
#: <included from
msgid "Type of Material"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:667
#: ../../use_cases-jbq.rst:702
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:667
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:702
#: <included from
msgid "Quantity"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:667
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:667
#: <included from
msgid "Provenance"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:669
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:669
#: <included from
msgid "Unknown"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:672
#: ../../use_cases-jbq.rst:707
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:672
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:707
#: <included from
msgid ""
"After this, we continue to the Plant editor, by clicking on **Add "
"Plants**."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:675
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:675
#: <included from
msgid ""
"We do not fill in the Accession's \"**Intended Locations**\", because we "
"don't know what was the original intention when the plant was first "
"acquired."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:679
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:679
#: <included from
msgid ""
"In the Plant Editor, we insert the Quantity and the Location.  And we're "
"done."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:682
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:682
#: <included from
msgid "The plant is now part of the database:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:686
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:686
#: <included from
msgid "New accession: plant just entering the garden"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:689
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:689
#: <included from
msgid ""
"This activity starts with a new Plant, just acquired from a known Source,"
" a plant label, and an intended Location in the garden."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:692
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:692
#: <included from
msgid ""
"We mostly do the same as for the case that a plant is found in the "
"garden, there are two differences: (1) we know the source of the plant; "
"(2) acquiring this plant was a planned action, and we intend to place it "
"at a specific location in the garden."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:697
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:697
#: <included from
msgid ""
"Again, we go straight into the Accession Editor, start typing the species"
" and we either select if from the completion list or we add it on the "
"fly."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:702
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:702
#: <included from
msgid "Source"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:704
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:704
#: <included from
msgid "specified"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:710
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:710
#: <included from
msgid "In the Plant Editor, we insert the Quantity and the Location."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:712
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:712
#: <included from
msgid ""
"Please note that the plant may be initially placed in a greenhouse, "
"before it reaches its intended location in the garden."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:715
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:715
#: <included from
msgid "Existing plant, found in the garden without its label"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:718
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:718
#: <included from
msgid ""
"When this happens, we can't be sure the plant had never been in the "
"collection, so we act as if we were re-labeling the plant.  This is "
"discussed in the next section, but we fall back to the case of a new "
"accession."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:723
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:723
#: <included from
msgid ""
"When we physically associate a label to a plant, there's always the "
"chance that something happens either to the plant (it may die) or to the "
"label (it may become unreadable), or to the association (they may be "
"separated). We have software-aided protocols for these events."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:728
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:728
#: <included from
msgid "We find a dead plant"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:731
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:731
#: <included from
msgid ""
"Whenever a plant is found dead, we collect its label and put it in a box "
"next to the main data insertion terminal, the box is marked “dead "
"plants”."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:734
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:734
#: <included from
msgid ""
"Definitely at least once a week, the box is emptied and the database is "
"updated with this information."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:737
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:737
#: <included from
msgid ""
"Dead plants aren't *removed* from the database, they stay there but get a"
" **quantity** zero. If the cause of death is known, this is also written "
"in the database."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:741
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:741
#: <included from
msgid ""
"Please once again remember that a **Plant** is not an **Accession** and "
"please remember we do not remove objects from the database, we just add "
"to their history."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:745
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:745
#: <included from
msgid ""
"Insert the complete plant code (something like ``012345.1``, or "
"``2017.0001.3``, and you don't need leading zeros nor quotes), right "
"click on the corresponding row, and click on **edit**. change the "
"quantity to 0, fill in the reason and preferably also the date of change."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:750
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:750
#: <included from
msgid ""
"If you need add any details about the plant death, please use a **note**,"
" and re-use the note category \"death_cause\"."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:753
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:753
#: <included from
msgid ""
"Plants with **quantity** zero are shown with a different colour in the "
"results view.  This helps distinguish them from live plants."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:756
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:756
#: <included from
msgid "We find a plant without a label"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:759
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:759
#: <included from
msgid ""
"We can't be sure the plant had ever been in the collection or not. We "
"assume it had, and that its label was lost."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:762
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:762
#: <included from
msgid ""
"Losing a plant label is unfortunate, but it just sometimes happens. What "
"we do is to put a new label to the plant, and to clearly state that the "
"label is a replacement of an original one."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:766
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:766
#: <included from
msgid ""
"We then handle the case as if it was a new accession, plus we add a note "
"to the accession, category “label”, text “relabeled”."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:770
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:770
#: <included from
msgid "Keeping track of different sources of plant material"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:772
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:772
#: <included from
msgid "What different sources we can have"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:775
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:775
#: <included from
msgid ""
"In this botanical garden, we receive plants from different types of "
"origin. It could be from expeditions (plants coming from nature, "
"collected with legal permission from MAE - Ecuadorian Environment "
"Ministry), donated plants mostly coming as gifts from collectors or "
"orchid commercialization enterprises, purchased, or confiscated plants "
"(usually coming from MAE raids around the country)."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:783
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:783
#: <included from
msgid "If the plant comes from a wild source"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:786
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:786
#: <included from
msgid ""
"The accession editor offers the option \"origin\" option. When a plant is"
" traceable to a wild source, we can specified its specific origin. We "
"want to comply with ITF2, and ghini-3.1 only partly respects that "
"standard. The ITF2 complying options are:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:791
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:791
#: <included from
msgid "Wild: Accession of wild source."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:792
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:792
#: <included from
msgid "Cultivated: Propagule(s) from a wild source plant."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:793
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:793
#: <included from
msgid "Not Wild: Accession not traceable to a wild source."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:794
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:794
#: <included from
msgid "Insufficient data"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:796
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:796
#: <included from
msgid ""
"In the case of a donated plant, it is better to put detail information "
"just as a note in the plant accession; in the case of a plant with an "
"unknown origin, we select the Insufficient data option."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:800
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:800
#: <included from
msgid "Using the source tab in the accession editor"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:803
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:803
#: <included from
msgid ""
"In this section we can create or use a contact, our source of plant "
"material. It could be from an expedition to a collecting place, and in "
"this case we would specify the region and the expedition name, or could "
"be the name of the person or enterprise donating a specific batch of "
"plants."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:811
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:811
#: <included from
msgid ""
"Once you choose or create the contact information, this section deploys "
"more options, here you can specify the region, where you can choose the "
"country of origin, and a specific location within the region, "
"georeferencing information (including the GPS data), habitat description "
"collector name. For the last one, I recommend also to write the specific "
"date next to the collector name (eg. Luis Baquero 11/10/2016)."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:819
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:819
#: <included from
msgid "Donated, bought or confiscated plants"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:822
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:822
#: <included from
msgid ""
"However useful for expeditions or for donors where the main information "
"is geographic, this source tab is not very practical in our remaining "
"cases: we handle three more categories: confiscated, purchased and "
"donated, for these categories the options available in the source tab do "
"not apply: too much information and not to the point."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:828
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:828
#: <included from
msgid "In these cases, we add a set of notes, according to the case."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:830
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:830
#: <included from
msgid "— Donated plants"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:833
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:833
#: <included from
msgid ""
"If the plant was donated by individual, we add the individual among our "
"contacts and specify it as source, then we add the notes:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:837
#: ../../use_cases-jbq.rst:850 ../../use_cases-jbq.rst:864
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:837
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:850
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:864
#: <included from
msgid "category"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:837
#: ../../use_cases-jbq.rst:850 ../../use_cases-jbq.rst:864
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:837
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:850
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:864
#: <included from
msgid "text"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:839
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:839
#: <included from
msgid "gift"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:840
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:840
#: <included from
msgid "Contribución científica al JBQ"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:843
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:843
#: <included from
msgid "— Bought plants"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:846
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:846
#: <included from
msgid ""
"If the plant was bought, we add the previous owner among our contacts and"
" specify it as source, then we add the notes:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:852
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:852
#: <included from
msgid "purchase"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:853
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:853
#: <included from
msgid "optional, free text"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:854
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:854
#: <included from
msgid "the invoice number"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:857
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:857
#: <included from
msgid "— Confiscated plants"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:860
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:860
#: <included from
msgid ""
"If the plant was confiscated, we add the previous owner among our "
"contacts and specify it as source, then we add the notes:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:866
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:866
#: <included from
msgid "confiscated"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:867
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:867
#: <included from
msgid "possibly, legal details, law number ..."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:871
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:871
#: <included from
msgid "Producing or reproducing labels"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:873
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:873
#: <included from
msgid "Refreshing plant labels"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:876
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:876
#: <included from
msgid ""
"Sometimes we refresh the labels, for example all that is in a greenhouse,"
" or maybe just a set of plants because their labels risk becoming "
"unreadable."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:880
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:880
#: <included from
msgid ""
"In the first case it's easy selecting all plants in the Location, we just"
" type the location name, or give the search ``location like <location "
"name>``."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:884
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:884
#: <included from
msgid ""
"The second case it's a bit trickier.  What we do is to create a temporary"
" **Tag**, and use it to tag all plants that were found in need for a new "
"label."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:888
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:888
#: <included from
msgid ""
"Given the selection, we start the report tool, using the mako "
"``accession-label.svg`` template.  We reset its options to default "
"values, and since we're using a simple printer, we set the colour to "
"``black`` instead of ``blue``, which is meant for engraving."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:893
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:893
#: <included from
msgid "Preparing labels for non-database plants"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:896
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:896
#: <included from
msgid ""
"To prepare the batch of 72 labels, we use a mako report template, named "
"``accession-label.svg``.  This template accepts parameters, this is an "
"example that would produce labels from 025801 all the way to 025872."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:903
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:903
#: <included from
msgid ""
"Labels come for us in two flavours: (1) either new plants just being "
"acquired by the garden; (2) or plants in the garden, found without a "
"label. We distinguish the two cases by adding a 'ret' extra text for "
"relabeled plants."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:908
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:908
#: <included from
msgid "We keep two boxes with labels of the two types, ready to be used."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:910
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:910
#: <included from
msgid ""
"Our garden has two exposition greenhouses, and several warm and cold "
"greenhouses where we keep the largest part of our collection.  Plants are"
" moved to the exposition when flowering and back to the \"warehouse\" "
"when less interesting for the exposition. For each plant in our "
"collection we need to know its current locations and history of "
"movements."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:916
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:916
#: <included from
msgid "Planned action"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:919
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:919
#: <included from
msgid ""
"The action starts by moving the plants around, and collecting the plant "
"code either on paper, or in our mobile app, if we had one."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:922
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:922
#: <included from
msgid ""
"We then go to the desktop terminal and revise all plants one by one "
"changing their location in the database.  It is important that the date "
"of the location change is correctly memorized, because this tells us how "
"long a plant stays in the exposition."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:927
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:927
#: <included from
msgid ""
"If we had a mobile app, we would just upload the info to the server and "
"we would be done."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:930
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:930
#: <included from
msgid "Ex-post correction"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:933
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:933
#: <included from
msgid ""
"While revising the garden, we find a plant at a location that is not what"
" the database says.  We update the database information."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:936
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:936
#: <included from
msgid ""
"For example, the plant belonging to accession “012142”, species "
"“*Acineta* sp”, was found in “Invernadero 1”, while the database says it "
"is in “ICAlm3”."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:939
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:939
#: <included from
msgid ""
"All we do is find the Plant in the database and update its information.  "
"We do not change anything in the initial Accession information, just the "
"current Plant information."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:943
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:943
#: <included from
msgid ""
"We type the accession code in the search entry field, with quotes, hit "
"enter. The search results now shows the accession, and it tells us how "
"many plants belong to it.  Click on the squared **+** in the results row,"
" so we now also see a row for the plant belonging to the accession."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:948
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:948
#: <included from
msgid ""
"Right click on the Plant row, the three options will show: “Edit, Split, "
"Delete”, select Edit, you land in the Plant Editor."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:951
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:951
#: <included from
msgid "Just correct the Location field, and click on OK."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:953
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:953
#: <included from
msgid "The InfoBox contains information about the last change to the object:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:958
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:958
#: <included from
msgid ""
"For plants, even more interesting, it builds a history of changes, list "
"that includes Location changes, or Quantity changes."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:963
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:963
#: <included from
msgid ""
"As plants enter the flowering stage, we can review their identification "
"directly, or we take pictures of details of the flower, hoping that a "
"visiting specialist could help completing the identification."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:967
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:967
#: <included from
msgid "Adding pictures"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:970
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:970
#: <included from
msgid ""
"We are practicing with ODK Collect, a small program running on hand-held "
"android devices.  Ghini's use of ODK Collect hasn't yet frozen to a best "
"practice.  Do have a look at the `corresponding issue "
"<https://github.com/Ghini/ghini.desktop/issues/243>`_ on github."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:976
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:976
#: <included from
msgid ""
"Regularly, we need producing reports about our collection that the "
"Ecuadorian Environment Ministry (MAE) requires and that justify the very "
"existence of the garden."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:980
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:980
#: <included from
msgid "Producing reports"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:983
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:983
#: <included from
msgid ""
"Each year the botanic garden has to submit a report (annual report of "
"management and maintenance of orchids collection) complying to the "
"requirements of the Ecuadorian Ministry of the Environment."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:987
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:987
#: <included from
msgid ""
"To this end, we start selecting the plants we have to include in the "
"report. It might be all acquisition in the past year::"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:992
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:992
#: <included from
msgid ""
"or all plants within a location, or all plants belonging to a species, or"
" just everything (but this will take time)::"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:999
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:999
#: <included from
msgid ""
"Having selected the database objects which we want in the report, we "
"start the report tool, which acts on the selection."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1003
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1003
#: <included from
msgid "Searching the database"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1005
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1005
#: <included from
msgid ""
"You search the database in order to edit the data further, or because you"
" want to produce a report. Anyway you start with typing something in the "
"search field"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1011
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1011
#: <included from
msgid "and you hope to see your result in the search result view."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1013
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1013
#: <included from
msgid "Search in order to edit (plant or accession)"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1016
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1016
#: <included from
msgid ""
"When searching in order to edit, you want to be very specific, and select"
" as few objects as possible. The most fine-tuned search is the one based "
"on plant number: you know the code, you get one object."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1020
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1020
#: <included from
msgid "If your plant is not there, the screen would look like this:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1024
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1024
#: <included from
msgid "Other example, plant ``007701.1`` is in the database:"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1028
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1028
#: <included from
msgid ""
"All fields with a darker background in the infobox on the right hand side"
" are hyperlinks to other objects in the database. Clicking on them will "
"either replace the text in the search field and execute the query, or "
"will simply add the object to the results."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1033
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1033
#: <included from
msgid "Clicking on the accession does the latter."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1037
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1037
#: <included from
msgid ""
"We now have both Plant or Accession in the search result view and we can "
"now edit either or both."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1040
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1040
#: <included from
msgid "Search in order to report"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1043
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1043
#: <included from
msgid ""
"When searching in order to create a report, you want to be both specific "
"(you don't want to report about irrelevant objects) and broad (you don't "
"want to report about a single object)."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1047
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1047
#: <included from
msgid ""
"Sometimes the report itself suggests the query, as for example: all "
"plants in greenhouse 3; or: all plants belonging to endangered species "
"(we store this information in a note associated to the species); or: all "
"plants added to the collection this year; ::"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1056
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1056
#: <included from
msgid "Otherwise a flexible way to achieve this is to work with **Tags**."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1058
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1058
#: <included from
msgid "Using **Tags** as enhanced searching"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1061
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1061
#: <included from
msgid ""
"Sometimes we have to take the same action on objects of the same type, "
"but we don't manage to quickly think of a search query that would group "
"all that we need and exclude all we do not need."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1065
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1065
#: <included from
msgid ""
"This is one possible use of **Tags**.  We start with a selection, we tag "
"all objects in the selection under a new temporary tag. Let's say we call"
" it \"temporary\"."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1069
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1069
#: <included from
msgid ""
"We continue searching and adding objects to the temporary tag until the "
"tag identifies all that we need."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1072
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1072
#: <included from
msgid ""
"Finally from the Tags menu we select the one we just created (in our "
"example this corresponds to the search ``tag=\"temporary\"``) and we can "
"invoke the report."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1076
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1076
#: <included from
msgid ""
"When we're done with a temporary tag, there's no point in leaving it "
"around, so we just delete it."
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1081
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1081
#: <included from
msgid "Be aware of the available search strategies"
msgstr ""

#: ../../use_cases-jbq.rst ../../use_cases-jbq.rst:1084
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:1084
#: <included from
msgid ""
"This is nicely documented, \"più non dimandare\" and `read the docs "
"<searching.html>`_."
msgstr ""

#: ../../use_cases.rst:2
msgid "Contributed recipes collection"
msgstr ""

#: ../../use_cases.rst:4
msgid ""
"This page presents lists of use cases. If you're looking for straight, "
"practical information, you are at the right place. If you prefer a "
"thorough presentation of the software and database structure, check the "
"section `software for botanical gardens <goal.html#botanic-garden-"
"software>`_"
msgstr ""

#: ../../use_cases.rst:9
msgid ""
"All material here has been contributed by gardens using the software and "
"sharing their experiences back to the user community."
msgstr ""

#: ../../use_cases.rst:12
msgid "The authors of the software wish to thank all dearly."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:2
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:2
#: <included from
msgid "using ghini for a seed database"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:4
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:4
#: <included from
msgid ""
"We keep getting involved in groups focusing on endagered plant seeds.  "
"They want to note down when seeds come in, but also when they go out to "
"people that order the seed."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:8
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:8
#: <included from
msgid ""
"In ghini, we keep speaking of ›Plants‹, ›Locations‹, while such user "
"groups focus on ›Seeds‹ and ›Jars‹ and ›Drawers‹ and ›Boxes‹ and "
"›Envelopes‹.  So people wonder whether ghini could be adapted to their "
"use case, or for directions on how to develop their own database."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:13
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:13
#: <included from
msgid "Does ghini need being adapted for such a seed database?"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:16
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:16
#: <included from
msgid ""
"no it doesn't need any adaptation, it's just that you need to read some "
"of its terms differently."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:19
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:19
#: <included from
msgid ""
"the taxonomy part is just taxonomy, plant species information, no need to"
" explain that, no way to interpret it otherwise."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:22
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:22
#: <included from
msgid ""
"›Accessions‹ and ›Plants‹, you know what an ›Accession‹ is, but since "
"you're consistently handling ›Plants‹ still only in seed form, the "
"Wikipedia explanation of an accession sounds like this: it is a seed or "
"group of seeds that are of the same taxon, are of the same propagule type"
" (or treatment), were received from the same source, were received at the"
" same time."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:29
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:29
#: <included from
msgid ""
"If you hold seeds in jars, or in other sort of containers that is able to"
" hold hundreds of seeds, please make sure that a jar contains seeds of "
"just one accession, as above described: same taxon, same treatment, same "
"source, same time."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:34
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:34
#: <included from
msgid ""
"Each one of your ›Jars‹ of seeds is in ghini speak a ›Plant‹, and the "
"amount of seeds in the ›Jar‹ is the ›Plant‹ ›quantity‹.  An ›Envelope‹ is"
" just the same as a ›Jar‹: a container of seeds from the same "
"›Accession‹, just presumably smaller."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:39
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:39
#: <included from
msgid ""
"A ›Box‹ (where you keep several ›Envelopes‹) or a ›Drawer‹ (where you "
"keep several ›Jars‹) are in ghini speak a ›Location‹."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:42
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:42
#: <included from
msgid ""
"Since a ›Jar‹ or an ›Envelope‹ contains seeds from an ›Accession‹, you "
"will clearly label it with its ›Accession‹ code (and trailing ›Plant‹ "
"number).  You might write the amount of seeds, too, but this would be "
"repeating information from the database, and repeating information "
"introduces an inconsistency risk factor."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:48
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:48
#: <included from
msgid "How do I handle receiving a batch of seeds?"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:51
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:51
#: <included from
msgid ""
"When we receive seeds, we either collect them ourselves, or we receive it"
" from an other seed collector.  We handle receiving them possibly on the "
"spot, or with a small delay. Even when handled together with several "
"other batches of seeds we received, each batch keeps its individuality."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:57
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:57
#: <included from
msgid ""
"We want to be later able to find back, for example, how many seeds we "
"still have from a specific batch, or when we last received seeds from a "
"specific source."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:61
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:61
#: <included from
msgid ""
"As long as you put this information in the database, as long as you "
"follow the same convention when doing so, you will be able to write and "
"execute such queries using ghini."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:65
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:65
#: <included from
msgid ""
"One possibility, the one described here, is based on ›Notes‹.  (Ghini "
"does not, as yet, implement the concept \"Acquisition\". There is an "
"issue related to the Acquisition and Donation objects, but we haven't "
"quite formalized things yet.)"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:70
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:70
#: <included from
msgid ""
"You surely already use codes to identify a batch of seeds entering the "
"seed bank.  Just copy this code in a ›Note‹, category 'received', to each"
" ›Accession‹ in the received batch.  This will let you select the "
"›Accessions‹ by the query::"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:77
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:77
#: <included from
msgid ""
"Use the 'Source' tab if you think so, it offers space for indicating an "
"external source, or an expedition.  When receiving from an external "
"source, you can specify the code internal to their organization.  This "
"will be useful when requesting an extra batch."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:82
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:82
#: <included from
msgid "How do I handle sending seeds?"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:85
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:85
#: <included from
msgid ""
"what you physically do is to grab the desired amount of seeds of the "
"indicated species from a jar, put it in an envelope and send it.  what "
"you do from a point of view of the database is exactly the same, but "
"precisely described in a protocol:"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:90
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:90
#: <included from
msgid ""
"Use the database to identify the ›Jar‹ containing the desired amount of "
"the right seeds."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:92
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:92
#: <included from
msgid "remove that amount of seeds from the ›Jar‹ (decrement the quantity),"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:93
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:93
#: <included from
msgid "put the seeds in an ›Envelope‹ (yes, that's a database object)."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:94
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:94
#: <included from
msgid "send the envelope (but keep it in the database)."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:96
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:96
#: <included from
msgid "this in short."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:98
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:98
#: <included from
msgid ""
"When I send seeds, it's not just one bag, how does ghini              "
"help me keeping things together?"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:102
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:102
#: <included from
msgid ""
"There's two levels of keeping things together: one is while you're "
"preparing the sending, and then for later reference."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:105
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:105
#: <included from
msgid ""
"While preparing the sending, we advise you use a temporary ›Tag‹ on the "
"objects being edited."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:108
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:108
#: <included from
msgid ""
"For later reference, you will have common ›Note‹ texts, to identify "
"received and sent batches."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:111
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:111
#: <included from
msgid "Can you give a complete example?"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:114
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:114
#: <included from
msgid "Right.  Quite fair.  Let's see…"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:116
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:116
#: <included from
msgid ""
"Say you were requested to deliver 50 seeds of Parnassia palustris, 30 of "
"Gentiana pneumonanthe, 80 of Fritillaria meleagris, and 30 of Hypericum "
"pulchrum."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:120
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:120
#: <included from
msgid "**step 1**"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:122
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:122
#: <included from
msgid ""
"The first step is to check the quantities you have in house, and if you "
"do have enough, where you have them.  You do this per requested species::"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:128
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:128
#: <included from
msgid ""
"Expand in the results pane the ›Accession‹ from which you want to grab "
"the seeds, so you see the corresponding ›Jars‹, highlight one, and tag it"
" with a new ›Tag‹.  To do this the first time, go through the steps, just"
" once, of creating a new ›Tag‹.  The new tag becomes the active tag, and "
"subsequent tagging will be speedier.  I would call the tag ›sending‹, but"
" that's only for ease of exposition and further completely irrelevant."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:136
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:136
#: <included from
msgid ""
"Repeat the task for Gentiana pneumonanthe, Fritillaria meleagris, "
"Hypericum pulchrum::"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:143
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:143
#: <included from
msgid ""
"Again highilight the accession from which you can grab seeds, and hit "
"Ctrl-Y (this tags the highighted row with the active tag).  Don't worry "
"if nothing seems to happen when you hit Ctrl-Y, this is a silent "
"operation."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:148
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:148
#: <included from
msgid "**step 2**"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:150
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:150
#: <included from
msgid ""
"Now we prepare to go to the seeds bank, with the envelopes we want to "
"fill."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:153
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:153
#: <included from
msgid ""
"Select the ›sending‹ ›Tag‹ from the tags menu, this will bring back in "
"the results pane all the tagged ›Plants‹ (›Jars‹ or ›Envelopes‹), and "
"will tell you in which ›Location‹ (›Drawer‹ or ›Box‹) they are to be "
"found.  Write this information on each of your physical envelopes. Write "
"also the ›Species‹ name, and the quantity you can provide."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:159
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:159
#: <included from
msgid ""
"Walk now to your seeds bank and, for each of the envelopes you just "
"prepared, open the ›Location‹, grab the ›Plant‹, extract the correct "
"amount of seeds, put them in your physical envelope."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:163
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:163
#: <included from
msgid "And back to the database!"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:165
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:165
#: <included from
msgid "**step 3**"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:167
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:167
#: <included from
msgid ""
"If nobody used your workstation, you still have the Tag in the results "
"pane, and it's expanded so you see all the individual plants you tagged."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:171
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:171
#: <included from
msgid ""
"One by one, you have to ›split‹ the plant.  This is a standard operation "
"that you activate by right-clicking on the plant."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:174
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:174
#: <included from
msgid "A plant editor window comes in view, in 'split mode'."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:176
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:176
#: <included from
msgid ""
"Splitting a plant lets you create a database image of the plant group you"
" just physically created, eg: it lets you subtract 30 items from the "
"Gentiana pneumonanthe plant (group number one, that is the one in the "
"jar), and create a new plant group for the same accession.  A good "
"practice would be to specify as ›Location‹ for this new plant the 'out "
"box', that is, the envelope is on its way to leave the garden."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:183
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:183
#: <included from
msgid "Don't forget to delete the temporary 'sending' ›Tag‹."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:185
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:185
#: <included from
msgid "**step 4**"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:187
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:187
#: <included from
msgid ""
"Final step, it represents the physical step of sending the envelope, "
"possibly together with several other envelopes, in a single sending, "
"which should have a code."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:191
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:191
#: <included from
msgid ""
"Just as you did when you received a batch of plants, you work with notes,"
" this time the category is 'sent', and the note text is whatever you "
"normally do to identify a sending.  So suppose you're doing a second "
"sending to Pino in 2018, you add the note to each of the newly created "
"envelopes: category 'sent', text: '2018-pino-002'."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:197
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:197
#: <included from
msgid ""
"When you finally do send the envelopes, these stop being part of your "
"collection.  You still want to know that they have existed, but you do "
"not want to count them among the seeds that are available to you."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:201
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:201
#: <included from
msgid "Bring back all the plants in the sending '2018-pino-002'::"
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:205
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:205
#: <included from
msgid ""
"You now need to edit them one by one, mark the ›quantity‹ to zero, and "
"optionally specify the reason of the change, which would be ›given away‹,"
" and the recipient is already specified in the 'sent' ›Note‹."
msgstr ""

#: ../../use_cases-zadenbank.rst ../../use_cases-zadenbank.rst:209
#: /home/mario/Local/github/Ghini/ghini.desktop-docs.i18n/doc/use_cases.rst>:209
#: <included from
msgid ""
"This last operation could be automated, we're thinking of it, it would "
"become a script, acting on a selection.  Stay tuned."
msgstr ""

#: ../../users.rst:2
msgid "Managing Users"
msgstr ""

#: ../../users.rst:4
msgid "The Ghini users plugin is only available on PostgreSQL based databases."
msgstr ""

#: ../../users.rst:7
msgid ""
"The Ghini Users Plugin will allow you to create and manage the "
"permissions of users for your Ghini database."
msgstr ""

#: ../../users.rst:10
msgid ""
"You must log in to your database as a user with ``CREATEROLE`` privilege "
"in order to manage other users."
msgstr ""

#: ../../users.rst:14
msgid "Creating Users"
msgstr ""

#: ../../users.rst:15
msgid "To create a new user..."
msgstr ""

#: ../../users.rst:19
msgid "Permissions"
msgstr ""

#: ../../users.rst:20
msgid "Ghini allows read, write and execute permissions."
msgstr ""

